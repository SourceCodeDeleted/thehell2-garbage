//#pragma once
#ifndef _enums_h_
#define _enums_h_
#else
#error reinclude enums.h
#endif

#define bit_enum( E ) __forceinline E operator |(E a, E b){ return (E)((underlying_type<E>::type)a|b); }

enum MAIN_MENU
{
	MM_1_SINGLE_PLAYER = 1,
	MM_2_MULTI_PLAYER = 2,
	MM_3_PLAY_INTRO = 3,
	MM_4_SUPPORT = 4,
	MM_5_CREDITS = 5,
	MM_6_EXIT = 6,
};

enum HERO_MENU
{
	HM_1_NEW_GAME	= 1,
	HM_2_LOAD_GAME	= 2,
	HM_3_NETWORK_GAME		= 3,
	HM_4_CANCEL		= 4,
};

enum EnterisMapIndex 
{
	DEI_0_CHURCH_ENTER_FROM_TOWN	 = 0,
	DEI_12_CATACOMBS_ENTER_FROM_TOWN = 12,
	DEI_26_CRYPT_ENTER_FROM_TOWN	 = 26,
	DEI_36_ABYSS_ENTER_FROM_TOWN	 = 36,
	DEI_42_CHURCH_UP				 = 42,
	DEI_54_CHURCH_DOWN				 = 54,
	DEI_64_CATACOMB_UP				 = 64,
	DEI_68_CATACOMB_DOWN			 = 68,
	DEI_74_CATACOMB_TOWN			 = 74,
	DEI_78_CAVE_UP					 = 78,
	DEI_94_CAVE_DOWN				 = 94,
	DEI_104_CAVE_TOWN				 = 104,
	DEI_118_HELL_UP					 = 118,
	DEI_122_HELL_DOWN				 = 122,
	DEI_128_HELL_TOWN				 = 128,
	DEI_132_HELL_PANDEMONIUM_DOWN	 = 132,
	DEI_166_CRYPT_TOWN				 = 166,
	DEI_176_CRYPT_UP				 = 176,
	DEI_188_CRYPT_DOWN				 = 188,
	DEI_198_ABYSS_TOWN				 = 198,
	DEI_214_ABYSS_UP				 = 214,
	DEI_230_ABYSS_DOWN				 = 230,
};

// https://github.com/sanctuary/graphics/blob/master/l1/squares/README.md
enum CHURCH_WALL_AND_FLOOR_MAP: uchar
{
	CHR_WAFM_0 = 0,
	CHR_WAFM_1_SWALL_UNM_MIDDLE = 1,
	CHR_WAFM_2_SWALL_M_MIDLE = 2,
	CHR_WAFM_3_CORNER_BETWEEN_LU_ARCH_AND_RU_ARCH = 3,
	CHR_WAFM_4_CORNER_BETWEEN_LD_SWALL_AND_RD_SWALL = 4,
	CHR_WAFM_5_CORNER_BETWEEN_LD_ARCH_AND_RD_ARCH = 5,
	CHR_WAFM_6_SWALL_RU_END = 6,
	CHR_WAFM_7_SWALL_LU_END = 7,
	CHR_WAFM_8_ARCH_RU_END = 8,
	CHR_WAFM_9_ARCH_LU_END = 9,
	CHR_WAFM_10_CORNER_BETWEEN_LD_SWALL_AND_RD_ARCH = 10,
	CHR_WAFM_11_UNM_ARCH_MIDDLE = 11,
	CHR_WAFM_12_M_ARCH_MIDDLE = 12,
	CHR_WAFM_13_FLOOR = 13,
	CHR_WAFM_14_CORNER_BETWEEN_LD_ARCH_AND_RD_SWALL = 14,
	CHR_WAFM_15_PILLAR = 15,
	CHR_WAFM_16_WALL_LD_END = 16,
	CHR_WAFM_17_WALL_RD_END = 17,
	CHR_WAFM_18_BEYOND_WALL_IN_LU = 18,
	CHR_WAFM_19_BEYOND_WALL_IN_RU = 19,
	CHR_WAFM_20_BEYOND_WALL_CORNER_BETWEEN_LU_AND_RU = 20,
	CHR_WAFM_21_BEYOND_WALL_CORNER_BETWEEN_LD_AND_RD = 21,
	CHR_WAFM_22_BEYOND = 22,
	CHR_WAFM_23_BEYOND_WALL_IN_LU_2 = 23,
	CHR_WAFM_24_BEYOND_WALL_IN_RU_2 = 24,
	CHR_WAFM_25_UNM_MIDDLE_CLOSED_DOOR = 25,
	CHR_WAFM_26_M_MIDDLE_CLOSED_DOOR = 26,
	CHR_WAFM_27_CORNER_BETWEEN_LU_SWALL_AND_RU_BARS = 27,
	CHR_WAFM_28_CORNER_BETWEEN_LU_CDOOR_AND_RU_CDOOR = 28,
	CHR_WAFM_29_CORNER_BETWEEN_LU_BARS_AND_RU_BARS = 29,
	CHR_WAFM_30_CDOOR_RU_END = 30,
	CHR_WAFM_31_CDOOR_LU_END = 31,
	CHR_WAFM_32_BARS_RU_END = 32,
	CHR_WAFM_33_BARS_LU_END = 33,
	CHR_WAFM_34_CORNER_BETWEEN_LU_CDOOR_AND_RU_BARS = 34,
	CHR_WAFM_35_BARS_UNM_MIDDLE = 35,
	CHR_WAFM_36_BARS_M_MIDDLE = 36,
	CHR_WAFM_37_CORNER_BETWEEN_LU_BARS_AND_RU_CWALL = 37,
	CHR_WAFM_38_CORNER_BETWEEN_LU_BARS_AND_RU_ARCH = 38,
	CHR_WAFM_39_CORNER_BETWEEN_LU_BARS_AND_RU_CDOOR = 39,
	CHR_WAFM_40_CORNER_BETWEEN_LU_CDOOR_AND_RU_ARCH = 40,
	CHR_WAFM_41_CORNER_BETWEEN_LU_CDOOR_AND_RU_CWALL = 41,
	CHR_WAFM_42_CORNER_BETWEEN_LU_ARCH_AND_RU_CDOOR = 42,
	CHR_WAFM_43_CORNER_BETWEEN_LU_CWALL_AND_RU_CDOOR = 43,
	CHR_WAFM_44_CORNER_BETWEEN_LU_ARCH_AND_RU_BARS = 44,
	CHR_WAFM_45_PENTAGRAMM_1 = 45,
	CHR_WAFM_46_PENTAGRAMM_2 = 46,
	CHR_WAFM_47_PENTAGRAMM_3 = 47,
	CHR_WAFM_48_PENTAGRAMM_4 = 48,
	CHR_WAFM_49_PENTAGRAMM_5 = 49,
	CHR_WAFM_50_PENTAGRAMM_6 = 50,
	CHR_WAFM_51_PENTAGRAMM_7 = 51,
	CHR_WAFM_52_PENTAGRAMM_8 = 52,
	CHR_WAFM_53_PENTAGRAMM_9 = 53,
	CHR_WAFM_54_PENTAGRAMM_10 = 54,
	CHR_WAFM_55_PENTAGRAMM_11 = 55,
	CHR_WAFM_56_PENTAGRAMM_12 = 56,
	CHR_WAFM_57_CHURCH_LEDDER_TO_DOWN_1 = 57,
	CHR_WAFM_58_CHURCH_LEDDER_TO_DOWN_2 = 58,
	CHR_WAFM_59_CHURCH_LEDDER_TO_DOWN_3 = 59,
	CHR_WAFM_60_CHURCH_LEDDER_TO_DOWN_4 = 60,
	CHR_WAFM_61_CHURCH_LEDDER_TO_DOWN_5 = 61,
	CHR_WAFM_62_CHURCH_LEDDER_TO_DOWN_6 = 62,
	CHR_WAFM_63_CHURCH_LEDDER_TO_UP_1 = 63,
	CHR_WAFM_64_CHURCH_LEDDER_TO_UP_2 = 64,
	CHR_WAFM_65_CHURCH_LEDDER_TO_UP_3 = 65,
	CHR_WAFM_66_CHURCH_LEDDER_TO_UP_4 = 66,
	CHR_WAFM_67_CHURCH_LEDDER_TO_UP_5 = 67,
	CHR_WAFM_68_CHURCH_LEDDER_TO_UP_6 = 68,
	CHR_WAFM_69_LEORIC_COFFIN_1 = 69,
	CHR_WAFM_70_LEORIC_COFFIN_2 = 70,
	CHR_WAFM_71_LEORIC_COFFIN_3 = 71,
	CHR_WAFM_72_LEORIC_COFFIN_4 = 72,
	CHR_WAFM_73_LEORIC_COFFIN_5 = 73,
	CHR_WAFM_74_LEORIC_COFFIN_6 = 74,
	CHR_WAFM_75_LEORIC_COFFIN_7 = 75,
	CHR_WAFM_76_LEORIC_COFFIN_8 = 76,
	CHR_WAFM_77_LEORIC_COFFIN_9 = 77,
	CHR_WAFM_78_LEORIC_COFFIN_10 = 78,
	CHR_WAFM_79_HALL_OF_HEROS_1 = 79,
	CHR_WAFM_80_HALL_OF_HEROS_2 = 80,
	CHR_WAFM_81_HALL_OF_HEROS_3 = 81,
	CHR_WAFM_82_HALL_OF_HEROS_4 = 82,
	CHR_WAFM_83_HALL_OF_HEROS_5 = 83,
	CHR_WAFM_84_HALL_OF_HEROS_6 = 84,
	CHR_WAFM_85_HALL_OF_HEROS_7 = 85,
	CHR_WAFM_86_HALL_OF_HEROS_8 = 86,
	CHR_WAFM_87_HALL_OF_HEROS_9 = 87,
	CHR_WAFM_88_HALL_OF_HEROS_10 = 88,
	CHR_WAFM_89_HALL_OF_HEROS_11 = 89,
	CHR_WAFM_90_HALL_OF_HEROS_12 = 90,
	CHR_WAFM_91_HALL_OF_HEROS_13 = 91,
	CHR_WAFM_92_HALL_OF_HEROS_14 = 92,
	CHR_WAFM_93_HALL_OF_HEROS_15 = 93,
	CHR_WAFM_94_HALL_OF_HEROS_16 = 94,
	CHR_WAFM_95_HALL_OF_HEROS_17 = 95,
	CHR_WAFM_96_HALL_OF_HEROS_18 = 96,
	CHR_WAFM_97_SWALL_M_MIDLE_WITH_BLOOD_1 = 97,
	CHR_WAFM_98_SWALL_M_MIDLE_WITH_BLOOD_2 = 98,
	CHR_WAFM_99_SWALL_M_MIDLE_WITH_BLOOD_3 = 99,
	CHR_WAFM_100_SWALL_UNM_MIDLE_WITH_BLOOD_1 = 100,
	CHR_WAFM_101_SWALL_UNM_MIDLE_WITH_BLOOD_2 = 101,
	CHR_WAFM_102_ARCH_UNM_MIDLE_WITH_BLOOD_1 = 102,
	CHR_WAFM_103_CDOOR_LU_WITH_BLOOD_1 = 103,
	CHR_WAFM_104_FLOOR_WITH_BLOOD_1 = 104,
	CHR_WAFM_105_FLOOR_WITH_BLOOD_2 = 105,
	CHR_WAFM_106_FLOOR_WITH_BLOOD_3 = 106,
	CHR_WAFM_107_L_WALL_CROSS = 107,
	CHR_WAFM_108_R_WALL_CROSS = 108,
	CHR_WAFM_109_L_WALL_EMPTY_KNIGHT_HOLE = 109,
	CHR_WAFM_110_R_WALL_EMPTY_KNIGHT_HOLE = 110,
	CHR_WAFM_111_L_WALL_KNIGHT = 111,
	CHR_WAFM_112_R_WALL_KNIGHT = 112,
	CHR_WAFM_113_L_WALL_TORCH = 113,
	CHR_WAFM_114_R_WALL_TORCH = 114,
	CHR_WAFM_115_R_WALL_DAMAGED_1 = 115,
	CHR_WAFM_116_R_WALL_DAMAGED_2 = 116,
	CHR_WAFM_117_R_WALL_DAMAGED_3 = 117,
	CHR_WAFM_118_R_ARCH_DAMAGED_1 = 118,
	CHR_WAFM_119_R_WALL_DAMAGED_4 = 119,
	CHR_WAFM_120_R_WALL_DAMAGED_5 = 120,
	CHR_WAFM_121_L_ARCH_DAMAGED_1 = 121,
	CHR_WAFM_122_L_WALL_DAMAGED_1 = 122,
	CHR_WAFM_123_L_ARCH_DAMAGED_2 = 123,
	CHR_WAFM_124_L_WALL_DAMAGED_2 = 124,
	CHR_WAFM_125_FLOOR_DAMAGED_1 = 125,
	CHR_WAFM_126_L_WALL_DAMAGED_3 = 126,
	CHR_WAFM_127_L_WALL_DAMAGED_4 = 127,
	CHR_WAFM_128_ON_FLOOR_TORCH = 128,
	CHR_WAFM_129_ON_FLOOR_TORCH_SHADOW_1 = 129,
	CHR_WAFM_130_ON_FLOOR_TORCH_SHADOW_2 = 130,
	CHR_WAFM_131_RED_SARCOFAGUS_PART_1 = 131,
	CHR_WAFM_132_RED_SARCOFAGUS_PART_2 = 132,
	CHR_WAFM_133_FLOOR_WITH_CRUSHED_ROCK_1 = 133,
	CHR_WAFM_134_FLOOR_WITH_CRUSHED_ROCK_2 = 134,
	CHR_WAFM_135_FLOOR_WITH_CRUSHED_ROCK_3 = 135,
	CHR_WAFM_136_FLOOR_WITH_CRUSHED_ROCK_4 = 136,
	CHR_WAFM_137_FLOOR_WITH_CRUSHED_ROCK_5 = 137,
	CHR_WAFM_138_FLOOR_WITH_CRUSHED_ROCK_6 = 138,
	CHR_WAFM_139_TILE_WITH_SHADOW_1 = 139,
	CHR_WAFM_140_TILE_WITH_SHADOW_2 = 140,
	CHR_WAFM_141_TILE_WITH_SHADOW_3 = 141,
	CHR_WAFM_142_TILE_WITH_SHADOW_4 = 142,
	CHR_WAFM_143_TILE_WITH_SHADOW_5 = 143,
	CHR_WAFM_144_TILE_WITH_SHADOW_6 = 144,
	CHR_WAFM_145_TILE_WITH_SHADOW_7 = 145,
	CHR_WAFM_146_TILE_WITH_SHADOW_8 = 146,
	CHR_WAFM_147_TILE_WITH_SHADOW_9 = 147,
	CHR_WAFM_148_TILE_WITH_SHADOW_10 = 148,
	CHR_WAFM_149_TILE_WITH_SHADOW_11 = 149,
	CHR_WAFM_150_TILE_WITH_SHADOW_12 = 150,
	CHR_WAFM_151_TILE_WITH_SHADOW_13 = 151,
	CHR_WAFM_152_TILE_WITH_SHADOW_14 = 152,
	CHR_WAFM_153_TILE_WITH_SHADOW_15 = 153,
	CHR_WAFM_154_TILE_WITH_SHADOW_16 = 154,
	CHR_WAFM_155_TILE_WITH_SHADOW_17 = 155,
	CHR_WAFM_156_TILE_WITH_SHADOW_18 = 156,
	CHR_WAFM_157_TILE_WITH_SHADOW_19 = 157,
	CHR_WAFM_158_L_WALL_R_HHWALL = 158,
	CHR_WAFM_159_L_ARCH_R_HHWALL = 159,
	CHR_WAFM_160_L_HHWALL_R_WALL = 160,
	CHR_WAFM_161_L_HHWALL_R_ARCH = 161,
	CHR_WAFM_162_FLOOR_2 = 162,
	CHR_WAFM_163_FLOOR_3 = 163,
	CHR_WAFM_164_L_CDOOR_R_HHWALL = 164,
	CHR_WAFM_165_L_HHWALL_R_CDOOR = 165,
	CHR_WAFM_166_BUCHER_ROOM_1 = 166,
	CHR_WAFM_167_BUCHER_ROOM_2 = 167,
	CHR_WAFM_168_BUCHER_ROOM_3 = 168,
	CHR_WAFM_169_BUCHER_ROOM_4 = 169,
	CHR_WAFM_170_BUCHER_ROOM_5 = 170,
	CHR_WAFM_171_BUCHER_ROOM_6 = 171,
	CHR_WAFM_172_BUCHER_ROOM_7 = 172,
	CHR_WAFM_173_BUCHER_ROOM_8 = 173,
	CHR_WAFM_174_BUCHER_ROOM_9 = 174,
	CHR_WAFM_175_UNM_ODOOR = 175,
	CHR_WAFM_176_M_ODOOR = 176,
	CHR_WAFM_177_L_ODOOR_R_ODOOR = 177,
	CHR_WAFM_178_ODOOR_RU_END = 178,
	CHR_WAFM_179_ODOOR_LU_END = 179,
	CHR_WAFM_180_L_ODOOR_R_BARS = 180,
	CHR_WAFM_181_L_BARS_R_ODOOR = 181,
	CHR_WAFM_182_L_ODOOR_R_ARCH = 182,
	CHR_WAFM_183_L_ODOOR_R_WALL = 183,
	CHR_WAFM_184_L_ARCH_R_ODOOR = 184,
	CHR_WAFM_185_L_WALL_R_ODOOR = 185,
	CHR_WAFM_186_ODOOR_LU_WITH_BLOOD_1 = 186,
	CHR_WAFM_187_L_ODOOR_R_HHWALL = 187,
	CHR_WAFM_188_L_HHWALL_R_ODOOR = 188,
	CHR_WAFM_189_L_ODOOR_R_CDOOR = 189,
	CHR_WAFM_190_L_CDOOR_R_ODOOR = 190,
	CHR_WAFM_191_UNM_WALL = 191,
	CHR_WAFM_192_M_WALL = 192,
	CHR_WAFM_193_L_LEORIC_ARCHDOOR = 193,
	CHR_WAFM_194_R_LEORIC_ARCHDOOR = 194,
	CHR_WAFM_195_BEYOND = 195,
	CHR_WAFM_196_BEYOND = 196,
	CHR_WAFM_197_L_LEORIC_ARCHDOOR = 197,
	CHR_WAFM_198_R_LEORIC_ARCHDOOR = 198,
	CHR_WAFM_199_BEYOND = 199,
	CHR_WAFM_200_BEYOND = 200,
	CHR_WAFM_201_BEYOND = 201,
	CHR_WAFM_202_BEYOND = 202,
	CHR_WAFM_203_BEYOND = 203,
	CHR_WAFM_204_BEYOND = 204,
	CHR_WAFM_205_BEYOND = 205,
	CHR_WAFM_206_POISON_WELL_ENTER = 206,
	CHR_WAFM_207 = 207,
	CHR_WAFM_208 = 208,
	CHR_WAFM_209 = 209,
	CHR_WAFM_210 = 210,
	CHR_WAFM_211 = 211,
	CHR_WAFM_212 = 212,
	CHR_WAFM_213 = 213,
	CHR_WAFM_214 = 214,
	CHR_WAFM_215 = 215,
	CHR_WAFM_216 = 216,
	CHR_WAFM_217 = 217,
	CHR_WAFM_218 = 218,
	CHR_WAFM_219 = 219,
	CHR_WAFM_220 = 220,
	CHR_WAFM_221 = 221,
	CHR_WAFM_222 = 222,
	CHR_WAFM_223 = 223,
	CHR_WAFM_224 = 224,
	CHR_WAFM_225 = 225,
	CHR_WAFM_226 = 226,
	CHR_WAFM_227 = 227,
	CHR_WAFM_228 = 228,
	CHR_WAFM_229 = 229,
	CHR_WAFM_230 = 230,
	CHR_WAFM_231 = 231,
	CHR_WAFM_232 = 232,
	CHR_WAFM_233 = 233,
	CHR_WAFM_234 = 234,
	CHR_WAFM_235 = 235,
	CHR_WAFM_236 = 236,
	CHR_WAFM_237 = 237,
	CHR_WAFM_238 = 238,
	CHR_WAFM_239 = 239,
	CHR_WAFM_240 = 240,
	CHR_WAFM_241 = 241,
	CHR_WAFM_242 = 242,
	CHR_WAFM_243 = 243,
	CHR_WAFM_244 = 244,
	CHR_WAFM_245 = 245,
	CHR_WAFM_246 = 246,
	CHR_WAFM_247 = 247,
	CHR_WAFM_248 = 248,
	CHR_WAFM_249 = 249,
	CHR_WAFM_250 = 250,
	CHR_WAFM_251 = 251,
	CHR_WAFM_252 = 252,
	CHR_WAFM_253 = 253,
	CHR_WAFM_254 = 254,
	CHR_WAFM_255 = 255,
};

enum CATA_WALL_AND_FLOOR_MAP: uchar
{
	CATA_WAFM_1_LU_WALL	=		1,
	CATA_WAFM_2_RU_WALL	=		2,
	CATA_WAFM_3_FLOOR	=		3,
	CATA_WAFM_4_LU_ODOOR	=		4,
	CATA_WAFM_5_RU_ODOOR	=		5,
	CATA_WAFM_6_CORNER	=		6,
	CATA_WAFM_7_CORNER	=		7,
	CATA_WAFM_8_CORNER	=		8,
	CATA_WAFM_9_CORNER	=		9,
	CATA_WAFM_10_RD_WALL	=	10,
	CATA_WAFM_11_LD_WALL	=	11,
	CATA_WAFM_12_BEYOND	=	12,
	CATA_WAFM_13_CORNER	=	13,
	CATA_WAFM_14_CORNER	=	14,
	CATA_WAFM_15_CORNER	=	15,
	CATA_WAFM_16_CORNER	=	16,
	CATA_WAFM_17	=	17,
	CATA_WAFM_18	=	18,
	CATA_WAFM_19	=	19,
	CATA_WAFM_20	=	20,
	CATA_WAFM_21	=	21,
	CATA_WAFM_22	=	22,
	CATA_WAFM_23	=	23,
	CATA_WAFM_24	=	24,
	CATA_WAFM_25	=	25,
	CATA_WAFM_26	=	26,
	CATA_WAFM_27	=	27,
	CATA_WAFM_28	=	28,
	CATA_WAFM_29	=	29,
	CATA_WAFM_30	=	30,
	CATA_WAFM_31	=	31,
	CATA_WAFM_32	=	32,
	CATA_WAFM_33	=	33,
	CATA_WAFM_34	=	34,
	CATA_WAFM_35	=	35,
	CATA_WAFM_36	=	36,
	CATA_WAFM_37	=	37,
	CATA_WAFM_38	=	38,
	CATA_WAFM_39	=	39,
	CATA_WAFM_40	=	40,
	CATA_WAFM_41	=	41,
	CATA_WAFM_42	=	42,
	CATA_WAFM_43	=	43,
	CATA_WAFM_44	=	44,
	CATA_WAFM_45	=	45,
	CATA_WAFM_46	=	46,
	CATA_WAFM_47	=	47,
	CATA_WAFM_48	=	48,
	CATA_WAFM_49	=	49,
	CATA_WAFM_50	=	50,
	CATA_WAFM_51	=	51,
	CATA_WAFM_52	=	52,
	CATA_WAFM_53	=	53,
	CATA_WAFM_54	=	54,
	CATA_WAFM_55	=	55,
	CATA_WAFM_56	=	56,
	CATA_WAFM_57	=	57,
	CATA_WAFM_58	=	58,
	CATA_WAFM_59	=	59,
	CATA_WAFM_60	=	60,
	CATA_WAFM_61	=	61,
	CATA_WAFM_62	=	62,
	CATA_WAFM_63	=	63,
	CATA_WAFM_64	=	64,
	CATA_WAFM_65	=	65,
	CATA_WAFM_66	=	66,
	CATA_WAFM_67	=	67,
	CATA_WAFM_68	=	68,
	CATA_WAFM_69	=	69,
	CATA_WAFM_70	=	70,
	CATA_WAFM_71	=	71,
	CATA_WAFM_72	=	72,
	CATA_WAFM_73	=	73,
	CATA_WAFM_74	=	74,
	CATA_WAFM_75	=	75,
	CATA_WAFM_76	=	76,
	CATA_WAFM_77	=	77,
	CATA_WAFM_78	=	78,
	CATA_WAFM_79	=	79,
	CATA_WAFM_80	=	80,
	CATA_WAFM_81	=	81,
	CATA_WAFM_82	=	82,
	CATA_WAFM_83	=	83,
	CATA_WAFM_84	=	84,
	CATA_WAFM_85	=	85,
	CATA_WAFM_86	=	86,
	CATA_WAFM_87	=	87,
	CATA_WAFM_88	=	88,
	CATA_WAFM_89	=	89,
	CATA_WAFM_90	=	90,
	CATA_WAFM_91	=	91,
	CATA_WAFM_92	=	92,
	CATA_WAFM_93	=	93,
	CATA_WAFM_94	=	94,
	CATA_WAFM_95	=	95,
	CATA_WAFM_96	=	96,
	CATA_WAFM_97	=	97,
	CATA_WAFM_98	=	98,
	CATA_WAFM_99	=	99,
	CATA_WAFM_100	=	100,
	CATA_WAFM_101	=	101,
	CATA_WAFM_102	=	102,
	CATA_WAFM_103	=	103,
	CATA_WAFM_104	=	104,
	CATA_WAFM_105	=	105,
	CATA_WAFM_106	=	106,
	CATA_WAFM_107	=	107,
	CATA_WAFM_108	=	108,
	CATA_WAFM_109	=	109,
	CATA_WAFM_110	=	110,
	CATA_WAFM_111	=	111,
	CATA_WAFM_112	=	112,
	CATA_WAFM_113	=	113,
	CATA_WAFM_114	=	114,
	CATA_WAFM_115	=	115,
	CATA_WAFM_116	=	116,
	CATA_WAFM_117	=	117,
	CATA_WAFM_118	=	118,
	CATA_WAFM_119	=	119,
	CATA_WAFM_120	=	120,
	CATA_WAFM_121	=	121,
	CATA_WAFM_122	=	122,
	CATA_WAFM_123	=	123,
	CATA_WAFM_124	=	124,
	CATA_WAFM_125	=	125,
	CATA_WAFM_126	=	126,
	CATA_WAFM_127	=	127,
	CATA_WAFM_128	=	128,
	CATA_WAFM_129	=	129,
	CATA_WAFM_130	=	130,
	CATA_WAFM_131	=	131,
	CATA_WAFM_132	=	132,
	CATA_WAFM_133	=	133,
	CATA_WAFM_134	=	134,
	CATA_WAFM_135	=	135,
	CATA_WAFM_136	=	136,
	CATA_WAFM_137	=	137,
	CATA_WAFM_138	=	138,
	CATA_WAFM_139	=	139,
	CATA_WAFM_140	=	140,
	CATA_WAFM_141	=	141,
	CATA_WAFM_142	=	142,
	CATA_WAFM_143	=	143,
	CATA_WAFM_144	=	144,
	CATA_WAFM_145	=	145,
	CATA_WAFM_146	=	146,
	CATA_WAFM_147	=	147,
	CATA_WAFM_148	=	148,
	CATA_WAFM_149	=	149,
	CATA_WAFM_150	=	150,
	CATA_WAFM_151	=	151,
	CATA_WAFM_152	=	152,
	CATA_WAFM_153	=	153,
	CATA_WAFM_154	=	154,
	CATA_WAFM_155	=	155,
	CATA_WAFM_156	=	156,
	CATA_WAFM_157	=	157,
	CATA_WAFM_158	=	158,
	CATA_WAFM_159	=	159,
	CATA_WAFM_160	=	160,
	CATA_WAFM_161	=	161,
};

enum CAVE_WALL_AND_FLOOR_MAP: uchar
{
	CAVE_WAFM_1_CORNER_IN_LEFT = 1,
	CAVE_WAFM_2_WALL_IN_LD = 2,
	CAVE_WAFM_3_CORNER_IN_RIGHT = 3,
	CAVE_WAFM_4_WALL_IN_RD = 4,
	CAVE_WAFM_5_CORNER_IN_DOWN = 5,
	CAVE_WAFM_6_CORNER_IN_DOWN = 6,
	CAVE_WAFM_7_FLOOR = 7,
	CAVE_WAFM_8_BEYOND = 8,
	CAVE_WAFM_9_SWALL_UNM_MIDDLE = 9,
	CAVE_WAFM_10_SWALL_M_MIDLE = 10,
	CAVE_WAFM_11_CORNER_IN_UP = 11,
	CAVE_WAFM_12_CORNER_IN_UP = 12,
	CAVE_WAFM_13_CORNER_IN_RIGHT = 13,
	CAVE_WAFM_14_CORNER_IN_LEFT = 14,
	CAVE_WAFM_15_LAVA_RIVER_VERT_1 = 15,
	CAVE_WAFM_16_LAVA_RIVER_VERT_2 = 16,
	CAVE_WAFM_17_LAVA_RIVER_HORIZ_1 = 17,
	CAVE_WAFM_18_LAVA_RIVER_HORIZ_2 = 18,
	CAVE_WAFM_19_LAVA_RIVER_CORNER = 19,
	CAVE_WAFM_20_LAVA_RIVER_CORNER = 20,
	CAVE_WAFM_21_LAVA_RIVER_CORNER = 21,
	CAVE_WAFM_22_LAVA_RIVER_CORNER = 22,
	CAVE_WAFM_23_LAVA_FROM_WALL = 23,
	CAVE_WAFM_24_LAVA_FROM_WALL = 24,
	CAVE_WAFM_25_LAVA = 25,
	CAVE_WAFM_26_LAVA = 26,
	CAVE_WAFM_27_LAVA = 27,
	CAVE_WAFM_28_LAVA = 28,
	CAVE_WAFM_29_LAVA = 29,
	CAVE_WAFM_30_LAVA = 30,
	CAVE_WAFM_31_LAVA = 31,
	CAVE_WAFM_32_LAVA = 32,
	CAVE_WAFM_33_LAVA = 33,
	CAVE_WAFM_34_LAVA = 34,
	CAVE_WAFM_35_LAVA = 35,
	CAVE_WAFM_36_LAVA = 36,
	CAVE_WAFM_37_LAVA = 37,
	CAVE_WAFM_38_LAVA = 38,
	CAVE_WAFM_39_LAVA = 39,
	CAVE_WAFM_40_LAVA = 40,
	CAVE_WAFM_41_LAVA = 41,
	CAVE_WAFM_42_LAVA_FROM_WALL = 42,
	CAVE_WAFM_43_LAVA_FROM_WALL = 43,
	CAVE_WAFM_44_LAVA_RIVER_VERT_PASSING = 44,
	CAVE_WAFM_45_LAVA_RIVER_HORIZ_PASSING = 45,
	CAVE_WAFM_46_ENTER_TO_DOWN = 46,
	CAVE_WAFM_47_ENTER_TO_DOWN = 47,
	CAVE_WAFM_48_ENTER_TO_UP = 48,
	CAVE_WAFM_49_ENTER_TO_UP = 49,
	CAVE_WAFM_50_ENTER_TO_UP = 50,
	CAVE_WAFM_51_ENTER_TO_UP = 51,
	CAVE_WAFM_52_STALAGMIT_2 = 52,
	CAVE_WAFM_53_STALAGMIT_3 = 53,
	CAVE_WAFM_54_STALAGMIT_4 = 54,
	CAVE_WAFM_55_STALAGMIT_1 = 55,
	CAVE_WAFM_56_STALAGMIT_1 = 56,
	CAVE_WAFM_57_STALAGMIT_1 = 57,
	CAVE_WAFM_58_STALAGMIT_1 = 58,
	CAVE_WAFM_59_STALAGNAT_1 = 59,
	CAVE_WAFM_60_STALAGNAT_1 = 60,
	CAVE_WAFM_61_STALAGNAT_1 = 61,
	CAVE_WAFM_62_STALAGNAT_1 = 62,
	CAVE_WAFM_63_STALAGNAT_2 = 63,
	CAVE_WAFM_64_STALAGNAT_2 = 64,
	CAVE_WAFM_65_STALAGNAT_2 = 65,
	CAVE_WAFM_66_STALAGNAT_2 = 66,
	CAVE_WAFM_67_STALAGMIT_5 = 67,
	CAVE_WAFM_68_STALAGNAT_ON_WALL_1 = 68,
	CAVE_WAFM_69_STALAGNAT_ON_WALL_2 = 69,
	CAVE_WAFM_70 = 70,
	CAVE_WAFM_71 = 71,
	CAVE_WAFM_72 = 72,
	CAVE_WAFM_73 = 73,
	CAVE_WAFM_74_STALAGNAT_3 = 74,
	CAVE_WAFM_75_STALAGNAT_3 = 75,
	CAVE_WAFM_76_STALAGNAT_3 = 76,
	CAVE_WAFM_77_STALAGNAT_3 = 77,
	CAVE_WAFM_78_STALAGNAT_3 = 78,
	CAVE_WAFM_79_STALAGNAT_4 = 79,
	CAVE_WAFM_80_STALAGNAT_4 = 80,
	CAVE_WAFM_81_STALAGNAT_4 = 81,
	CAVE_WAFM_82_STALAGNAT_4 = 82,
	CAVE_WAFM_83_STALAGNAT_4 = 83,
	CAVE_WAFM_84_CRACK_IN_WALL_1 = 84,
	CAVE_WAFM_85_CRACK_IN_WALL_1 = 85,
	CAVE_WAFM_86_CRACK_IN_WALL_2 = 86,
	CAVE_WAFM_87_CRACK_IN_WALL_2 = 87,
	CAVE_WAFM_88_CRACK_IN_WALL_3 = 88,
	CAVE_WAFM_89_CRACK_IN_WALL_3 = 89,
	CAVE_WAFM_90_CRACK_IN_WALL_4 = 90,
	CAVE_WAFM_91_CRACK_IN_WALL_4 = 91,
	CAVE_WAFM_92_CRACK_IN_WALL_5 = 92,
	CAVE_WAFM_93_CRACK_IN_WALL_5 = 93,
	CAVE_WAFM_94_CRACK_IN_WALL_6 = 94,
	CAVE_WAFM_95_CRACK_IN_WALL_6 = 95,
	CAVE_WAFM_96_CRACK_IN_WALL_7 = 96,
	CAVE_WAFM_97_CRACK_IN_WALL_8 = 97,
	CAVE_WAFM_98_CRACK_IN_WALL_9 = 98,
	CAVE_WAFM_99_CRACK_IN_WALL_10 = 99,
	CAVE_WAFM_100_CRACK_IN_WALL_11 = 100,
	CAVE_WAFM_101_CRACK_IN_WALL_7 = 101,
	CAVE_WAFM_102_CRACK_IN_WALL_8 = 102,
	CAVE_WAFM_103_CRACK_IN_WALL_9 = 103,
	CAVE_WAFM_104_CRACK_IN_WALL_10 = 104,
	CAVE_WAFM_105_CRACK_IN_WALL_11 = 105,
	CAVE_WAFM_106_FLOOR_VARIATION_1 = 106,
	CAVE_WAFM_107_FLOOR_VARIATION_2 = 107,
	CAVE_WAFM_108_FLOOR_VARIATION_3 = 108,
	CAVE_WAFM_109_SWALL_UNM_MIDDLE_VARIATION = 109,
	CAVE_WAFM_110_SWALL_M_MIDLE_VARIATION = 110,
	CAVE_WAFM_111 = 111,
	CAVE_WAFM_112 = 112,

	CAVE_WAFM_113 = 113,
	CAVE_WAFM_114 = 114,
	CAVE_WAFM_115 = 115,
	CAVE_WAFM_116 = 116,
	CAVE_WAFM_117 = 117,
	CAVE_WAFM_118 = 118,
	CAVE_WAFM_119 = 119,

	CAVE_WAFM_120 = 120,

	CAVE_WAFM_121_UNM_STONE_WITH_WOOD_MIDDLE = 121,
	CAVE_WAFM_122_UNM_STONE_WITH_WOOD_DOWN_END = 122,
	CAVE_WAFM_123_UNM_STONE_WITH_WOOD_UP_END = 123,
	CAVE_WAFM_124_UNM_STONE_WITH_WOOD_MIDDLE_BROKEN = 124,
	CAVE_WAFM_125_TEMP_ENTER_TO_TOWN_AND_STONE_WITH_WOOD_CORNER = 125,
	CAVE_WAFM_126_M_STONE_WITH_WOOD_MIDDLE = 126,
	CAVE_WAFM_127_M_STONE_WITH_WOOD_UP_END = 127,
	CAVE_WAFM_128_M_STONE_WITH_WOOD_DOWN_END = 128,
	CAVE_WAFM_129_M_STONE_WITH_WOOD_MIDDLE_BROKEN = 129,

	CAVE_WAFM_130_WOOD_WALL_CORNER_UNM_STONE_M_WOOD = 130,
	CAVE_WAFM_131_WOOD_WALL_CORNER_M_STONE_UNM_WOOD = 131,
	CAVE_WAFM_132_WOOD_WALL_CORNER_UNM_STONE_M_WOOD = 132,
	CAVE_WAFM_133_WOOD_WALL_CORNER_M_STONE_UNM_WOOD = 133,
	CAVE_WAFM_134_WOOD_WALL_M_MIDDLE = 134,
	CAVE_WAFM_135_WOOD_WALL_UNM_MIDDLE = 135,
	CAVE_WAFM_136_WOOD_WALL_M_MIDDLE_BROKEN = 136,
	CAVE_WAFM_137_WOOD_WALL_UNM_MIDDLE_BROKEN = 137,
	CAVE_WAFM_138_WOOD_WALL_WOOD_CORNER = 138,
	CAVE_WAFM_139_WOOD_WALL_BROKEN_WOOD_CORNER = 139,
	CAVE_WAFM_140_WOOD_WALL_BROKEN_WOOD_CORNER = 140,
	CAVE_WAFM_141_WOOD_WALL = 141,
	CAVE_WAFM_142_WOOD_WALL = 142,
	CAVE_WAFM_143_WOOD_WALL = 143,
	CAVE_WAFM_144_WOOD_WALL = 144,
	CAVE_WAFM_145_WOOD_WALL = 145,
	CAVE_WAFM_146_WOOD_WALL_M_CDOOR = 146,
	CAVE_WAFM_147_WOOD_WALL_UNM_CDOOR = 147,
	CAVE_WAFM_148_WOOD_WALL_M_ODOOR = 148,
	CAVE_WAFM_149_WOOD_WALL_UNM_ODOOR = 149,
	CAVE_WAFM_150_WOOD_WALL = 150,
	CAVE_WAFM_151_WOOD_WALL = 151,
	CAVE_WAFM_152_WOOD_WALL = 152,
	CAVE_WAFM_153_ENTER_TO_TOWN = 153,
	CAVE_WAFM_154_ENTER_TO_TOWN = 154,
	CAVE_WAFM_155_ENTER_TO_TOWN = 155,
	CAVE_WAFM_156_ENTER_TO_TOWN = 156,
};

enum HELL_WALL_AND_FLOOR_MAP: uchar
{
	HELL_WAFM_1		=	1,
	HELL_WAFM_2		=	2,
	HELL_WAFM_3		=	3,
	HELL_WAFM_4		=	4,
	HELL_WAFM_5		=	5,
	HELL_WAFM_6_FLOOR		=	6,
	HELL_WAFM_7		=	7,
	HELL_WAFM_8		=	8,
	HELL_WAFM_9		=	9,
	HELL_WAFM_10	=	10,
	HELL_WAFM_11	=	11,
	HELL_WAFM_12	=	12,
	HELL_WAFM_13	=	13,
	HELL_WAFM_14	=	14,
	HELL_WAFM_15	=	15,
	HELL_WAFM_16	=	16,
	HELL_WAFM_17	=	17,
	HELL_WAFM_18	=	18,
	HELL_WAFM_19	=	19,
	HELL_WAFM_20	=	20,
	HELL_WAFM_21	=	21,
	HELL_WAFM_22_BEYOND_RU_LU_CORNER_AND_WALL_CONTINUE_IN_RIGHT	=	22,
	HELL_WAFM_23_BEYOND_RU_LU_CORNER_AND_WALL_CONTINUE_IN_LEFT	=	23,
	HELL_WAFM_24	=	24,
	HELL_WAFM_25_BEYOND	=	25,
	HELL_WAFM_26_BEYOND	=	26,
	HELL_WAFM_27_BEYOND_WALL_CORNER_SEE_LEFT	=	27,
	HELL_WAFM_28_BEYOND_WALL_CORNER_SEE_RIGHT	=	28,
	HELL_WAFM_29	=	29,
	HELL_WAFM_30_BEYOND	=	30,
	HELL_WAFM_31_ENTER_TO_UP	=	31,
	HELL_WAFM_32_ENTER_TO_UP	=	32,
	HELL_WAFM_33_ENTER_TO_UP	=	33,
	HELL_WAFM_34_ENTER_TO_UP	=	34,
	HELL_WAFM_35_ENTER_TO_UP	=	35,
	HELL_WAFM_36_ENTER_TO_UP	=	36,
	HELL_WAFM_37_ENTER_TO_UP	=	37,
	HELL_WAFM_38_ENTER_TO_UP	=	38,
	HELL_WAFM_39_ENTER_TO_DOWN	=	39,
	HELL_WAFM_40_ENTER_TO_DOWN	=	40,
	HELL_WAFM_41_ENTER_TO_DOWN	=	41,
	HELL_WAFM_42_ENTER_TO_DOWN	=	42,
	HELL_WAFM_43_ENTER_TO_DOWN	=	43,
	HELL_WAFM_44_ENTER_TO_DOWN	=	44,
	HELL_WAFM_45_ENTER_TO_DOWN	=	45,
	HELL_WAFM_46_ENTER_TO_DOWN	=	46,
	HELL_WAFM_47	=	47,
	HELL_WAFM_48	=	48,
	HELL_WAFM_49	=	49,
	HELL_WAFM_50	=	50,
	HELL_WAFM_51	=	51,
	HELL_WAFM_52	=	52,
	HELL_WAFM_53	=	53,
	HELL_WAFM_54	=	54,
	HELL_WAFM_55	=	55,
	HELL_WAFM_56	=	56,
	HELL_WAFM_57	=	57,
	HELL_WAFM_58	=	58,
	HELL_WAFM_59	=	59,
	HELL_WAFM_60	=	60,
	HELL_WAFM_61	=	61,
	HELL_WAFM_62	=	62,
	HELL_WAFM_63	=	63,
	HELL_WAFM_64	=	64,
	HELL_WAFM_65	=	65,
	HELL_WAFM_66	=	66,
	HELL_WAFM_67	=	67,
	HELL_WAFM_68	=	68,
	HELL_WAFM_69	=	69,
	HELL_WAFM_70	=	70,
	HELL_WAFM_71	=	71,
	HELL_WAFM_72	=	72,
	HELL_WAFM_73	=	73,
	HELL_WAFM_74	=	74,
	HELL_WAFM_75	=	75,
	HELL_WAFM_76	=	76,
	HELL_WAFM_77	=	77,
	HELL_WAFM_78	=	78,
	HELL_WAFM_79	=	79,
	HELL_WAFM_80	=	80,
	HELL_WAFM_81	=	81,
	HELL_WAFM_82	=	82,
	HELL_WAFM_83	=	83,
	HELL_WAFM_84	=	84,
	HELL_WAFM_85	=	85,
	HELL_WAFM_86	=	86,
	HELL_WAFM_87	=	87,
	HELL_WAFM_88	=	88,
	HELL_WAFM_89	=	89,
	HELL_WAFM_90	=	90,
	HELL_WAFM_91	=	91,
	HELL_WAFM_92	=	92,
	HELL_WAFM_93	=	93,
	HELL_WAFM_94	=	94,
	HELL_WAFM_95_BONE_FROM_FLOOR_1	=	95,
	HELL_WAFM_96_BONE_FROM_FLOOR_2	=	96,
	HELL_WAFM_97_BONE_FROM_FLOOR_3	=	97,
	HELL_WAFM_98_PANDEMIUM_ENTER_DEACTIVATED	=	98,
	HELL_WAFM_99_PANDEMIUM_ENTER_DEACTIVATED	=	99,
	HELL_WAFM_100_PANDEMIUM_ENTER_DEACTIVATED	=	100,
	HELL_WAFM_101_PANDEMIUM_ENTER_DEACTIVATED	=	101,
	HELL_WAFM_102_PANDEMIUM_ENTER_DEACTIVATED	=	102,
	HELL_WAFM_103_PANDEMIUM_ENTER_DEACTIVATED	=	103,
	HELL_WAFM_104_PANDEMIUM_ENTER_DEACTIVATED	=	104,
	HELL_WAFM_105_PANDEMIUM_ENTER_DEACTIVATED	=	105,
	HELL_WAFM_106_PANDEMIUM_ENTER_DEACTIVATED	=	106,
	HELL_WAFM_107_PANDEMIUM_ENTER_ACTIVATED	=	107,
	HELL_WAFM_108_PANDEMIUM_ENTER_ACTIVATED	=	108,
	HELL_WAFM_109_PANDEMIUM_ENTER_ACTIVATED	=	109,
	HELL_WAFM_110_PANDEMIUM_ENTER_ACTIVATED	=	110,
	HELL_WAFM_111_PANDEMIUM_ENTER_ACTIVATED	=	111,
	HELL_WAFM_112_PANDEMIUM_ENTER_ACTIVATED	=	112,
	HELL_WAFM_113_PANDEMIUM_ENTER_ACTIVATED	=	113,
	HELL_WAFM_114_PANDEMIUM_ENTER_ACTIVATED	=	114,
	HELL_WAFM_115_PANDEMIUM_ENTER_ACTIVATED	=	115,
	HELL_WAFM_116	=	116,
	HELL_WAFM_117	=	117,
	HELL_WAFM_118	=	118,
	HELL_WAFM_119	=	119,
	HELL_WAFM_120	=	120,
	HELL_WAFM_121	=	121,
	HELL_WAFM_122	=	122,
	HELL_WAFM_123	=	123,
	HELL_WAFM_124	=	124,
	HELL_WAFM_125	=	125,
	HELL_WAFM_126	=	126,
	HELL_WAFM_127	=	127,
	HELL_WAFM_128	=	128,
	HELL_WAFM_129_ENTER_TO_TOWN	=	129,
	HELL_WAFM_130_ENTER_TO_TOWN	=	130,
	HELL_WAFM_131_ENTER_TO_TOWN	=	131,
	HELL_WAFM_132_ENTER_TO_TOWN	=	132,
	HELL_WAFM_133_ENTER_TO_TOWN	=	133,
	HELL_WAFM_134_ENTER_TO_TOWN	=	134,
	HELL_WAFM_135_ENTER_TO_TOWN	=	135,
	HELL_WAFM_136_ENTER_TO_TOWN	=	136,
	HELL_WAFM_137	=	137,
};

enum CATA_MAP_ADVANCE: uchar
{
	CATA_MA_32_BEYOND		 = 32,
	CATA_MA_35_WALL			 = 35,
	CATA_MA_44_PASSAGE_FLOOR = 44,
	CATA_MA_46_FLOOR		 = 46,
	CATA_MA_65_DOWN_CORNER	 = 65,
	CATA_MA_66_RIGHT_CORNER	 = 66,
	CATA_MA_67_UP_CORNER	 = 67,
	CATA_MA_68_DOOR			 = 68,
	CATA_MA_69_LEFT_CORNER	 = 69,
};

enum MENU_ITEM_FLAG
{
	MIF_1  = BIT(1),
	MIF_2  = BIT(2),
	MIF_3  = BIT(3),
	MIF_4  = BIT(4),
	MIF_5  = BIT(5),
	MIF_6  = BIT(6),
	MIF_7  = BIT(7),
	MIF_8  = BIT(8),
	MIF_9  = BIT(9),
	MIF_10 = BIT(10),
	MIF_11 = BIT(11),
	MIF_12 = BIT(12),
	MIF_13 = BIT(13),
	MIF_14 = BIT(14),
	MIF_15 = BIT(15),
	MIF_16 = BIT(16),
	MIF_17 = BIT(17),
	MIF_18 = BIT(18),
	MIF_19 = BIT(19),
	MIF_20 = BIT(20),
	MIF_21 = BIT(21),
	MIF_22 = BIT(22),
	MIF_23 = BIT(23),
	MIF_24 = BIT(24),
	MIF_25 = BIT(25),
	MIF_26 = BIT(26),
	MIF_27 = BIT(27),
	MIF_28 = BIT(28),
	MIF_29 = BIT(29),
	MIF_30 = BIT(30),
	MIF_31 = BIT(31),
	MIF_32_AVAILABLE = BIT(32),
};

enum ROOM_TYPE: char {
	//RT_m1_NOROOM			= -1,
	RT_0_BARRELS			= 0	,
	RT_1_SHRINE				= 1	,
	RT_2_MAGIC_ITEM			= 2	,
	RT_3_ANCIENT_TOMES		= 3	,
	RT_4_GOLD				= 4	,
	RT_5_LIBRYARY			= 5	,
	RT_6					= 6	,
	RT_7_BLOOD_FOUNTAN		= 7	,
	RT_8_DECAPITATED_BODIES	= 8	,
	RT_9_PURIFYING_SPRING	= 9	,
	RT_10_ARMOR_STAND		= 10,
	RT_11_GOAT_SHRINE		= 11,
	RT_12_CAULDRON			= 12,
	RT_13_MURKY_POOL		= 13,
	RT_14_FOUNTAIN_OF_TEARS	= 14,
	RT_15_BURN_CROSSES		= 15,
	RT_16_WEAPON_STAND		= 16,
};
reflect_enum( ROOM_TYPE, RT_0_BARRELS, RT_1_SHRINE, RT_2_MAGIC_ITEM, RT_3_ANCIENT_TOMES, RT_4_GOLD, RT_5_LIBRYARY, RT_6, RT_7_BLOOD_FOUNTAN, RT_8_DECAPITATED_BODIES,
	RT_9_PURIFYING_SPRING, RT_10_ARMOR_STAND, RT_11_GOAT_SHRINE, RT_12_CAULDRON, RT_13_MURKY_POOL, RT_14_FOUNTAIN_OF_TEARS, RT_15_BURN_CROSSES, RT_16_WEAPON_STAND );

enum SPEECH: int {
	SP_M1		 = -1,
	SP_0		 = 0,
	SP_1		 = 1,
	SP_2		 = 2,
	SP_3		 = 3,
	SP_4		 = 4,
	SP_5		 = 5,
	SP_6		 = 6,
	SP_7		 = 7,
	SP_8		 = 8,
	SP_9		 = 9,
	SP_10	 = 10,
	SP_11	 = 11,
	SP_12	 = 12,
	SP_13	 = 13,
	SP_14	 = 14,
	SP_15	 = 15,
	SP_16	 = 16,
	SP_17	 = 17,
	SP_18	 = 18,
	SP_19	 = 19,
	SP_20	 = 20,
	SP_21	 = 21,
	SP_22	 = 22,
	SP_23	 = 23,
	SP_24	 = 24,
	SP_25_KAIN_ABOUT_DIABLO	 = 25,
	SP_26	 = 26,
	SP_27	 = 27,
	SP_28	 = 28,
	SP_29	 = 29,
	SP_30	 = 30,
	SP_31	 = 31,
	SP_32	 = 32,
	SP_33	 = 33,
	SP_34	 = 34,
	SP_35	 = 35,
	SP_36	 = 36,
	SP_37	 = 37,
	SP_38	 = 38,
	SP_39	 = 39,
	SP_40	 = 40,
	SP_41	 = 41,
	SP_42	 = 42,
	SP_43	 = 43,
	SP_44	 = 44,
	SP_45	 = 45,
	SP_46	 = 46,
	SP_47	 = 47,
	SP_48	 = 48,
	SP_49	 = 49,
	SP_50	 = 50,
	SP_51	 = 51,
	SP_52	 = 52,
	SP_53	 = 53,
	SP_54	 = 54,
	SP_55	 = 55,
	SP_56	 = 56,
	SP_57	 = 57,
	SP_58	 = 58,
	SP_59	 = 59,
	SP_60	 = 60,
	SP_61	 = 61,
	SP_62	 = 62,
	SP_63	 = 63,
	SP_64	 = 64,
	SP_65	 = 65,
	SP_66	 = 66,
	SP_67	 = 67,
	SP_68	 = 68,
	SP_69	 = 69,
	SP_70	 = 70,
	SP_71	 = 71,
	SP_72	 = 72,
	SP_73_CAIN_ABOUT_LOGLAN	 = 73,
	SP_74_OGDEN_ABOUT_LOGLAN	 = 74,
	SP_75_PEPIN_ABOUT_LOGLAN	 = 75,
	SP_76_GILIAN_ABOUT_LOGLAN	 = 76,
	SP_77_GRISWOLD_ABOUT_LOGLAN	 = 77,
	SP_78_FARNHAM_ABOUT_LOGLAN	 = 78,
	SP_79_ADRIA_ABOUT_LOGLAN	 = 79,
	SP_80_WIRT_ABOUT_LOGLAN	 = 80,
	SP_81	 = 81,
	SP_82	 = 82,
	SP_83	 = 83,
	SP_84	 = 84,
	SP_85	 = 85,
	SP_86	 = 86,
	SP_87	 = 87,
	SP_88	 = 88,
	SP_89	 = 89,
	SP_90	 = 90,
	SP_91	 = 91,
	SP_92	 = 92,
	SP_93	 = 93,
	SP_94	 = 94,
	SP_95	 = 95,
	SP_96	 = 96,
	SP_97	 = 97,
	SP_98	 = 98,
	SP_99	 = 99,
	SP_100	 = 100,
	SP_101	 = 101,
	SP_102	 = 102,
	SP_103	 = 103,
	SP_104	 = 104,
	SP_105	 = 105,
	SP_106	 = 106,
	SP_107	 = 107,
	SP_108	 = 108,
	SP_109	 = 109,
	SP_110_MONSTERS_WARLRD01	 = 110,
	SP_111_CAIN_ABOUT_MAGIC_ROCK	 = 111,
	SP_112_OGDEN_ABOUT_MAGIC_ROCK	 = 112,
	SP_113_PEPIN_ABOUT_MAGIC_ROCK	 = 113,
	SP_114_GILIAN_ABOUT_MAGIC_ROCK	 = 114,
	SP_115	 = 115,
	SP_116_GRISWOLD_ABOUT_MAGIC_ROCK	 = 116,
	SP_117	 = 117,
	SP_118_FARNHAM_ABOUT_MAGIC_ROCK	 = 118,
	SP_119_ADRIA_ABOUT_MAGIC_ROCK	 = 119,
	SP_120_WIRT_ABOUT_MAGIC_ROCK	 = 120,
	SP_121_CAIN_ABOUT_HUGE_AXE	 = 121,
	SP_122_OGDEN_ABOUT_HUGE_AXE	 = 122,
	SP_123	 = 123,
	SP_124	 = 124,
	SP_125_GILIAN_ABOUT_HUGE_AXE	 = 125,
	SP_126_GRISWOLD_ABOUT_HUGE_AXE	 = 126,
	SP_127_FARNHAM_ABOUT_HUGE_AXE	 = 127,
	SP_128	 = 128,
	SP_129_ADRIA_ABOUT_HUGE_AXE	 = 129,
	SP_130	 = 130,
	SP_131	 = 131,
	SP_132	 = 132,
	SP_133_WIRT_ABOUT_HUGE_AXE	 = 133,
	SP_134	 = 134,
	SP_135	 = 135,
	SP_136	 = 136,
	SP_137	 = 137,
	SP_138	 = 138,
	SP_139	 = 139,
	SP_140	 = 140,
	SP_141	 = 141,
	SP_142	 = 142,
	SP_143	 = 143,
	SP_144	 = 144,
	SP_145	 = 145,
	SP_146	 = 146,
	SP_147	 = 147,
	SP_148	 = 148,
	SP_149	 = 149,
	SP_150	 = 150,
	SP_151	 = 151,
	SP_152	 = 152,
	SP_153	 = 153,
	SP_154	 = 154,
	SP_155	 = 155,
	SP_156	 = 156,
	SP_157	 = 157,
	SP_158	 = 158,
	SP_159	 = 159,
	SP_160	 = 160,
	SP_161	 = 161,
	SP_162	 = 162,
	SP_163	 = 163,
	SP_164	 = 164,
	SP_165	 = 165,
	SP_166	 = 166,
	SP_167	 = 167,
	SP_168	 = 168,
	SP_169	 = 169,
	SP_170	 = 170,
	SP_171	 = 171,
	SP_172	 = 172,
	SP_173	 = 173,
	SP_174	 = 174,
	SP_175	 = 175,
	SP_176	 = 176,
	SP_177	 = 177,
	SP_178	 = 178,
	SP_179	 = 179,
	SP_180	 = 180,
	SP_181	 = 181,
	SP_182	 = 182,
	SP_183	 = 183,
	SP_184	 = 184,
	SP_185	 = 185,
	SP_186	 = 186,
	SP_187	 = 187,
	SP_188	 = 188,
	SP_189	 = 189,
	SP_190	 = 190,
	SP_191	 = 191,
	SP_192	 = 192,
	SP_193	 = 193,
	SP_194	 = 194,
	SP_195	 = 195,
	SP_196	 = 196,
	SP_197	 = 197,
	SP_198	 = 198,
	SP_199	 = 199,
	SP_200	 = 200,
	SP_201	 = 201,
	SP_202	 = 202,
	SP_203	 = 203,
	SP_204	 = 204,
	SP_205	 = 205,
	SP_206	 = 206,
	SP_207	 = 207,
	SP_208	 = 208,
	SP_209	 = 209,
	SP_210	 = 210,
	SP_211	 = 211,
	SP_212	 = 212,
	SP_213	 = 213,
	SP_214	 = 214,
	SP_215	 = 215,
	SP_216	 = 216,
	SP_217	 = 217,
	SP_218	 = 218,
	SP_219	 = 219,
	SP_220	 = 220,
	SP_221	 = 221,
	SP_222	 = 222,
	SP_223	 = 223,
	SP_224	 = 224,
	SP_225	 = 225,
	SP_226	 = 226,
	SP_227	 = 227,
	SP_228	 = 228,
	SP_229	 = 229,
	SP_230	 = 230,
	SP_231	 = 231,
	SP_232	 = 232,
	SP_233	 = 233,
	SP_234	 = 234,
	SP_235	 = 235,
	SP_236	 = 236,
	SP_237	 = 237,
	SP_238	 = 238,
	SP_239	 = 239,
	SP_240	 = 240,
	SP_241	 = 241,
	SP_242	 = 242,
	SP_243	 = 243,
	SP_244	 = 244,
	SP_245	 = 245,
	SP_246	 = 246,
	SP_247	 = 247,
	SP_248	 = 248,
	SP_249	 = 249,
	SP_250	 = 250,
	SP_251	 = 251,
	SP_252	 = 252,
	SP_253	 = 253,
	SP_254	 = 254,
	SP_255	 = 255,
	SP_256	 = 256,
	SP_257	 = 257,
	SP_258	 = 258,
	SP_259	 = 259,
	SP_260	 = 260,
	SP_261	 = 261,
	SP_262	 = 262,
	SP_263	 = 263,
	SP_264	 = 264,
	SP_265	 = 265,
	SP_266	 = 266,
	SP_267	 = 267,
	SP_268	 = 268,
	SP_269	 = 269,
	SP_270	 = 270,
	SP_271	 = 271,
	SP_272	 = 272,
	SP_273	 = 273,
	SP_274	 = 274,
	SP_275	 = 275,
	SP_276	 = 276,
	SP_277	 = 277,
	SP_278	 = 278,
	SP_279	 = 279,
	SP_280	 = 280,
	SP_281	 = 281,
	SP_282	 = 282,
	SP_283	 = 283,
	SP_284	 = 284,
	SP_285	 = 285,
	SP_286	 = 286,
	SP_287	 = 287,
	SP_288	 = 288,
	SP_289	 = 289,
	SP_290	 = 290,
	SP_291	 = 291,
	SP_292	 = 292,
	SP_293	 = 293,
	SP_294	 = 294,
	SP_295	 = 295,
	SP_296	 = 296,
	SP_297	 = 297,
	SP_298	 = 298,
	SP_299	 = 299,
	SP_300	 = 300,
	SP_301	 = 301,
	SP_302	 = 302,
	SP_303	 = 303,
	SP_304	 = 304,
	SP_305	 = 305,
	SP_306	 = 306,
	SP_307	 = 307,
	SP_308	 = 308,
	SP_309	 = 309,
	SP_310	 = 310,
	SP_311	 = 311,
	SP_312	 = 312,
	SP_313	 = 313,
	SP_314	 = 314,
	SP_315	 = 315,
	SP_316	 = 316,
	SP_317	 = 317,
	SP_318	 = 318,
	SP_319	 = 319,
	SP_320	 = 320,
	SP_321	 = 321,
	SP_322	 = 322,
	SP_323	 = 323,
	SP_324	 = 324,
	SP_325	 = 325,
	SP_326	 = 326,
	SP_327	 = 327,
	SP_328	 = 328,
	SP_329	 = 329,
	SP_330	 = 330,
	SP_331	 = 331,
	SP_332	 = 332,
	SP_333	 = 333,
	SP_334	 = 334,
	SP_335	 = 335,
	SP_336	 = 336,
	SP_337	 = 337,
	SP_338 = 338,
	SP_339 = 339,
	SP_340 = 340,
	SP_341 = 341,
	SP_342 = 342,
	SP_343 = 343,
	SP_344 = 344,
	SP_345 = 345,
	SP_346 = 346,
	SP_347 = 347,
	SP_348 = 348,
	SP_349 = 349,
	SP_350 = 350,
	SP_351 = 351,
	SP_352 = 352,
	SP_353 = 353,
	SP_354 = 354,
	SP_355 = 355,
	SP_356 = 356,
	SP_357 = 357,
	SP_358 = 358,
	SP_359 = 359,
	SP_360 = 360,
	SP_361 = 361,
	SP_362 = 362,
	SP_363 = 363,
	SP_364 = 364,
	SP_365 = 365,
	SP_366 = 366,
	SP_367 = 367,
	SP_368 = 368,
	SP_369 = 369,
	SP_370 = 370,
	SP_371 = 371,
	SP_372 = 372,
	SP_373 = 373,
	SP_374 = 374,
	SP_375 = 375,
	SP_376 = 376,
	SP_377 = 377,
	SP_378 = 378,
	SP_379 = 379,
	SP_380 = 380,
	SP_381 = 381,
	SP_382 = 382,
	SP_383 = 383,
	SP_384 = 384,
	SP_385 = 385,
	SP_386 = 386,
	SP_387 = 387,
	SP_388 = 388,
	SP_389 = 389,
	SP_390 = 390,
	SP_391 = 391,
	SP_392 = 392,
	SP_393 = 393,
	SP_394 = 394,
	SP_395 = 395,
	SP_396 = 396,
	SP_399 = 399,
	SP_397 = 397,
	SP_398 = 398,
	SP_400 = 400,
	SP_401 = 401,
	SP_402 = 402,
};
reflect_enum( SPEECH, SP_M1, SP_0, SP_1, SP_2, SP_3, SP_4, SP_5, SP_6, SP_7, SP_8, SP_9, SP_10, SP_11, SP_12, SP_13, SP_14, SP_15, SP_16,
	SP_17, SP_18, SP_19, SP_20, SP_21, SP_22, SP_23, SP_24, SP_25_KAIN_ABOUT_DIABLO, SP_26, SP_27, SP_28, SP_29, SP_30, SP_31, SP_32,
	SP_33, SP_34, SP_35, SP_36, SP_37, SP_38, SP_39, SP_40, SP_41, SP_42, SP_43, SP_44, SP_45, SP_46, SP_47, SP_48, SP_49, SP_50, SP_51,
	SP_52, SP_53, SP_54, SP_55, SP_56, SP_57, SP_58, SP_59, SP_60, SP_61, SP_62, SP_63, SP_64, SP_65, SP_66, SP_67, SP_68, SP_69, SP_70,
	SP_71, SP_72, SP_73_CAIN_ABOUT_LOGLAN, SP_74_OGDEN_ABOUT_LOGLAN, SP_75_PEPIN_ABOUT_LOGLAN, SP_76_GILIAN_ABOUT_LOGLAN,
	SP_77_GRISWOLD_ABOUT_LOGLAN, SP_78_FARNHAM_ABOUT_LOGLAN, SP_79_ADRIA_ABOUT_LOGLAN, SP_80_WIRT_ABOUT_LOGLAN, SP_81, SP_82, SP_83,
	SP_84, SP_85, SP_86, SP_87, SP_88, SP_89, SP_90, SP_91, SP_92, SP_93, SP_94, SP_95, SP_96, SP_97, SP_98, SP_99, SP_100, SP_101, SP_102,
	SP_103, SP_104, SP_105, SP_106, SP_107, SP_108, SP_109, SP_110_MONSTERS_WARLRD01, SP_111_CAIN_ABOUT_MAGIC_ROCK, SP_112_OGDEN_ABOUT_MAGIC_ROCK,
	SP_113_PEPIN_ABOUT_MAGIC_ROCK, SP_114_GILIAN_ABOUT_MAGIC_ROCK, SP_115, SP_116_GRISWOLD_ABOUT_MAGIC_ROCK, SP_117, SP_118_FARNHAM_ABOUT_MAGIC_ROCK,
	SP_119_ADRIA_ABOUT_MAGIC_ROCK, SP_120_WIRT_ABOUT_MAGIC_ROCK, SP_121_CAIN_ABOUT_HUGE_AXE, SP_122_OGDEN_ABOUT_HUGE_AXE, SP_123, SP_124,
	SP_125_GILIAN_ABOUT_HUGE_AXE, SP_126_GRISWOLD_ABOUT_HUGE_AXE, SP_127_FARNHAM_ABOUT_HUGE_AXE, SP_128, SP_129_ADRIA_ABOUT_HUGE_AXE, SP_130,
	SP_131, SP_132, SP_133_WIRT_ABOUT_HUGE_AXE, SP_134, SP_135, SP_136, SP_137, SP_138, SP_139, SP_140, SP_141, SP_142, SP_143, SP_144,
	SP_145, SP_146, SP_147, SP_148, SP_149, SP_150, SP_151, SP_152, SP_153, SP_154, SP_155, SP_156, SP_157, SP_158, SP_159, SP_160, SP_161,
	SP_162, SP_163, SP_164, SP_165, SP_166, SP_167, SP_168, SP_169, SP_170, SP_171, SP_172, SP_173, SP_174, SP_175, SP_176, SP_177, SP_178,
	SP_179, SP_180, SP_181, SP_182, SP_183, SP_184, SP_185, SP_186, SP_187, SP_188, SP_189, SP_190, SP_191, SP_192, SP_193, SP_194, SP_195,
	SP_196, SP_197, SP_198, SP_199, SP_200, SP_201, SP_202, SP_203, SP_204, SP_205, SP_206, SP_207, SP_208, SP_209, SP_210, SP_211, SP_212,
	SP_213, SP_214, SP_215, SP_216, SP_217, SP_218, SP_219, SP_220, SP_221, SP_222, SP_223, SP_224, SP_225, SP_226, SP_227, SP_228, SP_229,
	SP_230, SP_231, SP_232, SP_233, SP_234, SP_235, SP_236, SP_237, SP_238, SP_239, SP_240, SP_241, SP_242, SP_243, SP_244, SP_245, SP_246,
	SP_247, SP_248, SP_249, SP_250, SP_251, SP_252, SP_253, SP_254, SP_255, SP_256, SP_257, SP_258, SP_259, SP_260, SP_261, SP_262, SP_263,
	SP_264, SP_265, SP_266, SP_267, SP_268, SP_269, SP_270, SP_271, SP_272, SP_273, SP_274, SP_275, SP_276, SP_277, SP_278, SP_279, SP_280,
	SP_281, SP_282, SP_283, SP_284, SP_285, SP_286, SP_287, SP_288, SP_289, SP_290, SP_291, SP_292, SP_293, SP_294, SP_295, SP_296, SP_297,
	SP_298, SP_299, SP_300, SP_301, SP_302, SP_303, SP_304, SP_305, SP_306, SP_307, SP_308, SP_309, SP_310, SP_311, SP_312, SP_313, SP_314,
	SP_315, SP_316, SP_317, SP_318, SP_319, SP_320, SP_321, SP_322, SP_323, SP_324, SP_325, SP_326, SP_327, SP_328, SP_329, SP_330, SP_331,
	SP_332, SP_333, SP_334, SP_335, SP_336, SP_337, SP_338, SP_339, SP_340, SP_341, SP_342, SP_343, SP_344, SP_345, SP_346, SP_347, SP_348,
	SP_349, SP_350, SP_351, SP_352, SP_353, SP_354, SP_355, SP_356, SP_357, SP_358, SP_359, SP_360, SP_361, SP_362, SP_363, SP_364, SP_365,
	SP_366, SP_367, SP_368, SP_369, SP_370, SP_371, SP_372, SP_373, SP_374, SP_375, SP_376, SP_377, SP_378, SP_379, SP_380, SP_381, SP_382,
	SP_383, SP_384, SP_385, SP_386, SP_387, SP_388, SP_389, SP_390, SP_391, SP_392, SP_393, SP_394, SP_395, SP_396, SP_399, SP_397, SP_398, SP_400, SP_401, SP_402 );

enum SOUND: int {
	S_M1_NO_SOUND		= -1,
	S_0_WALK1			= 0,	// "Sfx\\Misc\\Walk1.wav",	
	S_1_WALK2			= 1,	// "Sfx\\Misc\\Walk2.wav",	
	S_2_WALK3			= 2,	// "Sfx\\Misc\\Walk3.wav",	
	S_3_WALK4			= 3,	// "Sfx\\Misc\\Walk4.wav",	
	S_4_BFIRE			= 4,	// "Sfx\\Misc\\BFire.wav",	
	S_5_FMAG			= 5,	// "Sfx\\Misc\\Fmag.wav",	
	S_6_TMAG			= 6,	// "Sfx\\Misc\\Tmag.wav",	
	S_7_LGHIT			= 7,	// "Sfx\\Misc\\Lghit.wav",	
	S_8_LGHIT1			= 8,	// "Sfx\\Misc\\Lghit1.wav",	
	S_9_SWING			= 9,	// "Sfx\\Misc\\swing.wav",	
	S_10_SWING2			= 10,	// "Sfx\\Misc\\swing2.wav",	
	S_11_DEAD			= 11,	// "Sfx\\Misc\\Dead.wav",	
	S_12_STING1			= 12,	// "Sfx\\Misc\\Sting1.wav",	
	S_13_FBALLBOW		= 13,	// "Sfx\\Misc\\FBallBow.wav",	
	S_14_QUESTDON		= 14,	// "Sfx\\Misc\\Questdon.wav",	
	S_15_I_ARMRFKD		= 15,	// "Sfx\\Items\\Armrfkd.wav",	
	S_16_I_BARLFIRE		= 16,	// "Sfx\\Items\\Barlfire.wav",	
	S_17_I_BARREL		= 17,	// "Sfx\\Items\\Barrel.wav",	
	S_18_I_PODPOP8		= 18,	// "Sfx\\Items\\PodPop8.wav",	
	S_19_I_PODPOP5		= 19,	// "Sfx\\Items\\PodPop5.wav",	
	S_20_I_URNPOP3		= 20,	// "Sfx\\Items\\UrnPop3.wav",	
	S_21_I_URNPOP2		= 21,	// "Sfx\\Items\\UrnPop2.wav",	
	S_22_I_BHIT			= 22,	// "Sfx\\Items\\Bhit.wav",	
	S_23_I_BHIT1		= 23,	// "Sfx\\Items\\Bhit1.wav",	
	S_24_I_CHEST		= 24,	// "Sfx\\Items\\Chest.wav",	
	S_25_I_DOORCLOS		= 25,	// "Sfx\\Items\\Doorclos.wav",	
	S_26_I_DOOROPEN		= 26,	// "Sfx\\Items\\Dooropen.wav",	
	S_27_I_FLIPANVL		= 27,	// "Sfx\\Items\\Flipanvl.wav",	
	S_28_I_FLIPAXE		= 28,	// "Sfx\\Items\\Flipaxe.wav",	
	S_29_I_FLIPBLST		= 29,	// "Sfx\\Items\\Flipblst.wav",	
	S_30_I_FLIPBODY		= 30,	// "Sfx\\Items\\Flipbody.wav",	
	S_31_I_FLIPBOOK		= 31,	// "Sfx\\Items\\Flipbook.wav",	
	S_32_I_FLIPBOW		= 32,	// "Sfx\\Items\\Flipbow.wav",	
	S_33_I_FLIPCAP		= 33,	// "Sfx\\Items\\Flipcap.wav",	
	S_34_I_FLIPHARM		= 34,	// "Sfx\\Items\\Flipharm.wav",	
	S_35_I_FLIPLARM		= 35,	// "Sfx\\Items\\Fliplarm.wav",	
	S_36_I_FLIPMAG		= 36,	// "Sfx\\Items\\Flipmag.wav",	
	S_37_I_FLIPMAG1		= 37,	// "Sfx\\Items\\Flipmag1.wav",	
	S_38_I_LITESHLD		= 38,	// "Sfx\\Items\\Liteshld.wav",	
	S_39_I_FLIPPOT		= 39,	// "Sfx\\Items\\Flippot.wav",	
	S_40_I_FLIPRING		= 40,	// "Sfx\\Items\\Flipring.wav",	
	S_41_I_FLIPROCK		= 41,	// "Sfx\\Items\\Fliprock.wav",	
	S_42_I_FLIPSCRL		= 42,	// "Sfx\\Items\\Flipscrl.wav",	
	S_43_I_FLIPSHLD		= 43,	// "Sfx\\Items\\Flipshld.wav",	
	S_44_I_FLIPSIGN		= 44,	// "Sfx\\Items\\Flipsign.wav",	
	S_45_I_FLIPSTAF		= 45,	// "Sfx\\Items\\Flipstaf.wav",	
	S_46_I_FLIPSWOR		= 46,	// "Sfx\\Items\\Flipswor.wav",	
	S_47_I_GOLD			= 47,	// "Sfx\\Items\\Gold.wav",	
	S_48_M_TAUNT3		= 48,	// "Sfx\\monsters\\taunt003.wav",	
	S_49_I_INVANVL		= 49,	// "Sfx\\Items\\Invanvl.wav",	
	S_50_I_INVAXE		= 50,	// "Sfx\\Items\\Invaxe.wav",	
	S_51_I_INVBLST		= 51,	// "Sfx\\Items\\Invblst.wav",	
	S_52_I_INVBODY		= 52,	// "Sfx\\Items\\Invbody.wav",	
	S_53_I_INVBOOK		= 53,	// "Sfx\\Items\\Invbook.wav",	
	S_54_I_INVBOW		= 54,	// "Sfx\\Items\\Invbow.wav",	
	S_55_I_INVCAP		= 55,	// "Sfx\\Items\\Invcap.wav",	
	S_56_I_INVGRAB		= 56,	// "Sfx\\Items\\Invgrab.wav",	
	S_57_I_INVHARM		= 57,	// "Sfx\\Items\\Invharm.wav",	
	S_58_I_INVLARM		= 58,	// "Sfx\\Items\\Invlarm.wav",	
	S_59_I_INVLITSH		= 59,	// "Sfx\\Items\\Invlitsh.wav",	
	S_60_I_INVPOT		= 60,	// "Sfx\\Items\\Invpot.wav",	
	S_61_I_INVRING		= 61,	// "Sfx\\Items\\Invring.wav",	
	S_62_I_INVROCK		= 62,	// "Sfx\\Items\\Invrock.wav",	
	S_63_I_INVSCROL		= 63,	// "Sfx\\Items\\Invscrol.wav",	
	S_64_I_INVSHIEL		= 64,	// "Sfx\\Items\\Invshiel.wav",	
	S_65_I_INVSIGN		= 65,	// "Sfx\\Items\\Invsign.wav",	
	S_66_I_INVSTAF		= 66,	// "Sfx\\Items\\Invstaf.wav",	
	S_67_I_INVSWORD		= 67,	// "Sfx\\Items\\Invsword.wav",	
	S_68_I_LEVER		= 68,	// "Sfx\\Items\\Lever.wav",	
	S_69_I_MAGIC		= 69,	// "Sfx\\Items\\Magic.wav",	
	S_70_I_MAGIC1		= 70,	// "Sfx\\Items\\Magic1.wav",	
	S_71_I_READBOOK		= 71,	// "Sfx\\Items\\Readbook.wav",	
	S_72_I_SARC			= 72,	// "Sfx\\Items\\Sarc.wav",	
	S_73_I_SHIELFKD		= 73,	// "Sfx\\Items\\Shielfkd.wav",	
	S_74_I_SWRDFKD		= 74,	// "Sfx\\Items\\Swrdfkd.wav",	
	S_75_I_TITLEMOV		= 75,	// "Sfx\\Items\\Titlemov.wav",	
	S_76_I_TITLSLCT		= 76,	// "Sfx\\Items\\Titlslct.wav",	
	S_77_				= 77,	// "Sfx\\Misc\\blank.wav",	
	S_78_I_TRAP			= 78,	// "Sfx\\Items\\Trap.wav",	
	S_79_CAST1			= 79,	// "Sfx\\Misc\\Cast1.wav",	
	S_80_CAST10			= 80,	// "Sfx\\Misc\\Cast10.wav",	
	S_81_CAST12			= 81,	// "Sfx\\Misc\\Cast12.wav",	
	S_82_CAST2			= 82,	// "Sfx\\Misc\\Cast2.wav",	
	S_83_CAST3			= 83,	// "Sfx\\Misc\\Cast3.wav",	
	S_84_CAST4			= 84,	// "Sfx\\Misc\\Cast4.wav",	
	S_85_CAST5			= 85,	// "Sfx\\Misc\\Cast5.wav",	
	S_86_CAST6			= 86,	// "Sfx\\Misc\\Cast6.wav",	
	S_87_CAST7			= 87,	// "Sfx\\Misc\\Cast7.wav",	
	S_88_CAST9			= 88,	// "Sfx\\Misc\\Cast9.wav",	
	S_89_CAST9			= 89,	// "Sfx\\Misc\\Cast9.wav",	
	S_90_HEALING		= 90,	// "Sfx\\Misc\\Healing.wav",	
	S_91_REPAIR			= 91,	// "Sfx\\Misc\\Repair.wav",	
	S_92_ACIDS1			= 92,	// "Sfx\\Misc\\Acids1.wav",	
	S_93_ACIDS2			= 93,	// "Sfx\\Misc\\Acids2.wav",	
	S_94_AP				= 94,	// "Sfx\\Misc\\Ap.wav",	
	S_95_ARROWALL		= 95,	// "Sfx\\Misc\\Arrowall.wav",	
	S_96_BLDBOIL		= 96,	// "Sfx\\Misc\\Bldboil.wav",	
	S_97_BLODSTAR		= 97,	// "Sfx\\Misc\\Blodstar.wav",	
	S_98_BLSIMPT		= 98,	// "Sfx\\Misc\\Blsimpt.wav",	
	S_99_BONESP			= 99,	// "Sfx\\Misc\\Bonesp.wav",	
	S_100_BSIMPCT		= 100,	// "Sfx\\Misc\\Bsimpct.wav",	
	S_101_CALDRON		= 101,	// "Sfx\\Misc\\Caldron.wav",	
	S_102_CBOLT			= 102,	// "Sfx\\Misc\\Cbolt.wav",	
	S_103_CHLTNING		= 103,	// "Sfx\\Misc\\Chltning.wav",	
	S_104_DSERP			= 104,	// "Sfx\\Misc\\DSerp.wav",	
	S_105_ELECIMP1		= 105,	// "Sfx\\Misc\\Elecimp1.wav",	
	S_106_ELEMENTL		= 106,	// "Sfx\\Misc\\Elementl.wav",	
	S_107_DSERP			= 107,	// "Sfx\\Misc\\dserp.wav",	
	S_108_FBALL			= 108,	// "Sfx\\Misc\\Fball.wav",	
	S_109_FBOLT1		= 109,	// "Sfx\\Misc\\Fbolt1.wav",	
	S_110_FBOLT2		= 110,	// "Sfx\\Misc\\Fbolt2.wav",	
	S_111_FIRIMP1		= 111,	// "Sfx\\Misc\\Firimp1.wav",	
	S_112_FIRIMP2		= 112,	// "Sfx\\Misc\\Firimp2.wav",	
	S_113_FLAMWAVE		= 113,	// "Sfx\\Misc\\Flamwave.wav",	
	S_114_FLASH			= 114,	// "Sfx\\Misc\\Flash.wav",	
	S_115_FOUNTAIN		= 115,	// "Sfx\\Misc\\Fountain.wav",	
	S_116_GOLUM			= 116,	// "Sfx\\Misc\\Golum.wav",	
	S_117_GOLUMDED		= 117,	// "Sfx\\Misc\\Golumded.wav",	
	S_118_PORTAL		= 118,	// "Sfx\\Misc\\portal.wav",	
	S_119_GUARD			= 119,	// "Sfx\\Misc\\Guard.wav",	
	S_120_GRDLANCH		= 120,	// "Sfx\\Misc\\Grdlanch.wav",	
	S_121_HOLYBOLT		= 121,	// "Sfx\\Misc\\Holybolt.wav",	
	S_122_HYPER			= 122,	// "Sfx\\Misc\\Hyper.wav",	
	S_123_INVISIBL		= 123,	// "Sfx\\Misc\\Invisibl.wav",	
	S_124_INVISIBL		= 124,	// "Sfx\\Misc\\Invisibl.wav",	
	S_125_INVPOT		= 125,	// "Sfx\\Misc\\Invpot.wav",	
	S_126_LNING1		= 126,	// "Sfx\\Misc\\Lning1.wav",	
	S_127_LTNING		= 127,	// "Sfx\\Misc\\Ltning.wav",	
	S_128_MSHIELD		= 128,	// "Sfx\\Misc\\Mshield.wav",	
	S_129_NESTXPLD		= 129,	// "Sfx\\Misc\\NestXpld.wav",	
	S_130_NOVA			= 130,	// "Sfx\\Misc\\Nova.wav",	
	S_131_PORTAL		= 131,	// "Sfx\\Misc\\Portal.wav",	
	S_132_PUDDLE		= 132,	// "Sfx\\Misc\\Puddle.wav",	
	S_133_RESUR			= 133,	// "Sfx\\Misc\\Resur.wav",	
	S_134_SCURSE		= 134,	// "Sfx\\Misc\\Scurse.wav",	
	S_135_SCURIMP		= 135,	// "Sfx\\Misc\\Scurimp.wav",	
	S_136_SENTINEL		= 136,	// "Sfx\\Misc\\Sentinel.wav",	
	S_137_SHATTER		= 137,	// "Sfx\\Misc\\Shatter.wav",	
	S_138_SOULFIRE		= 138,	// "Sfx\\Misc\\Soulfire.wav",	
	S_139_SPOUTLOP		= 139,	// "Sfx\\Misc\\Spoutlop.wav",	
	S_140_SPOUTSTR		= 140,	// "Sfx\\Misc\\Spoutstr.wav",	
	S_141_STORM			= 141,	// "Sfx\\Misc\\Storm.wav",	
	S_142_TRAPDIS		= 142,	// "Sfx\\Misc\\Trapdis.wav",	
	S_143_TELEPORT		= 143,	// "Sfx\\Misc\\Teleport.wav",	
	S_144_VTHEFT		= 144,	// "Sfx\\Misc\\Vtheft.wav",	
	S_145_WALLLOOP		= 145,	// "Sfx\\Misc\\Wallloop.wav",	
	S_146_WALLSTRT		= 146,	// "Sfx\\Misc\\Wallstrt.wav",	
	S_147_LMAG			= 147,	// "Sfx\\Misc\\LMag.wav",	
	S_148_T_BMAID01		= 148,	// "Sfx\\Towners\\Bmaid01.wav",	
	S_149_I_CP			= 149,	// "Sfx\\Items\\cp.wav",	
	S_150_I_CQ			= 150,	// "Sfx\\Items\\cq.wav",	
	S_151_T_BMAID04		= 151,	// "Sfx\\Towners\\Bmaid04.wav",	
	S_152_I_FLIPLTHR	= 152,	// "Sfx\\Items\\FlipLthr.wav",	
	S_153_I_INVLTHR		= 153,	// "Sfx\\Items\\InvLthr.wav",	
	S_154_T_BMAID07		= 154,	// "Sfx\\Towners\\Bmaid07.wav",	
	S_155_T_BMAID08		= 155,	// "Sfx\\Towners\\Bmaid08.wav",	
	S_156_T_BMAID09		= 156,	// "Sfx\\Towners\\Bmaid09.wav",	
	S_157_T_BMAID10		= 157,	// "Sfx\\Towners\\Bmaid10.wav",	
	S_158_T_BMAID11		= 158,	// "Sfx\\Towners\\Bmaid11.wav",	
	S_159_T_BMAID12		= 159,	// "Sfx\\Towners\\Bmaid12.wav",	
	S_160_T_BMAID13		= 160,	// "Sfx\\Towners\\Bmaid13.wav",	
	S_161_T_BMAID14		= 161,	// "Sfx\\Towners\\Bmaid14.wav",	
	S_162_T_BMAID15		= 162,	// "Sfx\\Towners\\Bmaid15.wav",	
	S_163_T_BMAID16		= 163,	// "Sfx\\Towners\\Bmaid16.wav",	
	S_164_T_BMAID17		= 164,	// "Sfx\\Towners\\Bmaid17.wav",	
	S_165_T_BMAID18		= 165,	// "Sfx\\Towners\\Bmaid18.wav",	
	S_166_T_BMAID19		= 166,	// "Sfx\\Towners\\Bmaid19.wav",	
	S_167_T_BMAID20		= 167,	// "Sfx\\Towners\\Bmaid20.wav",	
	S_168_T_BMAID21		= 168,	// "Sfx\\Towners\\Bmaid21.wav",	
	S_169_T_BMAID22		= 169,	// "Sfx\\Towners\\Bmaid22.wav",	
	S_170_T_BMAID23		= 170,	// "Sfx\\Towners\\Bmaid23.wav",	
	S_171_T_BMAID24		= 171,	// "Sfx\\Towners\\Bmaid24.wav",	
	S_172_T_BMAID25		= 172,	// "Sfx\\Towners\\Bmaid25.wav",	
	S_173_T_BMAID26		= 173,	// "Sfx\\Towners\\Bmaid26.wav",	
	S_174_T_BMAID17		= 174,	// "Sfx\\Towners\\Bmaid17.wav",	
	S_175_T_BMAID28		= 175,	// "Sfx\\Towners\\Bmaid28.wav",	
	S_176_T_BMAID29		= 176,	// "Sfx\\Towners\\Bmaid29.wav",	
	S_177_T_BMAID30		= 177,	// "Sfx\\Towners\\Bmaid30.wav",	
	S_178_T_BMAID31		= 178,	// "Sfx\\Towners\\Bmaid31.wav",	
	S_179_T_BMAID32		= 179,	// "Sfx\\Towners\\Bmaid32.wav",	
	S_180_T_BMAID33		= 180,	// "Sfx\\Towners\\Bmaid33.wav",	
	S_181_T_BMAID34		= 181,	// "Sfx\\Towners\\Bmaid34.wav",	
	S_182_T_BMAID35		= 182,	// "Sfx\\Towners\\Bmaid35.wav",	
	S_183_T_BMAID36		= 183,	// "Sfx\\Towners\\Bmaid36.wav",	
	S_184_T_BMAID37		= 184,	// "Sfx\\Towners\\Bmaid37.wav",	
	S_185_T_BMAID38		= 185,	// "Sfx\\Towners\\Bmaid38.wav",	
	S_186_T_BMAID39		= 186,	// "Sfx\\Towners\\Bmaid39.wav",	
	S_185_T_BMAID40		= 187,	// "Sfx\\Towners\\Bmaid40.wav",
	S_188_T_BSMITH01	= 188,	// "Sfx\\Towners\\Bsmith01.wav",	
	S_189_T_BSMITH02	= 189,	// "Sfx\\Towners\\Bsmith02.wav",	
	S_190_T_BSMITH03	= 190,	// "Sfx\\Towners\\Bsmith03.wav",	
	S_191_T_BSMITH04	= 191,	// "Sfx\\Towners\\Bsmith04.wav",	
	S_192_T_BSMITH05	= 192,	// "Sfx\\Towners\\Bsmith05.wav",	
	S_193_T_BSMITH06	= 193,	// "Sfx\\Towners\\Bsmith06.wav",	
	S_194_T_BSMITH07	= 194,	// "Sfx\\Towners\\Bsmith07.wav",	
	S_195_T_BSMITH08	= 195,	// "Sfx\\Towners\\Bsmith08.wav",	
	S_196_T_BSMITH09	= 196,	// "Sfx\\Towners\\Bsmith09.wav",	
	S_197_T_BSMITH10	= 197,	// "Sfx\\Towners\\Bsmith10.wav",	
	S_198_T_BSMITH11	= 198,	// "Sfx\\Towners\\Bsmith11.wav",	
	S_199_T_BSMITH12	= 199,	// "Sfx\\Towners\\Bsmith12.wav",	
	S_200_T_BSMITH13	= 200,	// "Sfx\\Towners\\Bsmith13.wav",	
	S_201_T_BSMITH14	= 201,	// "Sfx\\Towners\\Bsmith14.wav",	
	S_202_T_BSMITH15	= 202,	// "Sfx\\Towners\\Bsmith15.wav",	
	S_203_T_BSMITH16	= 203,	// "Sfx\\Towners\\Bsmith16.wav",	
	S_204_T_BSMITH17	= 204,	// "Sfx\\Towners\\Bsmith17.wav",	
	S_205_T_BSMITH18	= 205,	// "Sfx\\Towners\\Bsmith18.wav",	
	S_206_T_BSMITH19	= 206,	// "Sfx\\Towners\\Bsmith19.wav",	
	S_207_T_BSMITH20	= 207,	// "Sfx\\Towners\\Bsmith20.wav",	
	S_208_T_BSMITH21	= 208,	// "Sfx\\Towners\\Bsmith21.wav",	
	S_209_T_BSMITH22	= 209,	// "Sfx\\Towners\\Bsmith22.wav",	
	S_210_T_BSMITH23	= 210,	// "Sfx\\Towners\\Bsmith23.wav",	
	S_211_T_BSMITH24	= 211,	// "Sfx\\Towners\\Bsmith24.wav",	
	S_212_T_BSMITH25	= 212,	// "Sfx\\Towners\\Bsmith25.wav",	
	S_213_T_BSMITH26	= 213,	// "Sfx\\Towners\\Bsmith26.wav",	
	S_214_T_BSMITH27	= 214,	// "Sfx\\Towners\\Bsmith27.wav",	
	S_215_T_BSMITH28	= 215,	// "Sfx\\Towners\\Bsmith28.wav",	
	S_216_T_BSMITH29	= 216,	// "Sfx\\Towners\\Bsmith29.wav",	
	S_217_T_BSMITH30	= 217,	// "Sfx\\Towners\\Bsmith30.wav",	
	S_218_T_BSMITH31	= 218,	// "Sfx\\Towners\\Bsmith31.wav",	
	S_219_T_BSMITH32	= 219,	// "Sfx\\Towners\\Bsmith32.wav",	
	S_220_T_BSMITH33	= 220,	// "Sfx\\Towners\\Bsmith33.wav",	
	S_221_T_BSMITH34	= 221,	// "Sfx\\Towners\\Bsmith34.wav",	
	S_222_T_BSMITH35	= 222,	// "Sfx\\Towners\\Bsmith35.wav",	
	S_223_T_BSMITH36	= 223,	// "Sfx\\Towners\\Bsmith36.wav",	
	S_224_T_BSMITH37	= 224,	// "Sfx\\Towners\\Bsmith37.wav",	
	S_225_T_BSMITH38	= 225,	// "Sfx\\Towners\\Bsmith38.wav",	
	S_226_T_BSMITH39	= 226,	// "Sfx\\Towners\\Bsmith39.wav",	
	S_227_T_BSMITH40	= 227,	// "Sfx\\Towners\\Bsmith40.wav",	
	S_228_T_BSMITH41	= 228,	// "Sfx\\Towners\\Bsmith41.wav",	
	S_229_T_BSMITH42	= 229,	// "Sfx\\Towners\\Bsmith42.wav",	
	S_230_T_BSMITH43	= 230,	// "Sfx\\Towners\\Bsmith43.wav",	
	S_231_T_BSMITH44	= 231,	// "Sfx\\Towners\\Bsmith44.wav",	
	S_232_T_BSMITH45	= 232,	// "Sfx\\Towners\\Bsmith45.wav",	
	S_233_T_BSMITH46	= 233,	// "Sfx\\Towners\\Bsmith46.wav",	
	S_234_T_BSMITH47	= 234,	// "Sfx\\Towners\\Bsmith47.wav",	
	S_235_T_BSMITH48	= 235,	// "Sfx\\Towners\\Bsmith48.wav",	
	S_236_T_BSMITH49	= 236,	// "Sfx\\Towners\\Bsmith49.wav",	
	S_237_T_BSMITH50	= 237,	// "Sfx\\Towners\\Bsmith50.wav",	
	S_238_T_BSMITH51	= 238,	// "Sfx\\Towners\\Bsmith51.wav",	
	S_239_T_BSMITH52	= 239,	// "Sfx\\Towners\\Bsmith52.wav",	
	S_240_T_BSMITH53	= 240,	// "Sfx\\Towners\\Bsmith53.wav",	
	S_241_T_BSMITH54	= 241,	// "Sfx\\Towners\\Bsmith54.wav",	
	S_242_T_BSMITH55	= 242,	// "Sfx\\Towners\\Bsmith55.wav",	
	S_243_T_BSMITH56	= 243,	// "Sfx\\Towners\\Bsmith56.wav",
	S_244_T_COW1		= 244,	// "Sfx\\Towners\\Cow1.wav",	
	S_245_T_COW2		= 245,	// "Sfx\\Towners\\Cow2.wav",	
	S_246_T_COW7		= 246,	// "Sfx\\Towners\\Cow7.wav",	
	S_247_T_COW8		= 247,	// "Sfx\\Towners\\Cow8.wav",	
	S_248_T_DEADGUY2	= 248,	// "Sfx\\Towners\\Deadguy2.wav",	
	S_249_T_DRUNK01		= 249,	// "Sfx\\Towners\\Drunk01.wav",	
	S_250_T_DRUNK02		= 250,	// "Sfx\\Towners\\Drunk02.wav",	
	S_251_T_DRUNK03		= 251,	// "Sfx\\Towners\\Drunk03.wav",	
	S_252_T_DRUNK04		= 252,	// "Sfx\\Towners\\Drunk04.wav",	
	S_253_T_DRUNK35		= 253,	// "Sfx\\Towners\\Drunk35.wav",	
	S_254_T_DRUNK06		= 254,	// "Sfx\\Towners\\Drunk06.wav",	
	S_255_T_DRUNK07		= 255,	// "Sfx\\Towners\\Drunk07.wav",	
	S_256_T_DRUNK08		= 256,	// "Sfx\\Towners\\Drunk08.wav",	
	S_257_T_DRUNK09		= 257,	// "Sfx\\Towners\\Drunk09.wav",	
	S_258_T_DRUNK10		= 258,	// "Sfx\\Towners\\Drunk10.wav",	
	S_259_T_DRUNK11		= 259,	// "Sfx\\Towners\\Drunk11.wav",	
	S_260_T_DRUNK12		= 260,	// "Sfx\\Towners\\Drunk12.wav",	
	S_261_T_DRUNK13		= 261,	// "Sfx\\Towners\\Drunk13.wav",	
	S_262_T_DRUNK14		= 262,	// "Sfx\\Towners\\Drunk14.wav",	
	S_263_T_DRUNK15		= 263,	// "Sfx\\Towners\\Drunk15.wav",	
	S_264_T_DRUNK16		= 264,	// "Sfx\\Towners\\Drunk16.wav",	
	S_265_T_DRUNK17		= 265,	// "Sfx\\Towners\\Drunk17.wav",	
	S_266_T_DRUNK18		= 266,	// "Sfx\\Towners\\Drunk18.wav",	
	S_267_T_DRUNK19		= 267,	// "Sfx\\Towners\\Drunk19.wav",	
	S_268_T_DRUNK20		= 268,	// "Sfx\\Towners\\Drunk20.wav",	
	S_269_T_DRUNK16		= 269,	// "Sfx\\Towners\\Drunk16.wav",
	S_270_T_DRUNK22		= 270,	// "Sfx\\Towners\\Drunk22.wav",	
	S_271_T_DRUNK23		= 271,	// "Sfx\\Towners\\Drunk23.wav",	
	S_272_T_DRUNK24		= 272,	// "Sfx\\Towners\\Drunk24.wav",	
	S_273_T_DRUNK25		= 273,	// "Sfx\\Towners\\Drunk25.wav",	
	S_274_T_DRUNK26		= 274,	// "Sfx\\Towners\\Drunk26.wav",	
	S_275_T_DRUNK27		= 275,	// "Sfx\\Towners\\Drunk27.wav",	
	S_276_T_DRUNK28		= 276,	// "Sfx\\Towners\\Drunk28.wav",	
	S_277_T_DRUNK29		= 277,	// "Sfx\\Towners\\Drunk29.wav",	
	S_278_T_DRUNK30		= 278,	// "Sfx\\Towners\\Drunk30.wav",	
	S_279_T_DRUNK31		= 279,	// "Sfx\\Towners\\Drunk31.wav",	
	S_280_T_DRUNK32		= 280,	// "Sfx\\Towners\\Drunk32.wav",	
	S_281_T_DRUNK33		= 281,	// "Sfx\\Towners\\Drunk33.wav",	
	S_282_T_DRUNK34		= 282,	// "Sfx\\Towners\\Drunk34.wav",	
	S_283_T_DRUNK35		= 283,	// "Sfx\\Towners\\Drunk35.wav",	
	S_284_T_HEALER01	= 284,	// "Sfx\\Towners\\Healer01.wav",	
	S_285_T_HEALER02	= 285,	// "Sfx\\Towners\\Healer02.wav",	
	S_286_T_HEALER03	= 286,	// "Sfx\\Towners\\Healer03.wav",	
	S_287_T_HEALER04	= 287,	// "Sfx\\Towners\\Healer04.wav",	
	S_288_T_HEALER05	= 288,	// "Sfx\\Towners\\Healer05.wav",	
	S_289_T_HEALER06	= 289,	// "Sfx\\Towners\\Healer06.wav",	
	S_290_T_HEALER07	= 290,	// "Sfx\\Towners\\Healer07.wav",	
	S_291_T_HEALER08	= 291,	// "Sfx\\Towners\\Healer08.wav",	
	S_292_T_HEALER09	= 292,	// "Sfx\\Towners\\Healer09.wav",	
	S_293_T_HEALER10	= 293,	// "Sfx\\Towners\\Healer10.wav",	
	S_294_T_HEALER11	= 294,	// "Sfx\\Towners\\Healer11.wav",	
	S_295_T_HEALER12	= 295,	// "Sfx\\Towners\\Healer12.wav",	
	S_296_T_HEALER13	= 296,	// "Sfx\\Towners\\Healer13.wav",	
	S_297_T_HEALER14	= 297,	// "Sfx\\Towners\\Healer14.wav",	
	S_298_T_HEALER15	= 298,	// "Sfx\\Towners\\Healer15.wav",	
	S_299_T_HEALER16	= 299,	// "Sfx\\Towners\\Healer16.wav",	
	S_300_T_HEALER17	= 300,	// "Sfx\\Towners\\Healer17.wav",	
	S_301_T_HEALER18	= 301,	// "Sfx\\Towners\\Healer18.wav",	
	S_302_T_HEALER19	= 302,	// "Sfx\\Towners\\Healer19.wav",	
	S_303_T_HEALER20	= 303,	// "Sfx\\Towners\\Healer20.wav",	
	S_304_T_HEALER21	= 304,	// "Sfx\\Towners\\Healer21.wav",	
	S_305_T_HEALER22	= 305,	// "Sfx\\Towners\\Healer22.wav",	
	S_306_T_HEALER23	= 306,	// "Sfx\\Towners\\Healer23.wav",	
	S_307_T_HEALER24	= 307,	// "Sfx\\Towners\\Healer24.wav",	
	S_308_T_HEALER25	= 308,	// "Sfx\\Towners\\Healer25.wav",	
	S_309_T_HEALER26	= 309,	// "Sfx\\Towners\\Healer26.wav",	
	S_310_T_HEALER27	= 310,	// "Sfx\\Towners\\Healer27.wav",	
	S_311_T_HEALER28	= 311,	// "Sfx\\Towners\\Healer28.wav",	
	S_312_T_HEALER29	= 312,	// "Sfx\\Towners\\Healer29.wav",	
	S_313_T_HEALER30	= 313,	// "Sfx\\Towners\\Healer30.wav",	
	S_314_T_HEALER31	= 314,	// "Sfx\\Towners\\Healer31.wav",	
	S_315_T_HEALER32	= 315,	// "Sfx\\Towners\\Healer32.wav",	
	S_316_T_HEALER33	= 316,	// "Sfx\\Towners\\Healer33.wav",	
	S_317_T_HEALER34	= 317,	// "Sfx\\Towners\\Healer34.wav",	
	S_318_T_HEALER35	= 318,	// "Sfx\\Towners\\Healer35.wav",	
	S_319_T_HEALER36	= 319,	// "Sfx\\Towners\\Healer36.wav",	
	S_320_T_HEALER37	= 320,	// "Sfx\\Towners\\Healer37.wav",	
	S_321_T_HEALER38	= 321,	// "Sfx\\Towners\\Healer38.wav",	
	S_322_T_HEALER39	= 322,	// "Sfx\\Towners\\Healer39.wav",	
	S_323_T_HEALER40	= 323,	// "Sfx\\Towners\\Healer40.wav",	
	S_324_T_HEALER41	= 324,	// "Sfx\\Towners\\Healer41.wav",	
	S_325_T_HEALER42	= 325,	// "Sfx\\Towners\\Healer42.wav",	
	S_326_T_HEALER43	= 326,	// "Sfx\\Towners\\Healer43.wav",	
	S_327_T_HEALER44	= 327,	// "Sfx\\Towners\\Healer44.wav",	
	S_328_T_HEALER45	= 328,	// "Sfx\\Towners\\Healer45.wav",	
	S_329_T_HEALER46	= 329,	// "Sfx\\Towners\\Healer46.wav",
	S_330_T_HEALER47	= 330,	// "Sfx\\Towners\\Healer47.wav",	
	S_331_T_PEGBOY01	= 331,	// "Sfx\\Towners\\Pegboy01.wav",	
	S_332_T_PEGBOY02	= 332,	// "Sfx\\Towners\\Pegboy02.wav",	
	S_333_T_PEGBOY03	= 333,	// "Sfx\\Towners\\Pegboy03.wav",	
	S_334_T_PEGBOY04	= 334,	// "Sfx\\Towners\\Pegboy04.wav",	
	S_335_T_PEGBOY05	= 335,	// "Sfx\\Towners\\Pegboy05.wav",	
	S_336_T_PEGBOY06	= 336,	// "Sfx\\Towners\\Pegboy06.wav",	
	S_337_T_PEGBOY07	= 337,	// "Sfx\\Towners\\Pegboy07.wav",	
	S_338_T_PEGBOY08	= 338,	// "Sfx\\Towners\\Pegboy08.wav",	
	S_339_T_PEGBOY09	= 339,	// "Sfx\\Towners\\Pegboy09.wav",	
	S_340_T_PEGBOY10	= 340,	// "Sfx\\Towners\\Pegboy10.wav",	
	S_341_T_PEGBOY11	= 341,	// "Sfx\\Towners\\Pegboy11.wav",	
	S_342_T_PEGBOY12	= 342,	// "Sfx\\Towners\\Pegboy12.wav",	
	S_343_T_PEGBOY13	= 343,	// "Sfx\\Towners\\Pegboy13.wav",	
	S_344_T_PEGBOY14	= 344,	// "Sfx\\Towners\\Pegboy14.wav",	
	S_345_T_PEGBOY15	= 345,	// "Sfx\\Towners\\Pegboy15.wav",	
	S_346_T_PEGBOY16	= 346,	// "Sfx\\Towners\\Pegboy16.wav",	
	S_347_T_PEGBOY17	= 347,	// "Sfx\\Towners\\Pegboy17.wav",	
	S_348_T_PEGBOY18	= 348,	// "Sfx\\Towners\\Pegboy18.wav",	
	S_349_T_PEGBOY19	= 349,	// "Sfx\\Towners\\Pegboy19.wav",	
	S_350_T_PEGBOY20	= 350,	// "Sfx\\Towners\\Pegboy20.wav",	
	S_351_T_PEGBOY21	= 351,	// "Sfx\\Towners\\Pegboy21.wav",	
	S_352_T_PEGBOY22	= 352,	// "Sfx\\Towners\\Pegboy22.wav",	
	S_353_T_PEGBOY23	= 353,	// "Sfx\\Towners\\Pegboy23.wav",	
	S_354_T_PEGBOY24	= 354,	// "Sfx\\Towners\\Pegboy24.wav",	
	S_355_T_PEGBOY25	= 355,	// "Sfx\\Towners\\Pegboy25.wav",	
	S_356_T_PEGBOY26	= 356,	// "Sfx\\Towners\\Pegboy26.wav",	
	S_357_T_PEGBOY27	= 357,	// "Sfx\\Towners\\Pegboy27.wav",	
	S_358_T_PEGBOY28	= 358,	// "Sfx\\Towners\\Pegboy28.wav",	
	S_359_T_PEGBOY29	= 359,	// "Sfx\\Towners\\Pegboy29.wav",	
	S_360_T_PEGBOY30	= 360,	// "Sfx\\Towners\\Pegboy30.wav",	
	S_361_T_PEGBOY31	= 361,	// "Sfx\\Towners\\Pegboy31.wav",	
	S_362_T_PEGBOY32	= 362,	// "Sfx\\Towners\\Pegboy32.wav",	
	S_363_T_PEGBOY33	= 363,	// "Sfx\\Towners\\Pegboy33.wav",	
	S_364_T_PEGBOY34	= 364,	// "Sfx\\Towners\\Pegboy34.wav",	
	S_365_T_PEGBOY35	= 365,	// "Sfx\\Towners\\Pegboy35.wav",	
	S_366_T_PEGBOY36	= 366,	// "Sfx\\Towners\\Pegboy36.wav",	
	S_367_T_PEGBOY37	= 367,	// "Sfx\\Towners\\Pegboy37.wav",	
	S_368_T_PEGBOY38	= 368,	// "Sfx\\Towners\\Pegboy38.wav",	
	S_369_T_PEGBOY39	= 369,	// "Sfx\\Towners\\Pegboy39.wav",	
	S_370_T_PEGBOY40	= 370,	// "Sfx\\Towners\\Pegboy40.wav",	
	S_371_T_PEGBOY41	= 371,	// "Sfx\\Towners\\Pegboy41.wav",	
	S_372_T_PEGBOY42	= 372,	// "Sfx\\Towners\\Pegboy42.wav",	
	S_373_T_PEGBOY43	= 373,	// "Sfx\\Towners\\Pegboy43.wav",
	S_374_T_PRIEST00	= 374,	// "Sfx\\Towners\\Priest00.wav",	
	S_375_T_PRIEST01	= 375,	// "Sfx\\Towners\\Priest01.wav",	
	S_376_T_PRIEST02	= 376,	// "Sfx\\Towners\\Priest02.wav",	
	S_377_T_PRIEST03	= 377,	// "Sfx\\Towners\\Priest03.wav",	
	S_378_T_PRIEST04	= 378,	// "Sfx\\Towners\\Priest04.wav",	
	S_379_T_PRIEST05	= 379,	// "Sfx\\Towners\\Priest05.wav",	
	S_380_T_PRIEST06	= 380,	// "Sfx\\Towners\\Priest06.wav",	
	S_381_T_PRIEST07	= 381,	// "Sfx\\Towners\\Priest07.wav",	
	S_382_T_STORYT00	= 382,	// "Sfx\\Towners\\Storyt00.wav",	
	S_383_T_STORYT01	= 383,	// "Sfx\\Towners\\Storyt01.wav",	
	S_384_T_STORYT02	= 384,	// "Sfx\\Towners\\Storyt02.wav",	
	S_385_T_STORYT03	= 385,	// "Sfx\\Towners\\Storyt03.wav",	
	S_386_T_STORYT04	= 386,	// "Sfx\\Towners\\Storyt04.wav",	
	S_387_T_STORYT05	= 387,	// "Sfx\\Towners\\Storyt05.wav",	
	S_388_T_STORYT06	= 388,	// "Sfx\\Towners\\Storyt06.wav",	
	S_389_T_STORYT07	= 389,	// "Sfx\\Towners\\Storyt07.wav",	
	S_390_T_STORYT08	= 390,	// "Sfx\\Towners\\Storyt08.wav",	
	S_391_T_STORYT09	= 391,	// "Sfx\\Towners\\Storyt09.wav",	
	S_392_T_STORYT10	= 392,	// "Sfx\\Towners\\Storyt10.wav",	
	S_393_T_STORYT11	= 393,	// "Sfx\\Towners\\Storyt11.wav",	
	S_394_T_STORYT12	= 394,	// "Sfx\\Towners\\Storyt12.wav",	
	S_395_T_STORYT13	= 395,	// "Sfx\\Towners\\Storyt13.wav",	
	S_396_T_STORYT14	= 396,	// "Sfx\\Towners\\Storyt14.wav",	
	S_397_T_STORYT15	= 397,	// "Sfx\\Towners\\Storyt15.wav",	
	S_398_T_STORYT16	= 398,	// "Sfx\\Towners\\Storyt16.wav",	
	S_399_T_STORYT17	= 399,	// "Sfx\\Towners\\Storyt17.wav",	
	S_400_T_STORYT18	= 400,	// "Sfx\\Towners\\Storyt18.wav",	
	S_401_T_STORYT19	= 401,	// "Sfx\\Towners\\Storyt19.wav",	
	S_402_T_STORYT20	= 402,	// "Sfx\\Towners\\Storyt20.wav",	
	S_403_T_STORYT21	= 403,	// "Sfx\\Towners\\Storyt21.wav",	
	S_404_T_STORYT22	= 404,	// "Sfx\\Towners\\Storyt22.wav",	
	S_405_T_STORYT23	= 405,	// "Sfx\\Towners\\Storyt23.wav",	
	S_406_T_STORYT24	= 406,	// "Sfx\\Towners\\Storyt24.wav",	
	S_407_T_STORYT25	= 407,	// "Sfx\\Towners\\Storyt25.wav",	
	S_408_T_STORYT26	= 408,	// "Sfx\\Towners\\Storyt26.wav",	
	S_409_T_STORYT27	= 409,	// "Sfx\\Towners\\Storyt27.wav",	
	S_410_T_STORYT28	= 410,	// "Sfx\\Towners\\Storyt28.wav",	
	S_411_T_STORYT29	= 411,	// "Sfx\\Towners\\Storyt29.wav",	
	S_412_T_STORYT30	= 412,	// "Sfx\\Towners\\Storyt30.wav",	
	S_413_T_STORYT31	= 413,	// "Sfx\\Towners\\Storyt31.wav",	
	S_414_T_STORYT32	= 414,	// "Sfx\\Towners\\Storyt32.wav",	
	S_415_T_STORYT33	= 415,	// "Sfx\\Towners\\Storyt33.wav",	
	S_416_T_STORYT34	= 416,	// "Sfx\\Towners\\Storyt34.wav",	
	S_417_T_STORYT35	= 417,	// "Sfx\\Towners\\Storyt35.wav",	
	S_418_T_STORYT36	= 418,	// "Sfx\\Towners\\Storyt36.wav",	
	S_419_T_STORYT37	= 419,	// "Sfx\\Towners\\Storyt37.wav",	
	S_420_T_STORYT38	= 420,	// "Sfx\\Towners\\Storyt38.wav",	
	S_421				= 421,	// "Sfx\\Towners\\Tavown00.wav"!!!!!!!!!!!!!!!!!!!!!!,	
	S_422				= 422,	// "Sfx\\Towners\\Tavown01.wav"!!!!!!!!!!!!!!!!!!!!!!,	
	S_423				= 423,	// "Sfx\\Towners\\Tavown02.wav"!!!!!!!!!!!!!!!!!!!!!!,	
	S_424				= 424,	// "iletouch",	
	S_425_RACHLRD		= 425,	// "Sfx\\Towners\\Tavown04.wav",	
	S_426				= 426,	// "Sfx\\Towners\\Tavown05.wav",	
	S_427				= 427,	// "N",	
	S_428				= 428,	// "sfx\\towners\\tavown07.wav",	
	S_429				= 429,	// "Sfx\\Towners\\Tavown08.wav",	
	S_430				= 430,	// "TRN",	
	S_431				= 431,	// "Sfx\\Towners\\Tavown10.wav",	
	S_432_MN			= 432,	// "Sfx\\Towners\\Tavown11.wav",	
	S_433				= 433,	// "Sfx\\Towners\\Tavown12.wav",	
	S_434				= 434,	// "Sfx\\Towners\\Tavown13.wav",	
	S_435				= 435,	// "ger",	
	S_436				= 436,	// "the Blackened",	
	S_437_MMY			= 437,	// "Sfx\\Towners\\Tavown16.wav",	
	S_438				= 438,	// "Sfx\\Towners\\Tavown06.wav",	
	S_439				= 439,	// "Sfx\\Towners\\Tavown18.wav",	
	S_440				= 440,	// "Sfx\\Towners\\Tavown19.wav",	
	S_441				= 441,	// "oodskull",	
	S_442				= 442,	// "Sfx\\Towners\\Tavown21.wav",	
	S_443				= 443,	// "Sfx\\Towners\\Tavown22.wav",	
	S_444				= 444,	// "Sfx\\Towners\\Tavown23.wav",	
	S_445				= 445,	// "Sfx\\Towners\\Tavown24.wav",	
	S_446				= 446,	// "Sfx\\Towners\\Tavown25.wav",	
	S_447				= 447,	// "lood Stone",	
	S_448				= 448,	// "restone",	
	S_449				= 449,	// "kt",	
	S_450				= 450,	// "lminar the Bloodhorn",	
	S_451				= 451,	// "mourner",	
	S_452				= 452,	// "e Impmaster",	
	S_453				= 453,	// "",	
	S_454				= 454,	// "",	
	S_455				= 455,	// "m the Stone",	
	S_456				= 456,	// "Cursed",	
	S_457				= 457,	// "Sfx\\Towners\\Tavown36.wav",	
	S_458				= 458,	// "Sfx\\Towners\\Tavown37.wav",	
	S_459				= 459,	// "Sfx\\Towners\\Tavown38.wav",	
	S_460				= 460,	// "Sfx\\Towners\\Tavown39.wav",	
	S_461				= 461,	// "Sfx\\Towners\\Tavown40.wav",	
	S_462				= 462,	// "Sfx\\Towners\\Tavown41.wav",	
	S_463				= 463,	// "zu the Slayer",	
	S_464				= 464,	// "Sfx\\Towners\\Tavown43.wav"!!!!!!!!!!!!!,	
	S_465				= 465,	// "Sfx\\Towners\\Tavown44.wav"!!!!!!!!!!!!!,	
	S_466				= 466,	// "Sfx\\Towners\\Tavown45.wav"!!!!!!!!!!!!!,	
	S_467_T_WITCH01		= 467,	// "Sfx\\Towners\\Witch01.wav",	
	S_468_T_WITCH02		= 468,	// "Sfx\\Towners\\Witch02.wav",	
	S_469_T_WITCH03		= 469,	// "Sfx\\Towners\\Witch03.wav",	
	S_470_T_WITCH04		= 470,	// "Sfx\\Towners\\Witch04.wav",	
	S_471_T_WITCH05		= 471,	// "Sfx\\Towners\\Witch05.wav",	
	S_472_T_WITCH06		= 472,	// "Sfx\\Towners\\Witch06.wav",	
	S_473_T_WITCH07		= 473,	// "Sfx\\Towners\\Witch07.wav",	
	S_474_T_WITCH08		= 474,	// "Sfx\\Towners\\Witch08.wav",	
	S_475_T_WITCH09		= 475,	// "Sfx\\Towners\\Witch09.wav",	
	S_476_T_WITCH10		= 476,	// "Sfx\\Towners\\Witch10.wav",	
	S_477_T_WITCH11		= 477,	// "Sfx\\Towners\\Witch11.wav",	
	S_478_T_WITCH12		= 478,	// "Sfx\\Towners\\Witch12.wav",	
	S_479_T_WITCH13		= 479,	// "Sfx\\Towners\\Witch13.wav",	
	S_480_T_WITCH14		= 480,	// "Sfx\\Towners\\Witch14.wav",	
	S_481_T_WITCH15		= 481,	// "Sfx\\Towners\\Witch15.wav",	
	S_482_T_WITCH16		= 482,	// "Sfx\\Towners\\Witch16.wav",	
	S_483_T_WITCH17		= 483,	// "Sfx\\Towners\\Witch17.wav",	
	S_484_T_WITCH18		= 484,	// "Sfx\\Towners\\Witch18.wav",	
	S_485_T_WITCH19		= 485,	// "Sfx\\Towners\\Witch19.wav",	
	S_486_T_WITCH20		= 486,	// "Sfx\\Towners\\Witch20.wav",	
	S_487_T_WITCH21		= 487,	// "Sfx\\Towners\\Witch21.wav",	
	S_488_T_WITCH22		= 488,	// "Sfx\\Towners\\Witch22.wav",	
	S_489_T_WITCH23		= 489,	// "Sfx\\Towners\\Witch23.wav",	
	S_490_T_WITCH24		= 490,	// "Sfx\\Towners\\Witch24.wav",	
	S_491_T_WITCH25		= 491,	// "Sfx\\Towners\\Witch25.wav",	
	S_492_T_WITCH26		= 492,	// "Sfx\\Towners\\Witch26.wav",	
	S_493_T_WITCH27		= 493,	// "Sfx\\Towners\\Witch27.wav",	
	S_494_T_WITCH28		= 494,	// "Sfx\\Towners\\Witch28.wav",	
	S_495_T_WITCH29		= 495,	// "Sfx\\Towners\\Witch29.wav",	
	S_496_T_WITCH30		= 496,	// "Sfx\\Towners\\Witch30.wav",	
	S_497_T_WITCH31		= 497,	// "Sfx\\Towners\\Witch31.wav",	
	S_498_T_WITCH32		= 498,	// "Sfx\\Towners\\Witch32.wav",	
	S_499_T_WITCH33		= 499,	// "Sfx\\Towners\\Witch33.wav",	
	S_500_T_WITCH34		= 500,	// "Sfx\\Towners\\Witch34.wav",	
	S_501_T_WITCH35		= 501,	// "Sfx\\Towners\\Witch35.wav",	
	S_502_T_WITCH36		= 502,	// "Sfx\\Towners\\Witch36.wav",	
	S_503_T_WITCH37		= 503,	// "Sfx\\Towners\\Witch37.wav",	
	S_504_T_WITCH38		= 504,	// "Sfx\\Towners\\Witch38.wav",	
	S_505_T_WITCH39		= 505,	// "Sfx\\Towners\\Witch39.wav",	
	S_506_T_WITCH40		= 506,	// "Sfx\\Towners\\Witch40.wav",	
	S_507_T_WITCH41		= 507,	// "Sfx\\Towners\\Witch41.wav",	
	S_508_T_WITCH42		= 508,	// "Sfx\\Towners\\Witch42.wav",	
	S_509_T_WITCH43		= 509,	// "Sfx\\Towners\\Witch43.wav",	
	S_510_T_WITCH44		= 510,	// "Sfx\\Towners\\Witch44.wav",	
	S_511_T_WITCH45		= 511,	// "Sfx\\Towners\\Witch45.wav",	
	S_512_T_WITCH46		= 512,	// "Sfx\\Towners\\Witch46.wav",	
	S_513_T_WITCH47		= 513,	// "Sfx\\Towners\\Witch47.wav",	
	S_514_T_WITCH48		= 514,	// "Sfx\\Towners\\Witch48.wav",	
	S_515_T_WITCH49		= 515,	// "Sfx\\Towners\\Witch49.wav",	
	S_516_T_WITCH50		= 516,	// "Sfx\\Towners\\Witch50.wav",
	S_517_T_WOUND01		= 517,	// "Sfx\\Towners\\Wound01.wav",	
	S_518_SOR_01		= 518,	// "Sfx\\Sorceror\\Mage01.wav",	
	S_519_SOR_02		= 519,	// "Sfx\\Sorceror\\Mage02.wav",	
	S_520_SOR_03		= 520,	// "Sfx\\Sorceror\\Mage03.wav",	
	S_521_SOR_04		= 521,	// "Sfx\\Sorceror\\Mage04.wav",	
	S_522_SOR_05		= 522,	// "Sfx\\Sorceror\\Mage05.wav",	
	S_523_SOR_06		= 523,	// "Sfx\\Sorceror\\Mage06.wav",	
	S_524_SOR_07		= 524,	// "Sfx\\Sorceror\\Mage07.wav",	
	S_525_SOR_47		= 525,	// "Sfx\\Sorceror\\Mage47.wav",	
	S_526_SOR_09		= 526,	// "Sfx\\Sorceror\\Mage09.wav",	
	S_527_SOR_10		= 527,	// "Sfx\\Sorceror\\Mage10.wav",	
	S_528_SOR_11		= 528,	// "Sfx\\Sorceror\\Mage11.wav",	
	S_529_SOR_12		= 529,	// "Sfx\\Sorceror\\Mage12.wav",	
	S_530_SOR_13		= 530,	// "Sfx\\Sorceror\\Mage13.wav",	
	S_531_SOR_14		= 531,	// "Sfx\\Sorceror\\Mage14.wav",	
	S_532_SOR_15		= 532,	// "Sfx\\Sorceror\\Mage15.wav",	
	S_533_SOR_38		= 533,	// "Sfx\\Sorceror\\Mage38.wav",	
	S_534_SOR_17		= 534,	// "Sfx\\Sorceror\\Mage17.wav",	
	S_535_SOR_18		= 535,	// "Sfx\\Sorceror\\Mage18.wav",	
	S_536_SOR_19		= 536,	// "Sfx\\Sorceror\\Mage19.wav",	
	S_537_SOR_20		= 537,	// "Sfx\\Sorceror\\Mage20.wav",	
	S_538_SOR_21		= 538,	// "Sfx\\Sorceror\\Mage21.wav",	
	S_539_SOR_22		= 539,	// "Sfx\\Sorceror\\Mage22.wav",	
	S_540_SOR_23		= 540,	// "Sfx\\Sorceror\\Mage23.wav",	
	S_541_SOR_24		= 541,	// "Sfx\\Sorceror\\Mage24.wav",	
	S_542_SOR_25		= 542,	// "Sfx\\Sorceror\\Mage25.wav",	
	S_543_SOR_26		= 543,	// "Sfx\\Sorceror\\Mage26.wav",	
	S_544_SOR_27		= 544,	// "Sfx\\Sorceror\\Mage27.wav",	
	S_545_SOR_28		= 545,	// "Sfx\\Sorceror\\Mage28.wav",	
	S_546_SOR_29		= 546,	// "Sfx\\Sorceror\\Mage29.wav",	
	S_547_SOR_30		= 547,	// "Sfx\\Sorceror\\Mage30.wav",	
	S_548_SOR_31		= 548,	// "Sfx\\Sorceror\\Mage31.wav",	
	S_549_SOR_32		= 549,	// "Sfx\\Sorceror\\Mage32.wav",	
	S_550_SOR_33		= 550,	// "Sfx\\Sorceror\\Mage33.wav",	
	S_551_SOR_34		= 551,	// "Sfx\\Sorceror\\Mage34.wav",	
	S_552_SOR_35		= 552,	// "Sfx\\Sorceror\\Mage35.wav",	
	S_553_SOR_36		= 553,	// "Sfx\\Sorceror\\Mage36.wav",	
	S_554_SOR_37		= 554,	// "Sfx\\Sorceror\\Mage37.wav",	
	S_555_SOR_38		= 555,	// "Sfx\\Sorceror\\Mage38.wav",	
	S_556_SOR_39		= 556,	// "Sfx\\Sorceror\\Mage39.wav",	
	S_557_SOR_40		= 557,	// "Sfx\\Sorceror\\Mage40.wav",	
	S_558_SOR_41		= 558,	// "Sfx\\Sorceror\\Mage41.wav",	
	S_559_SOR_42		= 559,	// "Sfx\\Sorceror\\Mage42.wav",	
	S_560_SOR_43		= 560,	// "Sfx\\Sorceror\\Mage43.wav",	
	S_561_SOR_44		= 561,	// "Sfx\\Sorceror\\Mage44.wav",	
	S_562_SOR_45		= 562,	// "Sfx\\Sorceror\\Mage45.wav",	
	S_563_SOR_46		= 563,	// "Sfx\\Sorceror\\Mage46.wav",	
	S_564_SOR_47		= 564,	// "Sfx\\Sorceror\\Mage47.wav",	
	S_565_SOR_48		= 565,	// "Sfx\\Sorceror\\Mage48.wav",	
	S_566_SOR_49		= 566,	// "Sfx\\Sorceror\\Mage49.wav",	
	S_567_SOR_50		= 567,	// "Sfx\\Sorceror\\Mage50.wav",	
	S_568_SOR_51		= 568,	// "Sfx\\Sorceror\\Mage51.wav",	
	S_569_SOR_52		= 569,	// "Sfx\\Sorceror\\Mage52.wav",	
	S_570_SOR_53		= 570,	// "Sfx\\Sorceror\\Mage53.wav",	
	S_571_SOR_54		= 571,	// "Sfx\\Sorceror\\Mage54.wav",	
	S_572_SOR_55		= 572,	// "Sfx\\Sorceror\\Mage55.wav",	
	S_573_SOR_56		= 573,	// "Sfx\\Sorceror\\Mage56.wav",	
	S_574_SOR_57		= 574,	// "Sfx\\Sorceror\\Mage57.wav",	
	S_575_M_LFBAAL		= 575,	// "Sfx\\Monsters\\lfbaal.wav",
	S_576_M_IZUALX		= 576,	// "Sfx\\Monsters\\Izualx.wav",
	S_577_M_LEO			= 577,	// "Sfx\\Monsters\\Leo.wav",
	S_578_SOR_61		= 578,	// "Sfx\\Sorceror\\Mage61.wav",	
	S_579_SOR_62		= 579,	// "Sfx\\Sorceror\\Mage62.wav",	
	S_580_SOR_63		= 580,	// "Sfx\\Sorceror\\Mage63.wav",	
	S_581_M_GYFAX		= 581,	// "Sfx\\Monsters\\Gyfax.wav",	
	S_582_M_RFGFST		= 582,	// "Sfx\\Monsters\\RFGFST.wav",
	S_583_M_UA			= 583,	// "Sfx\\Monsters\\UA.wav",
	S_584_M_AMDUCI		= 584,	// "Sfx\\Monsters\\Amduci.wav",
	S_585_SOR_68		= 585,	// "Sfx\\Sorceror\\Mage68.wav",	
	S_586_SOR_69		= 586,	// "Sfx\\Sorceror\\Mage69.wav",	
	S_587_SOR_69B		= 587,	// "Sfx\\Sorceror\\Mage69b.wav",	
	S_588_SOR_70		= 588,	// "Sfx\\Sorceror\\Mage70.wav",	
	S_589_SOR_71		= 589,	// "Sfx\\Sorceror\\Mage71.wav",	
	S_590_SOR_72		= 590,	// "Sfx\\Sorceror\\Mage72.wav",	
	S_591_ASS_DLVL1		= 591,	// "Sfx\\Assassin\\dlvl1.wav",	
	S_592_X_TNTRS		= 592,	// "X\\tntrs.wav",	
	S_593_M_MALANT		= 593,	// "Sfx\\Monsters\\Malant.wav",	
	S_594_M_XORENE		= 594,	// "Sfx\\Monsters\\Xorene.wav",	
	S_595_M_GSPIKE		= 595,	// "Sfx\\Monsters\\gspike.wav",	
	S_596_SOR_78		= 596,	// "Sfx\\Sorceror\\Mage78.wav",	
	S_597_SOR_46		= 597,	// "Sfx\\Sorceror\\Mage46.wav",	
	S_598_SOR_80		= 598,	// "Sfx\\Sorceror\\Mage80.wav",	
	S_599_M_50CENT		= 599,	// "Sfx\\Monsters\\50cent.wav",	
	S_600_SOR_82		= 600,	// "Sfx\\Sorceror\\Mage82.wav",	
	S_601_SOR_83		= 601,	// "Sfx\\Sorceror\\Mage83.wav",	
	S_602_M_DU			= 602,	// "Sfx\\Monsters\\Du.wav",	
	S_603_M_DN			= 603,	// "Sfx\\Monsters\\DN.wav",	
	S_604_M_BZ			= 604,	// "Sfx\\Monsters\\BZ.wav",	
	S_605_SOR_87		= 605,	// "Sfx\\Sorceror\\Mage87.wav",	
	S_606_SOR_SL		= 606,	// "Sfx\\Sorceror\\MageSL.wav",	
	S_607_SOR_89		= 607,	// "Sfx\\Sorceror\\Mage89.wav",	
	S_608_M_XC			= 608,	// "Sfx\\Monsters\\XC.wav",	
	S_609_SOR_SL		= 609,	// "Sfx\\Sorceror\\MageSL.wav",	
	S_610_SOR_92		= 610,	// "Sfx\\Sorceror\\Mage92.wav",	
	S_611_M_SAR			= 611,	// "Sfx\\Monsters\\Sar.wav",	
	S_612_SOR_94		= 612,	// "Sfx\\Sorceror\\Mage94.wav",	
	S_613_SOR_SL		= 613,	// "Sfx\\Sorceror\\MageSL.wav",	
	S_614_SOR_91		= 614,	// "Sfx\\Sorceror\\Mage91.wav",	
	S_615_SOR_96		= 615,	// "Sfx\\Sorceror\\Mage96.wav",	
	S_616_SOR_SL		= 616,	// "Sfx\\Sorceror\\MageSL.wav",	
	S_617_SOR_99		= 617,	// "Sfx\\Sorceror\\Mage99.wav",	
	S_618_SOR_100		= 618,	// "Sfx\\Sorceror\\Mage100.wav",	
	S_619_SOR_101		= 619,	// "Sfx\\Sorceror\\Mage101.wav",	
	S_620_SOR_102		= 620,	// "Sfx\\Sorceror\\Mage102.wav",	
	S_621_ROG_01		= 621,	// "Sfx\\Rogue\\Rogue01.wav",	
	S_622_ROG_02		= 622,	// "Sfx\\Rogue\\Rogue02.wav",	
	S_623_ROG_03		= 623,	// "Sfx\\Rogue\\Rogue03.wav",	
	S_624_ROG_04		= 624,	// "Sfx\\Rogue\\Rogue04.wav",	
	S_625_ROG_05		= 625,	// "Sfx\\Rogue\\Rogue05.wav",	
	S_626_ROG_06		= 626,	// "Sfx\\Rogue\\Rogue06.wav",	
	S_627_ROG_07		= 627,	// "Sfx\\Rogue\\Rogue07.wav",	
	S_628_ROG_47		= 628,	// "Sfx\\Rogue\\Rogue47.wav",	
	S_629_ROG_09		= 629,	// "Sfx\\Rogue\\Rogue09.wav",	
	S_630_ROG_10		= 630,	// "Sfx\\Rogue\\Rogue10.wav",	
	S_631_ROG_11		= 631,	// "Sfx\\Rogue\\Rogue11.wav",	
	S_632_ROG_12		= 632,	// "Sfx\\Rogue\\Rogue12.wav",	
	S_633_ROG_13		= 633,	// "Sfx\\Rogue\\Rogue13.wav",	
	S_634_ROG_14		= 634,	// "Sfx\\Rogue\\Rogue14.wav",	
	S_635_ROG_15		= 635,	// "Sfx\\Rogue\\Rogue15.wav",	
	S_636_ROG_16		= 636,	// "Sfx\\Rogue\\Rogue16.wav",	
	S_637_ROG_17		= 637,	// "Sfx\\Rogue\\Rogue17.wav",	
	S_638_ROG_18		= 638,	// "Sfx\\Rogue\\Rogue18.wav",	
	S_639_ROG_19		= 639,	// "Sfx\\Rogue\\Rogue19.wav",	
	S_640_ROG_20		= 640,	// "Sfx\\Rogue\\Rogue20.wav",	
	S_641_ROG_21		= 641,	// "Sfx\\Rogue\\Rogue21.wav",	
	S_642_ROG_22		= 642,	// "Sfx\\Rogue\\Rogue22.wav",	
	S_643_ROG_23		= 643,	// "Sfx\\Rogue\\Rogue23.wav",	
	S_644_ROG_24		= 644,	// "Sfx\\Rogue\\Rogue24.wav",	
	S_645_ROG_25		= 645,	// "Sfx\\Rogue\\Rogue25.wav",	
	S_646_ROG_26		= 646,	// "Sfx\\Rogue\\Rogue26.wav",	
	S_647_ROG_27		= 647,	// "Sfx\\Rogue\\Rogue27.wav",	
	S_648_ROG_28		= 648,	// "Sfx\\Rogue\\Rogue28.wav",	
	S_649_ROG_29		= 649,	// "Sfx\\Rogue\\Rogue29.wav",	
	S_650_ROG_30		= 650,	// "Sfx\\Rogue\\Rogue30.wav",	
	S_651_ROG_31		= 651,	// "Sfx\\Rogue\\Rogue31.wav",	
	S_652_ROG_32		= 652,	// "Sfx\\Rogue\\Rogue32.wav",	
	S_653_ROG_33		= 653,	// "Sfx\\Rogue\\Rogue33.wav",	
	S_654_ROG_34		= 654,	// "Sfx\\Rogue\\Rogue34.wav",	
	S_655_ROG_35		= 655,	// "Sfx\\Rogue\\Rogue35.wav",	
	S_656_ROG_36		= 656,	// "Sfx\\Rogue\\Rogue36.wav",	
	S_657_ROG_37		= 657,	// "Sfx\\Rogue\\Rogue37.wav",	
	S_658_ROG_38		= 658,	// "Sfx\\Rogue\\Rogue38.wav",	
	S_659_ROG_39		= 659,	// "Sfx\\Rogue\\Rogue39.wav",	
	S_660_ROG_40		= 660,	// "Sfx\\Rogue\\Rogue40.wav",	
	S_661_ROG_41		= 661,	// "Sfx\\Rogue\\Rogue41.wav",	
	S_662_ROG_42		= 662,	// "Sfx\\Rogue\\Rogue42.wav",	
	S_663_ROG_43		= 663,	// "Sfx\\Rogue\\Rogue43.wav",	
	S_664_ROG_44		= 664,	// "Sfx\\Rogue\\Rogue44.wav",	
	S_665_ROG_45		= 665,	// "Sfx\\Rogue\\Rogue45.wav",	
	S_666_ROG_46		= 666,	// "Sfx\\Rogue\\Rogue46.wav",	
	S_667_ROG_47		= 667,	// "Sfx\\Rogue\\Rogue47.wav",	
	S_668_ROG_48		= 668,	// "Sfx\\Rogue\\Rogue48.wav",	
	S_669_ROG_49		= 669,	// "Sfx\\Rogue\\Rogue49.wav",	
	S_670_ROG_50		= 670,	// "Sfx\\Rogue\\Rogue50.wav",	
	S_671_ROG_51		= 671,	// "Sfx\\Rogue\\Rogue51.wav",	
	S_672_ROG_52		= 672,	// "Sfx\\Rogue\\Rogue52.wav",	
	S_673_ROG_53		= 673,	// "Sfx\\Rogue\\Rogue53.wav",	
	S_674_ROG_54		= 674,	// "Sfx\\Rogue\\Rogue54.wav",	
	S_675_ROG_55		= 675,	// "Sfx\\Rogue\\Rogue55.wav",	
	S_676_ROG_56		= 676,	// "Sfx\\Rogue\\Rogue56.wav",	
	S_677_ROG_57		= 677,	// "Sfx\\Rogue\\Rogue57.wav",	
	S_678_ROG_58		= 678,	// "Sfx\\Rogue\\Rogue58.wav",	
	S_679_ROG_59		= 679,	// "Sfx\\Rogue\\Rogue59.wav",	
	S_680_ROG_60		= 680,	// "Sfx\\Rogue\\Rogue60.wav",	
	S_681_ROG_61		= 681,	// "Sfx\\Rogue\\Rogue61.wav",	
	S_682_ROG_62		= 682,	// "Sfx\\Rogue\\Rogue62.wav",	
	S_683_ROG_63		= 683,	// "Sfx\\Rogue\\Rogue63.wav",	
	S_684_ROG_64		= 684,	// "Sfx\\Rogue\\Rogue64.wav",	
	S_685_ROG_65		= 685,	// "Sfx\\Rogue\\Rogue65.wav",	
	S_686_ROG_66		= 686,	// "Sfx\\Rogue\\Rogue66.wav",	
	S_687_ROG_67		= 687,	// "Sfx\\Rogue\\Rogue67.wav",	
	S_688_ROG_68		= 688,	// "Sfx\\Rogue\\Rogue68.wav",	
	S_689_ROG_69		= 689,	// "Sfx\\Rogue\\Rogue69.wav",	
	S_690_ROG_69B		= 690,	// "Sfx\\Rogue\\Rogue69b.wav",	
	S_691_ROG_71B		= 691,	// "Sfx\\Rogue\\Rogue71b.wav",	
	S_692_ROG_DC		= 692,	// "Sfx\\Rogue\\RogueDC.wav",	
	S_693_ROG_72		= 693,	// "Sfx\\Rogue\\Rogue72.wav",	
	S_694_ROG_73		= 694,	// "Sfx\\Rogue\\Rogue73.wav",	
	S_695_ROG_74		= 695,	// "Sfx\\Rogue\\Rogue74.wav",	
	S_696_ROG_75		= 696,	// "Sfx\\Rogue\\Rogue75.wav",	
	S_697_ROG_76		= 697,	// "Sfx\\Rogue\\Rogue76.wav",	
	S_698_ROG_77		= 698,	// "Sfx\\Rogue\\Rogue77.wav",	
	S_699_ROG_78		= 699,	// "Sfx\\Rogue\\Rogue78.wav",	
	S_700_ROG_46		= 700,	// "Sfx\\Rogue\\Rogue46.wav",	
	S_701_ROG_80		= 701,	// "Sfx\\Rogue\\Rogue80.wav",	
	S_702_ROG_81		= 702,	// "Sfx\\Rogue\\Rogue81.wav",	
	S_703_ROG_82		= 703,	// "Sfx\\Rogue\\Rogue82.wav",	
	S_704_ROG_83		= 704,	// "Sfx\\Rogue\\Rogue83.wav",	
	S_705_ROG_84		= 705,	// "Sfx\\Rogue\\Rogue84.wav",	
	S_706_ROG_85		= 706,	// "Sfx\\Rogue\\Rogue85.wav",	
	S_707_ROG_86		= 707,	// "Sfx\\Rogue\\Rogue86.wav",	
	S_708_ROG_87		= 708,	// "Sfx\\Rogue\\Rogue87.wav",	
	S_709_ROG_SL		= 709,	// "Sfx\\Rogue\\RogueSL.wav",	
	S_710_ROG_89		= 710,	// "Sfx\\Rogue\\Rogue89.wav",	
	S_711_ROG_90		= 711,	// "Sfx\\Rogue\\Rogue90.wav",	
	S_712_ROG_SL		= 712,	// "Sfx\\Rogue\\RogueSL.wav",	
	S_713_ROG_92		= 713,	// "Sfx\\Rogue\\Rogue92.wav",	
	S_714_ROG_93		= 714,	// "Sfx\\Rogue\\Rogue93.wav",	
	S_715_ROG_94		= 715,	// "Sfx\\Rogue\\Rogue94.wav",	
	S_716_ROG_SL		= 716,	// "Sfx\\Rogue\\RogueSL.wav",	
	S_717_ROG_90		= 717,	// "Sfx\\Rogue\\Rogue90.wav",	
	S_718_ROG_96		= 718,	// "Sfx\\Rogue\\Rogue96.wav",	
	S_719_ROG_98		= 719,	// "Sfx\\Rogue\\Rogue98.wav",	
	S_720_ROG_99		= 720,	// "Sfx\\Rogue\\Rogue99.wav",	
	S_721_ROG_100		= 721,	// "Sfx\\Rogue\\Rogue100.wav",	
	S_722_ROG_90		= 722,	// "Sfx\\Rogue\\Rogue90.wav",	
	S_723_ROG_102		= 723,	// "Sfx\\Rogue\\Rogue102.wav",	
	S_724_WAR_01		= 724,	// "Sfx\\Warrior\\Warior01.wav",	
	S_725_WAR_02		= 725,	// "Sfx\\Warrior\\Warior02.wav",	
	S_726_WAR_03		= 726,	// "Sfx\\Warrior\\Warior03.wav",	
	S_727_WAR_04		= 727,	// "Sfx\\Warrior\\Warior04.wav",	
	S_728_WAR_05		= 728,	// "Sfx\\Warrior\\Warior05.wav",	
	S_729_WAR_06		= 729,	// "Sfx\\Warrior\\Warior06.wav",	
	S_730_WAR_07		= 730,	// "Sfx\\Warrior\\Warior07.wav",	
	S_731_WAR_47		= 731,	// "Sfx\\Warrior\\Warior47.wav",	
	S_732_WAR_09		= 732,	// "Sfx\\Warrior\\Warior09.wav",	
	S_733_WAR_10		= 733,	// "Sfx\\Warrior\\Warior10.wav",	
	S_734_WAR_11		= 734,	// "Sfx\\Warrior\\Warior11.wav",	
	S_735_WAR_12		= 735,	// "Sfx\\Warrior\\Warior12.wav",	
	S_736_WAR_13		= 736,	// "Sfx\\Warrior\\Warior13.wav",	
	S_737_WAR_14		= 737,	// "Sfx\\Warrior\\Warior14.wav",	
	S_738_WAR_38		= 738,	// "Sfx\\Warrior\\Wario14c.wav",	
	S_739_WAR_15B		= 739,	// "Sfx\\Warrior\\Wario14b.wav",	
	S_740_WAR_15		= 740,	// "Sfx\\Warrior\\Warior15.wav",	
	S_741_WAR_15B		= 741,	// "Sfx\\Warrior\\Wario15b.wav",	
	S_742_WAR_15C		= 742,	// "Sfx\\Warrior\\Wario15c.wav",	
	S_743_WAR_16		= 743,	// "Sfx\\Warrior\\Warior16.wav",	
	S_744_WAR_16B		= 744,	// "Sfx\\Warrior\\Wario16b.wav",	
	S_745_WAR_16C		= 745,	// "Sfx\\Warrior\\Wario16c.wav",	
	S_746_WAR_17		= 746,	// "Sfx\\Warrior\\Warior17.wav",	
	S_747_WAR_18		= 747,	// "Sfx\\Warrior\\Warior18.wav",	
	S_748_WAR_19		= 748,	// "Sfx\\Warrior\\Warior19.wav",	
	S_749_WAR_20		= 749,	// "Sfx\\Warrior\\Warior20.wav",	
	S_750_WAR_21		= 750,	// "Sfx\\Warrior\\Warior21.wav",	
	S_751_WAR_22		= 751,	// "Sfx\\Warrior\\Warior22.wav",	
	S_752_WAR_23		= 752,	// "Sfx\\Warrior\\Warior23.wav",	
	S_753_WAR_24		= 753,	// "Sfx\\Warrior\\Warior24.wav",	
	S_754_WAR_25		= 754,	// "Sfx\\Warrior\\Warior25.wav",	
	S_755_WAR_26		= 755,	// "Sfx\\Warrior\\Warior26.wav",	
	S_756_WAR_27		= 756,	// "Sfx\\Warrior\\Warior27.wav",	
	S_757_WAR_28		= 757,	// "Sfx\\Warrior\\Warior28.wav",	
	S_758_WAR_29		= 758,	// "Sfx\\Warrior\\Warior29.wav",	
	S_759_WAR_30		= 759,	// "Sfx\\Warrior\\Warior30.wav",	
	S_760_WAR_31		= 760,	// "Sfx\\Warrior\\Warior31.wav",	
	S_761_WAR_32		= 761,	// "Sfx\\Warrior\\Warior32.wav",	
	S_762_WAR_96B		= 762,	// "Sfx\\Warrior\\Wario96b.wav",	
	S_763_WAR_34		= 763,	// "Sfx\\Warrior\\Warior34.wav",	
	S_764_WAR_35		= 764,	// "Sfx\\Warrior\\Warior35.wav",	
	S_765_WAR_36		= 765,	// "Sfx\\Warrior\\Warior36.wav",	
	S_766_WAR_37		= 766,	// "Sfx\\Warrior\\Warior37.wav",	
	S_767_WAR_38		= 767,	// "Sfx\\Warrior\\Warior38.wav",	
	S_768_WAR_39		= 768,	// "Sfx\\Warrior\\Warior39.wav",	
	S_769_WAR_40		= 769,	// "Sfx\\Warrior\\Warior40.wav",	
	S_770_WAR_41		= 770,	// "Sfx\\Warrior\\Warior41.wav",	
	S_771_WAR_42		= 771,	// "Sfx\\Warrior\\Warior42.wav",	
	S_772_WAR_43		= 772,	// "Sfx\\Warrior\\Warior43.wav",	
	S_773_WAR_44		= 773,	// "Sfx\\Warrior\\Warior44.wav",	
	S_774_WAR_45		= 774,	// "Sfx\\Warrior\\Warior45.wav",	
	S_775_WAR_46		= 775,	// "Sfx\\Warrior\\Warior46.wav",	
	S_776_WAR_47		= 776,	// "Sfx\\Warrior\\Warior47.wav",	
	S_777_WAR_48		= 777,	// "Sfx\\Warrior\\Warior48.wav",	
	S_778_WAR_49		= 778,	// "Sfx\\Warrior\\Warior49.wav",	
	S_779_WAR_50		= 779,	// "Sfx\\Warrior\\Warior50.wav",	
	S_780_WAR_51		= 780,	// "Sfx\\Warrior\\Warior51.wav",	
	S_781_WAR_52		= 781,	// "Sfx\\Warrior\\Warior52.wav",	
	S_782_WAR_53		= 782,	// "Sfx\\Warrior\\Warior53.wav",	
	S_783_WAR_54		= 783,	// "Sfx\\Warrior\\Warior54.wav",	
	S_784_WAR_55		= 784,	// "Sfx\\Warrior\\Warior55.wav",	
	S_785_WAR_56		= 785,	// "Sfx\\Warrior\\Warior56.wav",	
	S_786_WAR_57		= 786,	// "Sfx\\Warrior\\Warior57.wav",	
	S_787_WAR_58		= 787,	// "Sfx\\Warrior\\Warior58.wav",	
	S_788_WAR_59		= 788,	// "Sfx\\Warrior\\Warior59.wav",	
	S_789_WAR_60		= 789,	// "Sfx\\Warrior\\Warior60.wav",	
	S_790_WAR_61		= 790,	// "Sfx\\Warrior\\Warior61.wav",	
	S_791_WAR_62		= 791,	// "Sfx\\Warrior\\Warior62.wav",	
	S_792_WAR_63		= 792,	// "Sfx\\Warrior\\Warior63.wav",	
	S_793_WAR_64		= 793,	// "Sfx\\Warrior\\Warior64.wav",	
	S_794_WAR_65		= 794,	// "Sfx\\Warrior\\Warior65.wav",	
	S_795_WAR_66		= 795,	// "Sfx\\Warrior\\Warior66.wav",	
	S_796_WAR_67		= 796,	// "Sfx\\Warrior\\Warior67.wav",	
	S_797_WAR_68		= 797,	// "Sfx\\Warrior\\Warior68.wav",	
	S_798_WAR_69		= 798,	// "Sfx\\Warrior\\Warior69.wav",	
	S_799_WAR_69B		= 799,	// "Sfx\\Warrior\\Wario69b.wav",	
	S_800_WAR_FURY		= 800,	// "Sfx\\Warrior\\Fury.wav",	
	S_801_WAR_71		= 801,	// "Sfx\\Warrior\\Warior71.wav",	
	S_802_WAR_72		= 802,	// "Sfx\\Warrior\\Warior72.wav",	
	S_803_WAR_73		= 803,	// "Sfx\\Warrior\\Warior73.wav",	
	S_804_WAR_74		= 804,	// "Sfx\\Warrior\\Warior74.wav",	
	S_805_WAR_75		= 805,	// "Sfx\\Warrior\\Warior75.wav",	
	S_806_WAR_76		= 806,	// "Sfx\\Warrior\\Warior76.wav",	
	S_807_WAR_77		= 807,	// "Sfx\\Warrior\\Warior77.wav",	
	S_808_WAR_78		= 808,	// "Sfx\\Warrior\\Warior78.wav",	
	S_809_WAR_46		= 809,	// "Sfx\\Warrior\\Warior46.wav",	
	S_810_WAR_80		= 810,	// "Sfx\\Warrior\\Warior80.wav",	
	S_811_WAR_81		= 811,	// "Sfx\\Warrior\\Warior81.wav",	
	S_812_WAR_82		= 812,	// "Sfx\\Warrior\\Warior82.wav",	
	S_813_WAR_83		= 813,	// "Sfx\\Warrior\\Warior83.wav",	
	S_814_WAR_84		= 814,	// "Sfx\\Warrior\\Warior84.wav",	
	S_815_WAR_85		= 815,	// "Sfx\\Warrior\\Warior85.wav",	
	S_816_WAR_86		= 816,	// "Sfx\\Warrior\\Warior86.wav",	
	S_817_WAR_87		= 817,	// "Sfx\\Warrior\\Warior87.wav",	
	S_818_WAR_SL		= 818,	// "Sfx\\Warrior\\WariorSL.wav",	
	S_819_WAR_89		= 819,	// "Sfx\\Warrior\\Warior89.wav",	
	S_820_WAR_90		= 820,	// "Sfx\\Warrior\\Warior90.wav",	
	S_821_WAR_SL		= 821,	// "Sfx\\Warrior\\WariorSL.wav",	
	S_822_WAR_92		= 822,	// "Sfx\\Warrior\\Warior92.wav",	
	S_823_WAR_93		= 823,	// "Sfx\\Warrior\\Warior93.wav",	
	S_824_WAR_94		= 824,	// "Sfx\\Warrior\\Warior94.wav",	
	S_825_WAR_SL		= 825,	// "Sfx\\Warrior\\WariorSL.wav",	
	S_826_WAR_95B		= 826,	// "Sfx\\Warrior\\Wario95b.wav",	
	S_827_WAR_95C		= 827,	// "Sfx\\Warrior\\Wario95c.wav",	
	S_828_WAR_95D		= 828,	// "Sfx\\Warrior\\Wario95d.wav",	
	S_829_WAR_95E		= 829,	// "Sfx\\Warrior\\Wario95e.wav",	
	S_830_WAR_95F		= 830,	// "Sfx\\Warrior\\Wario95f.wav",	
	S_831_WAR_90		= 831,	// "Sfx\\Warrior\\Warior90.wav",	
	S_832_WAR_96B		= 832,	// "Sfx\\Warrior\\Wario97.wav",	
	S_833_WAR_98		= 833,	// "Sfx\\Warrior\\Wario98.wav",	
	S_834_WAR_99		= 834,	// "Sfx\\Warrior\\Warior99.wav",	
	S_835_WAR_100		= 835,	// "Sfx\\Warrior\\Wario100.wav",	
	S_836_WAR_101		= 836,	// "Sfx\\Warrior\\Wario101.wav",	
	S_837_WAR_102		= 837,	// "Sfx\\Warrior\\Wario102.wav",	
	S_838_MONK_01		= 838,	// "Sfx\\Monk\\Monk01.wav",	
	S_839_				= 839,	// "Sfx\\Misc\\blank.wav",	
	S_840_				= 840,	// "Sfx\\Misc\\blank.wav",	
	S_841_				= 841,	// "Sfx\\Misc\\blank.wav",	
	S_842_				= 842,	// "Sfx\\Misc\\blank.wav",	
	S_843_				= 843,	// "Sfx\\Misc\\blank.wav",	
	S_844_				= 844,	// "Sfx\\Misc\\blank.wav",	
	S_845_MONK_08		= 845,	// "Sfx\\Monk\\Monk08.wav",	
	S_846_M_AY			= 846,	// "Sfx\\Monsters\\Ay.wav",	
	S_847_MONK_10		= 847,	// "Sfx\\Monk\\Monk10.wav",	
	S_848_MONK_11		= 848,	// "Sfx\\Monk\\Monk11.wav",	
	S_849_MONK_12		= 849,	// "Sfx\\Monk\\Monk12.wav",	
	S_850_MONK_13		= 850,	// "Sfx\\Monk\\Monk13.wav",	
	S_851_MONK_14		= 851,	// "Sfx\\Monk\\Monk14.wav",	
	S_852_MONK_15		= 852,	// "Sfx\\Monk\\Monk15.wav",	
	S_853_MONK_16		= 853,	// "Sfx\\Monk\\Monk16.wav",	
	S_854_				= 854,	// "Sfx\\Misc\\blank.wav",	
	S_855_				= 855,	// "Sfx\\Misc\\blank.wav",	
	S_856_				= 856,	// "Sfx\\Misc\\blank.wav",	
	S_857_				= 857,	// "Sfx\\Misc\\blank.wav",	
	S_858_				= 858,	// "Sfx\\Misc\\blank.wav",	
	S_859_				= 859,	// "Sfx\\Misc\\blank.wav",	
	S_860_				= 860,	// "Sfx\\Misc\\blank.wav",	
	S_861_MONK_24		= 861,	// "Sfx\\Monk\\Monk24.wav",	
	S_862_				= 862,	// "Sfx\\Misc\\blank.wav",	
	S_863_				= 863,	// "Sfx\\Misc\\blank.wav",	
	S_864_MONK_27		= 864,	// "Sfx\\Monk\\Monk27.wav",	
	S_865_				= 865,	// "Sfx\\Misc\\blank.wav",	
	S_866_MONK_29		= 866,	// "Sfx\\Monk\\Monk29.wav",	
	S_867_				= 867,	// "Sfx\\Misc\\blank.wav",	
	S_868_				= 868,	// "Sfx\\Misc\\blank.wav",	
	S_869_				= 869,	// "Sfx\\Misc\\blank.wav",	
	S_870_				= 870,	// "Sfx\\Misc\\blank.wav",	
	S_871_MONK_34		= 871,	// "Sfx\\Monk\\Monk34.wav",	
	S_872_MONK_35		= 872,	// "Sfx\\Monk\\Monk35.wav",	
	S_873_				= 873,	// "Sfx\\Misc\\blank.wav",	
	S_874_				= 874,	// "Sfx\\Misc\\blank.wav",	
	S_875_				= 875,	// "Sfx\\Misc\\blank.wav",	
	S_876_				= 876,	// "Sfx\\Misc\\blank.wav",	
	S_877_				= 877,	// "Sfx\\Misc\\blank.wav",	
	S_878_				= 878,	// "Sfx\\Misc\\blank.wav",	
	S_879_				= 879,	// "Sfx\\Misc\\blank.wav",	
	S_880_MONK_43		= 880,	// "Sfx\\Monk\\Monk43.wav",	
	S_881_				= 881,	// "Sfx\\Misc\\blank.wav",	
	S_882_				= 882,	// "Sfx\\Misc\\blank.wav",	
	S_883_MONK_46		= 883,	// "Sfx\\Monk\\Monk46.wav",	
	S_884_				= 884,	// "Sfx\\Misc\\blank.wav",	
	S_885_				= 885,	// "Sfx\\Misc\\blank.wav",	
	S_886_MONK_49		= 886,	// "Sfx\\Monk\\Monk49.wav",	
	S_887_MONK_50		= 887,	// "Sfx\\Monk\\Monk50.wav",	
	S_888_				= 888,	// "Sfx\\Misc\\blank.wav",	
	S_889_MONK_52		= 889,	// "Sfx\\Monk\\Monk52.wav",	
	S_890_				= 890,	// "Sfx\\Misc\\blank.wav",	
	S_891_MONK_54		= 891,	// "Sfx\\Monk\\Monk54.wav",	
	S_892_MONK_55		= 892,	// "Sfx\\Monk\\Monk55.wav",	
	S_893_MONK_56		= 893,	// "Sfx\\Monk\\Monk56.wav",	
	S_894_				= 894,	// "Sfx\\Misc\\blank.wav",	
	S_895_				= 895,	// "Sfx\\Misc\\blank.wav",	
	S_896_				= 896,	// "Sfx\\Misc\\blank.wav",	
	S_897_				= 897,	// "Sfx\\Misc\\blank.wav",	
	S_898_MONK_61		= 898,	// "Sfx\\Monk\\Monk61.wav",	
	S_899_MONK_62		= 899,	// "Sfx\\Monk\\Monk62.wav",	
	S_900_				= 900,	// "Sfx\\Misc\\blank.wav",	
	S_901_				= 901,	// "Sfx\\Misc\\blank.wav",	
	S_902_				= 902,	// "Sfx\\Misc\\blank.wav",	
	S_903_				= 903,	// "Sfx\\Misc\\blank.wav",	
	S_904_				= 904,	// "Sfx\\Misc\\blank.wav",	
	S_905_MONK_68		= 905,	// "Sfx\\Monk\\Monk68.wav",	
	S_906_MONK_69		= 906,	// "Sfx\\Monk\\Monk69.wav",	
	S_907_MONK_69B		= 907,	// "Sfx\\Monk\\Monk69b.wav",	
	S_908_MONK_70		= 908,	// "Sfx\\Monk\\Monk70.wav",	
	S_909_MONK_DC		= 909,	// "Sfx\\Monk\\MonkDC.wav",	
	S_910_				= 910,	// "Sfx\\Misc\\blank.wav",	
	S_911_				= 911,	// "Sfx\\Misc\\blank.wav",	
	S_912_				= 912,	// "Sfx\\Misc\\blank.wav",	
	S_913_				= 913,	// "Sfx\\Misc\\blank.wav",	
	S_914_				= 914,	// "Sfx\\Misc\\blank.wav",	
	S_915_				= 915,	// "Sfx\\Misc\\blank.wav",	
	S_916_				= 916,	// "Sfx\\Misc\\blank.wav",	
	S_917_MONK_46		= 917,	// "Sfx\\Monk\\Monk46.wav",	
	S_918_MONK_80		= 918,	// "Sfx\\Monk\\Monk80.wav",	
	S_919_				= 919,	// "Sfx\\Misc\\blank.wav",	
	S_920_MONK_82		= 920,	// "Sfx\\Monk\\Monk82.wav",	
	S_921_MONK_83		= 921,	// "Sfx\\Monk\\Monk83.wav",	
	S_922_				= 922,	// "Sfx\\Misc\\blank.wav",	
	S_923_				= 923,	// "Sfx\\Misc\\blank.wav",	
	S_924_				= 924,	// "Sfx\\Misc\\blank.wav",	
	S_925_MONK_87		= 925,	// "Sfx\\Monk\\Monk87.wav",	
	S_926_MONK_SL		= 926,	// "Sfx\\Monk\\MonkSL.wav",	
	S_927_MONK_89		= 927,	// "Sfx\\Monk\\Monk89.wav",	
	S_928_				= 928,	// "Sfx\\Misc\\blank.wav",	
	S_929_MONK_SL		= 929,	// "Sfx\\Monk\\MonkSL.wav",	
	S_930_MONK_92		= 930,	// "Sfx\\Monk\\Monk92.wav",	
	S_931_				= 931,	// "Sfx\\Misc\\blank.wav",	
	S_932_MONK_94		= 932,	// "Sfx\\Monk\\Monk94.wav",	
	S_933_MONK_SL		= 933,	// "Sfx\\Monk\\MonkSL.wav",	
	S_934_MONK_91		= 934,	// "Sfx\\Monk\\Monk91.wav",	
	S_935_MONK_96		= 935,	// "Sfx\\Monk\\Monk96.wav",	
	S_936_MONK_98		= 936,	// "Sfx\\Monk\\Monk98.wav",	
	S_937_MONK_99		= 937,	// "Sfx\\Monk\\Monk99.wav",	
	S_938_				= 938,	// "Sfx\\Misc\\blank.wav",	
	S_939_				= 939,	// "Sfx\\Misc\\blank.wav",	
	S_940_				= 940,	// "Sfx\\Misc\\blank.wav",	
	S_941_N_01			= 941,	// "Sfx\\Narrator\\Nar01.wav",	
	S_942_N_02			= 942,	// "Sfx\\Narrator\\Nar02.wav",	
	S_943_N_03			= 943,	// "Sfx\\Narrator\\Nar03.wav",	
	S_944_N_04			= 944,	// "Sfx\\Narrator\\Nar04.wav",	
	S_945_N_05			= 945,	// "Sfx\\Narrator\\Nar05.wav",	
	S_946_N_06			= 946,	// "Sfx\\Narrator\\Nar06.wav",	
	S_947_N_07			= 947,	// "Sfx\\Narrator\\Nar07.wav",	
	S_948_N_08			= 948,	// "Sfx\\Narrator\\Nar08.wav",	
	S_949_N_09			= 949,	// "Sfx\\Narrator\\Nar09.wav",	
	S_950_LVL16INT		= 950,	// "Sfx\\Misc\\Lvl16int.wav",	
	S_951_M_BUTCHER		= 951,	// "Sfx\\Monsters\\Butcher.wav",	
	S_952_M_GARBUD01	= 952,	// "Sfx\\Monsters\\Garbud01.wav",	
	S_953_M_GARBUD02	= 953,	// "Sfx\\Monsters\\Garbud02.wav",	
	S_954_M_GARBUD03	= 954,	// "Sfx\\Monsters\\Garbud03.wav",	
	S_955_M_GARBUD04	= 955,	// "Sfx\\Monsters\\Garbud04.wav",	
	S_956_M_DIABLOD		= 956,	// "Sfx\\Monsters\\diablod.wav",	
	S_957_M_LACH01		= 957,	// "Sfx\\Monsters\\Lach01.wav",
	S_958_M_LACH02		= 958,	// "Sfx\\Monsters\\Lach02.wav",
	S_959_M_LACH03		= 959,	// "Sfx\\Monsters\\Lach03.wav",
	S_960_M_LAZ01		= 960,	// "Sfx\\Monsters\\Laz01.wav",	
	S_961_M_LAZ02		= 961,	// "Sfx\\Monsters\\Laz02.wav",	
	S_962_M_SKING01		= 962,	// "Sfx\\Monsters\\Sking01.wav",	
	S_963_M_SNOT01		= 963,	// "Sfx\\Monsters\\Snot01.wav",	
	S_964_M_SNOT02		= 964,	// "Sfx\\Monsters\\Snot02.wav",
	S_965_M_SNOT03		= 965,	// "Sfx\\Monsters\\Snot03.wav",
	S_966_M_WARLRD01	= 966,	// "Sfx\\Monsters\\Warlrd01.wav",	
	S_967_M_WLOCK01		= 967,	// "Sfx\\Monsters\\Wlock01.wav",	
	S_968_M_ZHAR01		= 968,	// "Sfx\\Monsters\\Zhar01.wav",	
	S_969_M_ZHAR02		= 969,	// "Sfx\\Monsters\\Zhar02.wav",	
	S_970_M_DIABLOD		= 970,	// "Sfx\\Monsters\\DiabloD.wav",	
	S_971_T_DRUNK05		= 971,	// "Sfx\\towners\\drunk05.wav",
	S_972_HF_FARMER2	= 972,	// "Sfx\\Hellfire\\Farmer2.wav",	
	S_973_HF_FARMER2A	= 973,	// "Sfx\\Hellfire\\Farmer2A.wav",	
	S_974_HF_FARMER3	= 974,	// "Sfx\\Hellfire\\Farmer3.wav",	
	S_975_HF_FARMER4	= 975,	// "Sfx\\Hellfire\\Farmer4.wav",	
	S_976_HF_FARMER5	= 976,	// "Sfx\\Hellfire\\Farmer5.wav",	
	S_977_T_TAVOWN03	= 977,	// "Sfx\\towners\\tavown03.wav",	
	S_978_T_BMAID05		= 978,	// "Sfx\\towners\\bmaid05.wav",	
	S_979_SOR_81		= 979,	// "Sfx\\Sorceror\\Mage81.wav",	
	S_980_HF_FARMER9	= 980,	// "Sfx\\Hellfire\\Farmer9.wav",	
	S_981_SOR_84		= 981,	// "Sfx\\Sorceror\\mage84.wav",	
	S_982_HF_NAKRUL1	= 982,	// "sfx\\Hellfire\\NAKRUL1.WAV",	
	S_983_HF_NARR9		= 983,	// "sfx\\hellfire\\naratr9.wav",	
	S_984_HF_NARR8		= 984,	// "sfx\\hellfire\\naratr8.wav",	
	S_985_HF_DEFILER1	= 985,	// "Sfx\\Hellfire\\DEFILER1.wav",	
	S_986_HF_DEFILER2	= 986,	// "Sfx\\Hellfire\\DEFILER2.wav",	
	S_987_HF_DEFILER3	= 987,	// "Sfx\\Hellfire\\DEFILER3.wav",	
	S_988_HF_DEFILER4	= 988,	// "Sfx\\Hellfire\\DEFILER4.wav",	
	S_989_M_VAR			= 989,	// "Sfx\\Monsters\\Var.wav",	
	S_990_HF_DFLRGRT	= 990,	// "Sfx\\Hellfire\\dflrgrt.wav",	
	S_991_MONK_SL		= 991,	// "Sfx\\Monk\\monkSL.WAV",	
	S_992_M_IZUAL01		= 992,	// "Sfx\\Monsters\\Izual01.wav",	
	S_993_HF_NAKRUL2	= 993,	// "Sfx\\Hellfire\\NAKRUL2.wav",	
	S_994_HF_NAKRUL3	= 994,	// "Sfx\\Hellfire\\NAKRUL3.wav",	
	S_995_MONK_SL		= 995,	// "Sfx\\Monk\\MonkSL.wav",	
	S_996_MONK_SL		= 996,	// "Sfx\\Monk\\MonkSL.wav",	
	S_997_M_UBERGRT		= 997,	// "Sfx\\Monsters\\Ubergrt.wav",	
	S_998_HF_NARATR3	= 998,	// "Sfx\\Hellfire\\NARATR3.wav",	
	S_999_HF_COWSUT1	= 999,	// "Sfx\\Hellfire\\COWSUT1.wav",	
	S_1000_HF_COWSUT2	= 1000,	// "Sfx\\Hellfire\\COWSUT2.wav",	
S_1001_HF_COWSUT3 = 1001,	// "Sfx\\Hellfire\\COWSUT3.wav",	
S_1002_HF_COWSUT4 = 1002,	// "Sfx\\Hellfire\\COWSUT4.wav",	
S_1003_HF_COWSUT4A = 1003,	// "Sfx\\Hellfire\\COWSUT4A.wav",	
S_1004_HF_COWSUT5 = 1004,	// "Sfx\\Hellfire\\COWSUT5.wav",	
S_1005_HF_COWSUT6 = 1005,	// "Sfx\\Hellfire\\COWSUT6.wav",	
S_1006_HF_COWSUT7 = 1006,	// "Sfx\\Hellfire\\COWSUT7.wav",	
S_1007_HF_COWSUT8 = 1007,	// "Sfx\\Hellfire\\COWSUT8.wav",	
S_1008_HF_COWSUT9 = 1008,	// "Sfx\\Hellfire\\COWSUT9.wav",	
S_1009_HF_COWSUT10 = 1009,	// "Sfx\\Hellfire\\COWSUT10.wav",	
S_1010_HF_COWSUT11 = 1010,	// "Sfx\\Hellfire\\COWSUT11.wav",	
S_1011_HF_COWSUT12 = 1011,	// "Sfx\\Hellfire\\COWSUT12.wav",	
S_1012_HF_SKLJRN1 = 1012,	// "Sfx\\Hellfire\\Skljrn1.wav",	
S_1013_HF_NARATR6 = 1013,	// "Sfx\\Hellfire\\Naratr6.wav",	
S_1014_HF_NARATR7 = 1014,	// "Sfx\\Hellfire\\Naratr7.wav",	
S_1015_M_UBER = 1015,	// "Sfx\\Monsters\\Uber.wav",	
S_1016_HF_NARATR5 = 1016,	// "Sfx\\Hellfire\\Naratr5.wav",	
S_1017_HF_NARATR4 = 1017,	// "Sfx\\Hellfire\\Naratr4.wav",	
S_1018_HF_NARATR4 = 1018,	// "Sfx\\Hellfire\\Naratr4.wav",	
S_1019_HF_TRADER1 = 1019,	// "Sfx\\Hellfire\\TRADER1.wav",	
S_1020_I_CROPEN = 1020,	// "Sfx\\Items\\Cropen.wav",	
S_1021_I_CRCLOS = 1021,	// "Sfx\\Items\\Crclos.wav",	
S_1022_LEVELUP = 1022,	// "sfx\\ambience\\levelup.wav",	
S_1023_ROG_101 = 1023,	// "sfx\\rogue\\rogue101.wav",	
S_1024 = 1024,	// "sfx\\sorceror\\mage85.wav",	
S_1025 = 1025,	// "sfx\\towners\\tavown17.wav",	
S_1026 = 1026,	// "sfx\\ambience\\medsand1.wav",	
S_1027 = 1027,	// "sfx\\ambience\\medsand2.wav",	
S_1028 = 1028,	// "sfx\\ambience\\medsand3.wav",	
S_1029 = 1029,	// "sfx\\ambience\\medsand4.wav",	
S_1030 = 1030,	// "sfx\\ambience\\meddirt4.wav",	
S_1031 = 1031,	// "sfx\\ambience\\medistone1.wav",	
S_1032 = 1032,	// "sfx\\ambience\\medistone3.wav",	
S_1033 = 1033,	// "sfx\\ambience\\meddirt3.wav",	
S_1034 = 1034,	// "sfx\\ambience\\heavyDirt2.wav",	
S_1035 = 1035,	// "sfx\\ambience\\meddirtrun2.wav",	
S_1036 = 1036,	// "sfx\\ambience\\jailshrineX1.wav",	
S_1037 = 1037,	// "sfx\\ambience\\hellforgeplace.wav",	
S_1038 = 1038,	// "sfx\\towners\\tavown14.wav",	
S_1039_M_ND = 1039,	// "sfx\\monsters\\ND.wav",	
S_1040 = 1040,	// "monsters\\scav\\boss.wav",	
S_1041 = 1041,	// "monsters\\scav\\activ1.wav",	
S_1042 = 1042,	// "monsters\\scav\\activ2.wav",	
S_1043 = 1043,	// "monsters\\snake\\3.wav",	
S_1044 = 1044,	// "monsters\\snake\\2.wav",	
S_1045 = 1045,	// "monsters\\snake\\1.wav",	
S_1046 = 1046,	// "monsters\\corpse\\corpseactiv1.wav",	
S_1047 = 1047,	// "monsters\\corpse\\corpseactiv4.wav",	
S_1048 = 1048,	// "monsters\\corpse\\corpseactiv3.wav",	
S_1049 = 1049,	// "monsters\\corpse\\corpseactiv2.wav",	
S_1050 = 1050,	// "monsters\\reaper\\act1.wav",	
S_1051 = 1051,	// "monsters\\reaper\\act2.wav",	
S_1052 = 1052,	// "monsters\\reaper\\act3.wav",	
S_1053 = 1053,	// "monsters\\bigfall\\act2.wav",	
S_1054 = 1054,	// "monsters\\bigfall\\act1.wav",	
S_1055 = 1055,	// "monsters\\bigfall\\act5.wav",	
S_1056 = 1056,	// "monsters\\bigfall\\act4.wav",	
S_1057 = 1057,	// "monsters\\bigfall\\act3.wav",	
S_1058 = 1058,	// "monsters\\goatbow\\engage1.wav",	
S_1059 = 1059,	// "monsters\\goatbow\\engage2.wav",	
S_1060 = 1060,	// "monsters\\goatlord\\err1.wav",	
S_1061 = 1061,	// "monsters\\goatlord\\err2.wav",	
S_1062 = 1062,	// "monsters\\flesh\\grot02.wav",	
S_1063 = 1063,	// "monsters\\flesh\\grot01.wav",	
S_1064 = 1064,	// "monsters\\flesh\\grot03.wav",	
S_1065 = 1065,	// "monsters\\clasp\\1.wav",	
S_1066 = 1066,	// "monsters\\clasp\\2.wav",	
S_1067 = 1067,	// "monsters\\clasp\\3.wav",	
S_1068 = 1068,	// "monsters\\antworm\\1.wav",	
S_1069 = 1069,	// "monsters\\antworm\\2.wav",	
S_1070 = 1070,	// "monsters\\antworm\\3.wav",	
S_1071 = 1071,	// "monsters\\mega\\1.wav",	
S_1072 = 1072,	// "monsters\\mega\\3.wav",	
S_1073 = 1073,	// "monsters\\mega\\2.wav",	
S_1074 = 1074,	// "sfx\\warrior\\warior88.wav",	
S_1075 = 1075,	// "sfx\\rogue\\rogue88.wav",	
S_1076 = 1076,	// "sfx\\sorceror\\mage88.wav",	
S_1077 = 1077,	// "sfx\\monk\\monk88.wav",	
S_1078 = 1078,	// "sfx\\towners\\bmaid02.wav",	
S_1079 = 1079,	// "sfx\\towners\\bmaid06.wav",	
S_1080 = 1080,	// "Sfx\\Towners\\Priest00.wav",	
S_1081 = 1081,	// "Sfx\\Towners\\Priest06.wav",	
S_1082 = 1082,	// "Sfx\\Towners\\Priest02.wav",	
S_1083 = 1083,	// "Sfx\\Towners\\Priest07.wav",	
S_1084 = 1084, // "Sfx\\misc\\research.wav",
S_1085 = 1085,
S_1086 = 1086,
S_1087 = 1087,
S_1088 = 1088,
S_1089 = 1089,
S_1090 = 1090,
S_1091 = 1091,
S_1092 = 1092,
S_1093 = 1093,
S_1094 = 1094,
S_1095 = 1095,
S_1096 = 1096,
S_1097 = 1097,
S_1098 = 1098,
S_1099 = 1099,
S_1100 = 1100,
S_1107_HOLY_ARROW_SOUND = 1107, // "SFX\\misc\\holy-arrow-01.wav"
S_1108_ARCANE_ARROW_SHOOT_SOUND = 1108,// "SFX\\misc\\magicarrow1.wav"
S_1109_ARCANE_ARROW_HIT_SOUND = 1109, // ""sfx\\misc\\explosion\\explosionsmall3.wav""
S_1110_ACID_ARROW_SHOOT_SOUND = 1110,
S_1111_ACID_ARROW_HIT_SOUND = 1111,
};
reflect_enum( SOUND, S_M1_NO_SOUND, S_0_WALK1, S_1_WALK2, S_2_WALK3, S_3_WALK4, S_4_BFIRE, S_5_FMAG, S_6_TMAG, S_7_LGHIT,
	S_8_LGHIT1, S_9_SWING, S_10_SWING2, S_11_DEAD, S_12_STING1, S_13_FBALLBOW, S_14_QUESTDON, S_15_I_ARMRFKD, S_16_I_BARLFIRE,
	S_17_I_BARREL, S_18_I_PODPOP8, S_19_I_PODPOP5, S_20_I_URNPOP3, S_21_I_URNPOP2, S_22_I_BHIT, S_23_I_BHIT1, S_24_I_CHEST, S_25_I_DOORCLOS,
	S_26_I_DOOROPEN, S_27_I_FLIPANVL, S_28_I_FLIPAXE, S_29_I_FLIPBLST, S_30_I_FLIPBODY, S_31_I_FLIPBOOK, S_32_I_FLIPBOW, S_33_I_FLIPCAP,
	S_34_I_FLIPHARM, S_35_I_FLIPLARM, S_36_I_FLIPMAG, S_37_I_FLIPMAG1, S_38_I_LITESHLD, S_39_I_FLIPPOT, S_40_I_FLIPRING, S_41_I_FLIPROCK,
	S_42_I_FLIPSCRL, S_43_I_FLIPSHLD, S_44_I_FLIPSIGN, S_45_I_FLIPSTAF, S_46_I_FLIPSWOR, S_47_I_GOLD, S_48_M_TAUNT3, S_49_I_INVANVL,
	S_50_I_INVAXE, S_51_I_INVBLST, S_52_I_INVBODY, S_53_I_INVBOOK, S_54_I_INVBOW, S_55_I_INVCAP, S_56_I_INVGRAB, S_57_I_INVHARM,
	S_58_I_INVLARM, S_59_I_INVLITSH, S_60_I_INVPOT, S_61_I_INVRING, S_62_I_INVROCK, S_63_I_INVSCROL, S_64_I_INVSHIEL, S_65_I_INVSIGN,
	S_66_I_INVSTAF, S_67_I_INVSWORD, S_68_I_LEVER, S_69_I_MAGIC, S_70_I_MAGIC1, S_71_I_READBOOK, S_72_I_SARC, S_73_I_SHIELFKD,
	S_74_I_SWRDFKD, S_75_I_TITLEMOV, S_76_I_TITLSLCT, S_77_, S_78_I_TRAP, S_79_CAST1, S_80_CAST10, S_81_CAST12, S_82_CAST2, S_83_CAST3,
	S_84_CAST4, S_85_CAST5, S_86_CAST6, S_87_CAST7, S_88_CAST9, S_89_CAST9, S_90_HEALING, S_91_REPAIR, S_92_ACIDS1, S_93_ACIDS2,
	S_94_AP, S_95_ARROWALL, S_96_BLDBOIL, S_97_BLODSTAR, S_98_BLSIMPT, S_99_BONESP, S_100_BSIMPCT, S_101_CALDRON, S_102_CBOLT,
	S_103_CHLTNING, S_104_DSERP, S_105_ELECIMP1, S_106_ELEMENTL, S_107_DSERP, S_108_FBALL, S_109_FBOLT1, S_110_FBOLT2, S_111_FIRIMP1,
	S_112_FIRIMP2, S_113_FLAMWAVE, S_114_FLASH, S_115_FOUNTAIN, S_116_GOLUM, S_117_GOLUMDED, S_118_PORTAL, S_119_GUARD, S_120_GRDLANCH,
	S_121_HOLYBOLT, S_122_HYPER, S_123_INVISIBL, S_124_INVISIBL, S_125_INVPOT, S_126_LNING1, S_127_LTNING, S_128_MSHIELD, S_129_NESTXPLD,
	S_130_NOVA, S_131_PORTAL, S_132_PUDDLE, S_133_RESUR, S_134_SCURSE, S_135_SCURIMP, S_136_SENTINEL, S_137_SHATTER, S_138_SOULFIRE,
	S_139_SPOUTLOP, S_140_SPOUTSTR, S_141_STORM, S_142_TRAPDIS, S_143_TELEPORT, S_144_VTHEFT, S_145_WALLLOOP, S_146_WALLSTRT,
	S_147_LMAG, S_148_T_BMAID01, S_149_I_CP, S_150_I_CQ, S_151_T_BMAID04, S_152_I_FLIPLTHR, S_153_I_INVLTHR, S_154_T_BMAID07,
	S_155_T_BMAID08, S_156_T_BMAID09, S_157_T_BMAID10, S_158_T_BMAID11, S_159_T_BMAID12, S_160_T_BMAID13, S_161_T_BMAID14, S_162_T_BMAID15,
	S_163_T_BMAID16, S_164_T_BMAID17, S_165_T_BMAID18, S_166_T_BMAID19, S_167_T_BMAID20, S_168_T_BMAID21, S_169_T_BMAID22, S_170_T_BMAID23,
	S_171_T_BMAID24, S_172_T_BMAID25, S_173_T_BMAID26, S_174_T_BMAID17, S_175_T_BMAID28, S_176_T_BMAID29, S_177_T_BMAID30, S_178_T_BMAID31,
	S_179_T_BMAID32, S_180_T_BMAID33, S_181_T_BMAID34, S_182_T_BMAID35, S_183_T_BMAID36, S_184_T_BMAID37, S_185_T_BMAID38, S_186_T_BMAID39,
	S_185_T_BMAID40, S_188_T_BSMITH01, S_189_T_BSMITH02, S_190_T_BSMITH03, S_191_T_BSMITH04, S_192_T_BSMITH05, S_193_T_BSMITH06,
	S_194_T_BSMITH07, S_195_T_BSMITH08, S_196_T_BSMITH09, S_197_T_BSMITH10, S_198_T_BSMITH11, S_199_T_BSMITH12, S_200_T_BSMITH13,
	S_201_T_BSMITH14, S_202_T_BSMITH15, S_203_T_BSMITH16, S_204_T_BSMITH17, S_205_T_BSMITH18, S_206_T_BSMITH19, S_207_T_BSMITH20,
	S_208_T_BSMITH21, S_209_T_BSMITH22, S_210_T_BSMITH23, S_211_T_BSMITH24, S_212_T_BSMITH25, S_213_T_BSMITH26, S_214_T_BSMITH27,
	S_215_T_BSMITH28, S_216_T_BSMITH29, S_217_T_BSMITH30, S_218_T_BSMITH31, S_219_T_BSMITH32, S_220_T_BSMITH33, S_221_T_BSMITH34,
	S_222_T_BSMITH35, S_223_T_BSMITH36, S_224_T_BSMITH37, S_225_T_BSMITH38, S_226_T_BSMITH39, S_227_T_BSMITH40, S_228_T_BSMITH41,
	S_229_T_BSMITH42, S_230_T_BSMITH43, S_231_T_BSMITH44, S_232_T_BSMITH45, S_233_T_BSMITH46, S_234_T_BSMITH47, S_235_T_BSMITH48,
	S_236_T_BSMITH49, S_237_T_BSMITH50, S_238_T_BSMITH51, S_239_T_BSMITH52, S_240_T_BSMITH53, S_241_T_BSMITH54, S_242_T_BSMITH55,
	S_243_T_BSMITH56, S_244_T_COW1, S_245_T_COW2, S_246_T_COW7, S_247_T_COW8, S_248_T_DEADGUY2, S_249_T_DRUNK01, S_250_T_DRUNK02,
	S_251_T_DRUNK03, S_252_T_DRUNK04, S_253_T_DRUNK35, S_254_T_DRUNK06, S_255_T_DRUNK07, S_256_T_DRUNK08, S_257_T_DRUNK09, S_258_T_DRUNK10,
	S_259_T_DRUNK11, S_260_T_DRUNK12, S_261_T_DRUNK13, S_262_T_DRUNK14, S_263_T_DRUNK15, S_264_T_DRUNK16, S_265_T_DRUNK17, S_266_T_DRUNK18,
	S_267_T_DRUNK19, S_268_T_DRUNK20, S_269_T_DRUNK16, S_270_T_DRUNK22, S_271_T_DRUNK23, S_272_T_DRUNK24, S_273_T_DRUNK25, S_274_T_DRUNK26,
	S_275_T_DRUNK27, S_276_T_DRUNK28, S_277_T_DRUNK29, S_278_T_DRUNK30, S_279_T_DRUNK31, S_280_T_DRUNK32, S_281_T_DRUNK33, S_282_T_DRUNK34,
	S_283_T_DRUNK35, S_284_T_HEALER01, S_285_T_HEALER02, S_286_T_HEALER03, S_287_T_HEALER04, S_288_T_HEALER05, S_289_T_HEALER06,
	S_290_T_HEALER07, S_291_T_HEALER08, S_292_T_HEALER09, S_293_T_HEALER10, S_294_T_HEALER11, S_295_T_HEALER12, S_296_T_HEALER13,
	S_297_T_HEALER14, S_298_T_HEALER15, S_299_T_HEALER16, S_300_T_HEALER17, S_301_T_HEALER18, S_302_T_HEALER19, S_303_T_HEALER20,
	S_304_T_HEALER21, S_305_T_HEALER22, S_306_T_HEALER23, S_307_T_HEALER24, S_308_T_HEALER25, S_309_T_HEALER26, S_310_T_HEALER27,
	S_311_T_HEALER28, S_312_T_HEALER29, S_313_T_HEALER30, S_314_T_HEALER31, S_315_T_HEALER32, S_316_T_HEALER33, S_317_T_HEALER34,
	S_318_T_HEALER35, S_319_T_HEALER36, S_320_T_HEALER37, S_321_T_HEALER38, S_322_T_HEALER39, S_323_T_HEALER40, S_324_T_HEALER41,
	S_325_T_HEALER42, S_326_T_HEALER43, S_327_T_HEALER44, S_328_T_HEALER45, S_329_T_HEALER46, S_330_T_HEALER47, S_331_T_PEGBOY01,
	S_332_T_PEGBOY02, S_333_T_PEGBOY03, S_334_T_PEGBOY04, S_335_T_PEGBOY05, S_336_T_PEGBOY06, S_337_T_PEGBOY07, S_338_T_PEGBOY08,
	S_339_T_PEGBOY09, S_340_T_PEGBOY10, S_341_T_PEGBOY11, S_342_T_PEGBOY12, S_343_T_PEGBOY13, S_344_T_PEGBOY14, S_345_T_PEGBOY15,
	S_346_T_PEGBOY16, S_347_T_PEGBOY17, S_348_T_PEGBOY18, S_349_T_PEGBOY19, S_350_T_PEGBOY20, S_351_T_PEGBOY21, S_352_T_PEGBOY22,
	S_353_T_PEGBOY23, S_354_T_PEGBOY24, S_355_T_PEGBOY25, S_356_T_PEGBOY26, S_357_T_PEGBOY27, S_358_T_PEGBOY28, S_359_T_PEGBOY29,
	S_360_T_PEGBOY30, S_361_T_PEGBOY31, S_362_T_PEGBOY32, S_363_T_PEGBOY33, S_364_T_PEGBOY34, S_365_T_PEGBOY35, S_366_T_PEGBOY36,
	S_367_T_PEGBOY37, S_368_T_PEGBOY38, S_369_T_PEGBOY39, S_370_T_PEGBOY40, S_371_T_PEGBOY41, S_372_T_PEGBOY42, S_373_T_PEGBOY43,
	S_374_T_PRIEST00, S_375_T_PRIEST01, S_376_T_PRIEST02, S_377_T_PRIEST03, S_378_T_PRIEST04, S_379_T_PRIEST05, S_380_T_PRIEST06,
	S_381_T_PRIEST07, S_382_T_STORYT00, S_383_T_STORYT01, S_384_T_STORYT02, S_385_T_STORYT03, S_386_T_STORYT04, S_387_T_STORYT05,
	S_388_T_STORYT06, S_389_T_STORYT07, S_390_T_STORYT08, S_391_T_STORYT09, S_392_T_STORYT10, S_393_T_STORYT11, S_394_T_STORYT12,
	S_395_T_STORYT13, S_396_T_STORYT14, S_397_T_STORYT15, S_398_T_STORYT16, S_399_T_STORYT17, S_400_T_STORYT18, S_401_T_STORYT19,
	S_402_T_STORYT20, S_403_T_STORYT21, S_404_T_STORYT22, S_405_T_STORYT23, S_406_T_STORYT24, S_407_T_STORYT25, S_408_T_STORYT26,
	S_409_T_STORYT27, S_410_T_STORYT28, S_411_T_STORYT29, S_412_T_STORYT30, S_413_T_STORYT31, S_414_T_STORYT32, S_415_T_STORYT33,
	S_416_T_STORYT34, S_417_T_STORYT35, S_418_T_STORYT36, S_419_T_STORYT37, S_420_T_STORYT38, S_421, S_422, S_423, S_424, S_425_RACHLRD,
	S_426, S_427, S_428, S_429, S_430, S_431, S_432_MN, S_433, S_434, S_435, S_436, S_437_MMY, S_438, S_439, S_440, S_441, S_442,
	S_443, S_444, S_445, S_446, S_447, S_448, S_449, S_450, S_451, S_452, S_453, S_454, S_455, S_456, S_457, S_458, S_459, S_460,
	S_461, S_462, S_463, S_464, S_465, S_466, S_467_T_WITCH01, S_468_T_WITCH02, S_469_T_WITCH03, S_470_T_WITCH04, S_471_T_WITCH05,
	S_472_T_WITCH06, S_473_T_WITCH07, S_474_T_WITCH08, S_475_T_WITCH09, S_476_T_WITCH10, S_477_T_WITCH11, S_478_T_WITCH12, S_479_T_WITCH13,
	S_480_T_WITCH14, S_481_T_WITCH15, S_482_T_WITCH16, S_483_T_WITCH17, S_484_T_WITCH18, S_485_T_WITCH19, S_486_T_WITCH20, S_487_T_WITCH21,
	S_488_T_WITCH22, S_489_T_WITCH23, S_490_T_WITCH24, S_491_T_WITCH25, S_492_T_WITCH26, S_493_T_WITCH27, S_494_T_WITCH28, S_495_T_WITCH29,
	S_496_T_WITCH30, S_497_T_WITCH31, S_498_T_WITCH32, S_499_T_WITCH33, S_500_T_WITCH34, S_501_T_WITCH35, S_502_T_WITCH36, S_503_T_WITCH37,
	S_504_T_WITCH38, S_505_T_WITCH39, S_506_T_WITCH40, S_507_T_WITCH41, S_508_T_WITCH42, S_509_T_WITCH43, S_510_T_WITCH44, S_511_T_WITCH45,
	S_512_T_WITCH46, S_513_T_WITCH47, S_514_T_WITCH48, S_515_T_WITCH49, S_516_T_WITCH50, S_517_T_WOUND01, S_518_SOR_01, S_519_SOR_02,
	S_520_SOR_03, S_521_SOR_04, S_522_SOR_05, S_523_SOR_06, S_524_SOR_07, S_525_SOR_47, S_526_SOR_09, S_527_SOR_10, S_528_SOR_11,
	S_529_SOR_12, S_530_SOR_13, S_531_SOR_14, S_532_SOR_15, S_533_SOR_38, S_534_SOR_17, S_535_SOR_18, S_536_SOR_19, S_537_SOR_20,
	S_538_SOR_21, S_539_SOR_22, S_540_SOR_23, S_541_SOR_24, S_542_SOR_25, S_543_SOR_26, S_544_SOR_27, S_545_SOR_28, S_546_SOR_29,
	S_547_SOR_30, S_548_SOR_31, S_549_SOR_32, S_550_SOR_33, S_551_SOR_34, S_552_SOR_35, S_553_SOR_36, S_554_SOR_37, S_555_SOR_38,
	S_556_SOR_39, S_557_SOR_40, S_558_SOR_41, S_559_SOR_42, S_560_SOR_43, S_561_SOR_44, S_562_SOR_45, S_563_SOR_46, S_564_SOR_47,
	S_565_SOR_48, S_566_SOR_49, S_567_SOR_50, S_568_SOR_51, S_569_SOR_52, S_570_SOR_53, S_571_SOR_54, S_572_SOR_55, S_573_SOR_56,
	S_574_SOR_57, S_575_M_LFBAAL, S_576_M_IZUALX, S_577_M_LEO, S_578_SOR_61, S_579_SOR_62, S_580_SOR_63, S_581_M_GYFAX, S_582_M_RFGFST,
	S_583_M_UA, S_584_M_AMDUCI, S_585_SOR_68, S_586_SOR_69, S_587_SOR_69B, S_588_SOR_70, S_589_SOR_71, S_590_SOR_72, S_591_ASS_DLVL1,
	S_592_X_TNTRS, S_593_M_MALANT, S_594_M_XORENE, S_595_M_GSPIKE, S_596_SOR_78, S_597_SOR_46, S_598_SOR_80, S_599_M_50CENT,
	S_600_SOR_82, S_601_SOR_83, S_602_M_DU, S_603_M_DN, S_604_M_BZ, S_605_SOR_87, S_606_SOR_SL, S_607_SOR_89, S_608_M_XC, S_609_SOR_SL,
	S_610_SOR_92, S_611_M_SAR, S_612_SOR_94, S_613_SOR_SL, S_614_SOR_91, S_615_SOR_96, S_616_SOR_SL, S_617_SOR_99, S_618_SOR_100,
	S_619_SOR_101, S_620_SOR_102, S_621_ROG_01, S_622_ROG_02, S_623_ROG_03, S_624_ROG_04, S_625_ROG_05, S_626_ROG_06, S_627_ROG_07,
	S_628_ROG_47, S_629_ROG_09, S_630_ROG_10, S_631_ROG_11, S_632_ROG_12, S_633_ROG_13, S_634_ROG_14, S_635_ROG_15, S_636_ROG_16,
	S_637_ROG_17, S_638_ROG_18, S_639_ROG_19, S_640_ROG_20, S_641_ROG_21, S_642_ROG_22, S_643_ROG_23, S_644_ROG_24, S_645_ROG_25,
	S_646_ROG_26, S_647_ROG_27, S_648_ROG_28, S_649_ROG_29, S_650_ROG_30, S_651_ROG_31, S_652_ROG_32, S_653_ROG_33, S_654_ROG_34,
	S_655_ROG_35, S_656_ROG_36, S_657_ROG_37, S_658_ROG_38, S_659_ROG_39, S_660_ROG_40, S_661_ROG_41, S_662_ROG_42, S_663_ROG_43,
	S_664_ROG_44, S_665_ROG_45, S_666_ROG_46, S_667_ROG_47, S_668_ROG_48, S_669_ROG_49, S_670_ROG_50, S_671_ROG_51, S_672_ROG_52,
	S_673_ROG_53, S_674_ROG_54, S_675_ROG_55, S_676_ROG_56, S_677_ROG_57, S_678_ROG_58, S_679_ROG_59, S_680_ROG_60, S_681_ROG_61,
	S_682_ROG_62, S_683_ROG_63, S_684_ROG_64, S_685_ROG_65, S_686_ROG_66, S_687_ROG_67, S_688_ROG_68, S_689_ROG_69, S_690_ROG_69B,
	S_691_ROG_71B, S_692_ROG_DC, S_693_ROG_72, S_694_ROG_73, S_695_ROG_74, S_696_ROG_75, S_697_ROG_76, S_698_ROG_77, S_699_ROG_78,
	S_700_ROG_46, S_701_ROG_80, S_702_ROG_81, S_703_ROG_82, S_704_ROG_83, S_705_ROG_84, S_706_ROG_85, S_707_ROG_86, S_708_ROG_87,
	S_709_ROG_SL, S_710_ROG_89, S_711_ROG_90, S_712_ROG_SL, S_713_ROG_92, S_714_ROG_93, S_715_ROG_94, S_716_ROG_SL, S_717_ROG_90,
	S_718_ROG_96, S_719_ROG_98, S_720_ROG_99, S_721_ROG_100, S_722_ROG_90, S_723_ROG_102, S_724_WAR_01, S_725_WAR_02, S_726_WAR_03,
	S_727_WAR_04, S_728_WAR_05, S_729_WAR_06, S_730_WAR_07, S_731_WAR_47, S_732_WAR_09, S_733_WAR_10, S_734_WAR_11, S_735_WAR_12,
	S_736_WAR_13, S_737_WAR_14, S_738_WAR_38, S_739_WAR_15B, S_740_WAR_15, S_741_WAR_15B, S_742_WAR_15C, S_743_WAR_16, S_744_WAR_16B,
	S_745_WAR_16C, S_746_WAR_17, S_747_WAR_18, S_748_WAR_19, S_749_WAR_20, S_750_WAR_21, S_751_WAR_22, S_752_WAR_23, S_753_WAR_24,
	S_754_WAR_25, S_755_WAR_26, S_756_WAR_27, S_757_WAR_28, S_758_WAR_29, S_759_WAR_30, S_760_WAR_31, S_761_WAR_32, S_762_WAR_96B,
	S_763_WAR_34, S_764_WAR_35, S_765_WAR_36, S_766_WAR_37, S_767_WAR_38, S_768_WAR_39, S_769_WAR_40, S_770_WAR_41, S_771_WAR_42,
	S_772_WAR_43, S_773_WAR_44, S_774_WAR_45, S_775_WAR_46, S_776_WAR_47, S_777_WAR_48, S_778_WAR_49, S_779_WAR_50, S_780_WAR_51,
	S_781_WAR_52, S_782_WAR_53, S_783_WAR_54, S_784_WAR_55, S_785_WAR_56, S_786_WAR_57, S_787_WAR_58, S_788_WAR_59, S_789_WAR_60,
	S_790_WAR_61, S_791_WAR_62, S_792_WAR_63, S_793_WAR_64, S_794_WAR_65, S_795_WAR_66, S_796_WAR_67, S_797_WAR_68, S_798_WAR_69,
	S_799_WAR_69B, S_800_WAR_FURY, S_801_WAR_71, S_802_WAR_72, S_803_WAR_73, S_804_WAR_74, S_805_WAR_75, S_806_WAR_76, S_807_WAR_77,
	S_808_WAR_78, S_809_WAR_46, S_810_WAR_80, S_811_WAR_81, S_812_WAR_82, S_813_WAR_83, S_814_WAR_84, S_815_WAR_85, S_816_WAR_86,
	S_817_WAR_87, S_818_WAR_SL, S_819_WAR_89, S_820_WAR_90, S_821_WAR_SL, S_822_WAR_92, S_823_WAR_93, S_824_WAR_94, S_825_WAR_SL,
	S_826_WAR_95B, S_827_WAR_95C, S_828_WAR_95D, S_829_WAR_95E, S_830_WAR_95F, S_831_WAR_90, S_832_WAR_96B, S_833_WAR_98, S_834_WAR_99,
	S_835_WAR_100, S_836_WAR_101, S_837_WAR_102, S_838_MONK_01, S_839_, S_840_, S_841_, S_842_, S_843_, S_844_, S_845_MONK_08,
	S_846_M_AY, S_847_MONK_10, S_848_MONK_11, S_849_MONK_12, S_850_MONK_13, S_851_MONK_14, S_852_MONK_15, S_853_MONK_16, S_854_,
	S_855_, S_856_, S_857_, S_858_, S_859_, S_860_, S_861_MONK_24, S_862_, S_863_, S_864_MONK_27, S_865_, S_866_MONK_29, S_867_,
	S_868_, S_869_, S_870_, S_871_MONK_34, S_872_MONK_35, S_873_, S_874_, S_875_, S_876_, S_877_, S_878_, S_879_, S_880_MONK_43,
	S_881_, S_882_, S_883_MONK_46, S_884_, S_885_, S_886_MONK_49, S_887_MONK_50, S_888_, S_889_MONK_52, S_890_, S_891_MONK_54,
	S_892_MONK_55, S_893_MONK_56, S_894_, S_895_, S_896_, S_897_, S_898_MONK_61, S_899_MONK_62, S_900_, S_901_, S_902_, S_903_,
	S_904_, S_905_MONK_68, S_906_MONK_69, S_907_MONK_69B, S_908_MONK_70, S_909_MONK_DC, S_910_, S_911_, S_912_, S_913_, S_914_,
	S_915_, S_916_, S_917_MONK_46, S_918_MONK_80, S_919_, S_920_MONK_82, S_921_MONK_83, S_922_, S_923_, S_924_, S_925_MONK_87,
	S_926_MONK_SL, S_927_MONK_89, S_928_, S_929_MONK_SL, S_930_MONK_92, S_931_, S_932_MONK_94, S_933_MONK_SL, S_934_MONK_91,
	S_935_MONK_96, S_936_MONK_98, S_937_MONK_99, S_938_, S_939_, S_940_, S_941_N_01, S_942_N_02, S_943_N_03, S_944_N_04, S_945_N_05,
	S_946_N_06, S_947_N_07, S_948_N_08, S_949_N_09, S_950_LVL16INT, S_951_M_BUTCHER, S_952_M_GARBUD01, S_953_M_GARBUD02, S_954_M_GARBUD03,
	S_955_M_GARBUD04, S_956_M_DIABLOD, S_957_M_LACH01, S_958_M_LACH02, S_959_M_LACH03, S_960_M_LAZ01, S_961_M_LAZ02, S_962_M_SKING01,
	S_963_M_SNOT01, S_964_M_SNOT02, S_965_M_SNOT03, S_966_M_WARLRD01, S_967_M_WLOCK01, S_968_M_ZHAR01, S_969_M_ZHAR02, S_970_M_DIABLOD,
	S_971_T_DRUNK05, S_972_HF_FARMER2, S_973_HF_FARMER2A, S_974_HF_FARMER3, S_975_HF_FARMER4, S_976_HF_FARMER5, S_977_T_TAVOWN03,
	S_978_T_BMAID05, S_979_SOR_81, S_980_HF_FARMER9, S_981_SOR_84, S_982_HF_NAKRUL1, S_983_HF_NARR9, S_984_HF_NARR8, S_985_HF_DEFILER1, S_986_HF_DEFILER2, S_987_HF_DEFILER3,
	S_988_HF_DEFILER4, S_989_M_VAR, S_990_HF_DFLRGRT, S_991_MONK_SL, S_992_M_IZUAL01, S_993_HF_NAKRUL2, S_994_HF_NAKRUL3, S_995_MONK_SL,
	S_996_MONK_SL, S_997_M_UBERGRT, S_998_HF_NARATR3, S_999_HF_COWSUT1, S_1000_HF_COWSUT2, S_1001_HF_COWSUT3, S_1002_HF_COWSUT4,
	S_1003_HF_COWSUT4A, S_1004_HF_COWSUT5, S_1005_HF_COWSUT6, S_1006_HF_COWSUT7, S_1007_HF_COWSUT8, S_1008_HF_COWSUT9, S_1009_HF_COWSUT10,
	S_1010_HF_COWSUT11, S_1011_HF_COWSUT12, S_1012_HF_SKLJRN1, S_1013_HF_NARATR6, S_1014_HF_NARATR7, S_1015_M_UBER, S_1016_HF_NARATR5,
	S_1017_HF_NARATR4, S_1018_HF_NARATR4, S_1019_HF_TRADER1, S_1020_I_CROPEN, S_1021_I_CRCLOS, S_1022_LEVELUP, S_1023_ROG_101, S_1024, S_1025,
	S_1026, S_1027, S_1028, S_1029, S_1030, S_1031, S_1032, S_1033, S_1034, S_1035, S_1036, S_1037, S_1038, S_1039_M_ND, S_1040, S_1041,
	S_1042, S_1043, S_1044, S_1045, S_1046, S_1047, S_1048, S_1049, S_1050, S_1051, S_1052, S_1053, S_1054, S_1055, S_1056, S_1057,
	S_1058, S_1059, S_1060, S_1061, S_1062, S_1063, S_1064, S_1065, S_1066, S_1067, S_1068, S_1069, S_1070, S_1071, S_1072, S_1073,
	S_1074, S_1075, S_1076, S_1077, S_1078, S_1079, S_1080, S_1081, S_1082, S_1083, S_1084, S_1085, S_1086, S_1087, S_1088, S_1089,
	S_1090, S_1091, S_1092, S_1093, S_1094, S_1095, S_1096, S_1097, S_1098, S_1099, S_1100, S_1101, S_1107_HOLY_ARROW_SOUND, 
	S_1108_ARCANE_ARROW_SHOOT_SOUND, S_1109_ARCANE_ARROW_HIT_SOUND, S_1110_ACID_ARROW_SHOOT_SOUND, S_1111_ACID_ARROW_HIT_SOUND );

enum PLAYER_SPELL: int { // must be int
	PS_M1_NONE						 = -1,
	PS_0_NONE 						 = 0,
	PS_1_FIREBOLT 					 = 1,
	PS_2_HEALING 					 = 2,
	PS_3_LIGHTNING 					 = 3,
	PS_4_FLASH 						 = 4,
	PS_5_IDENTIFY 					 = 5,
	PS_6_FIRE_WALL 					 = 6,
	PS_7_TOWN_PORTAL 				 = 7,
	PS_8_STONE_CURSE 				 = 8,
	PS_9_INFRAVISION 				 = 9,
	PS_10_PHASING 					 = 10,
	PS_11_MANA_SHIELD 				 = 11,
	PS_12_FIREBLAST 				 = 12,
	PS_13_HYDRA 					 = 13,
	PS_14_BALL_LIGHTNING			 = 14,
	PS_15_FORCE_WAVE 				 = 15,
	PS_16_REFLECT 					 = 16,
	PS_17_LIGHTING_RING 			 = 17,
	PS_18_LIGHTNING_NOVA			 = 18,
	PS_19_FLAME_RING 				 = 19,
	PS_20_INFERNO 					 = 20,
	PS_21_GOLEM 					 = 21,
	PS_22_FURY 						 = 22,
	PS_23_TELEPORT 					 = 23,
	PS_24_APOCALYPSE 				 = 24,
	PS_25_ETHEREAL 					 = 25,
	PS_26_ITEM_REPAIR 				 = 26,
	PS_27_STAFF_RECHARGE			 = 27,
	PS_28_TRAP_DISARM 				 = 28,
	PS_29_ELEMENTAL 				 = 29,
	PS_30_CHARGED_BOLT 				 = 30,
	PS_31_HOLY_BOLT 				 = 31,
	PS_32_BONE_SPIRIT_REAL_RESSURECT = 32,
	PS_33_TELEKINES 				 = 33,
	PS_34_HEAL_OTHER 				 = 34,
	PS_35_ARCANE_STAR 				 = 35,
	PS_36_BONE_SPIRIT 				 = 36,
	PS_37_MANA_RECHARGE 			 = 37,
	PS_38_MAGI 						 = 38,
	PS_39_HOLY_NOVA 				 = 39,
	PS_40_LIGHTING_WALL 			 = 40,
	PS_41_FIERY_NOVA 				 = 41,
	PS_42_WARP 						 = 42,
	PS_43_ARCANE_NOVA 				 = 43,
	PS_44_BERSERK 					 = 44,
	PS_45_RING_OF_FIRE 				 = 45,
	PS_46_RELIC_OF_CONCENTR			 = 46,
	PS_47_NO_SPELL 					 = 47,
	PS_48_RUNE_OF_LIGHT 			 = 48,
	PS_49_RUNE_OF_NOVA 				 = 49,
	PS_50_RUNE_OF_IMMOLATION		 = 50,
	PS_51_EMPTY 					 = 51,
	PS_52_count
};
reflect_enum( PLAYER_SPELL, PS_M1_NONE, PS_0_NONE, PS_1_FIREBOLT, PS_2_HEALING, PS_3_LIGHTNING, PS_4_FLASH, PS_5_IDENTIFY, PS_6_FIRE_WALL, PS_7_TOWN_PORTAL,
	PS_8_STONE_CURSE, PS_9_INFRAVISION, PS_10_PHASING, PS_11_MANA_SHIELD, PS_12_FIREBLAST, PS_13_HYDRA, PS_14_BALL_LIGHTNING,
	PS_15_FORCE_WAVE, PS_16_REFLECT, PS_17_LIGHTING_RING, PS_18_LIGHTNING_NOVA, PS_19_FLAME_RING, PS_20_INFERNO, PS_21_GOLEM,
	PS_22_FURY, PS_23_TELEPORT, PS_24_APOCALYPSE, PS_25_ETHEREAL, PS_26_ITEM_REPAIR, PS_27_STAFF_RECHARGE, PS_28_TRAP_DISARM,
	PS_29_ELEMENTAL, PS_30_CHARGED_BOLT, PS_31_HOLY_BOLT, PS_32_BONE_SPIRIT_REAL_RESSURECT, PS_33_TELEKINES, PS_34_HEAL_OTHER,
	PS_35_ARCANE_STAR, PS_36_BONE_SPIRIT, PS_37_MANA_RECHARGE, PS_38_MAGI, PS_39_HOLY_NOVA, PS_40_LIGHTING_WALL, PS_41_FIERY_NOVA,
	PS_42_WARP, PS_43_ARCANE_NOVA, PS_44_BERSERK, PS_45_RING_OF_FIRE, PS_46_RELIC_OF_CONCENTR, PS_47_NO_SPELL, PS_48_RUNE_OF_LIGHT,
	PS_49_RUNE_OF_NOVA, PS_50_RUNE_OF_IMMOLATION, PS_51_EMPTY );

// CAST_NONE  = 0 // Это значение в массиве эффектов заклинаний игрока означает отсутсвие эффекта 
// CAST_ARROW = 0 // А в остальных местах это обычная стрела 
enum MISSILE: uchar {
	MI_0_NONE_ARROW 				 = 0,
	MI_1_FIREBOLT 					 = 1,
	MI_2_HYDRA 						 = 2,
	MI_3_PHASING 					 = 3,
	MI_4_LIGHTNING_NOVA_SEGMENT		 = 4,
	MI_5_FIRE_WALL_SEGMENT 			 = 5,
	MI_6_FIREBLAST 					 = 6,
	MI_7_LIGHTNING 					 = 7,
	MI_8_LIGHTING_SEGMENT			 = 8,
	MI_9_MAGMA_BALL_EX 				 = 9,
	MI_10_TOWN_PORTAL 				 = 10,
	MI_11_FLASH_FR 					 = 11,
	MI_12_FLASH_BACK 				 = 12,
	MI_13_MANA_SHIELD 				 = 13,
	MI_14_HELLFIRE_SEGMENT 			 = 14,
	MI_15_ARCANE_NOVA 				 = 15,
	MI_16_NULL_SPELL_1 				 = 16,
	MI_17_BLOOD 					 = 17,
	MI_18_BONE 						 = 18,
	MI_19_METLHIT 					 = 19,
	MI_20_RUN_ATTACK 				 = 20,
	MI_21_MAGMA_BALL 				 = 21,
	MI_22_MONSTER_LIGHTNING 		 = 22,
	MI_23_MONSTER_LIGHTING_SEGMENT	 = 23,
	MI_24_ARCANE_STAR 				 = 24,
	MI_25_ARCANE_STAR_EX 			 = 25,
	MI_26_TELEPORT 					 = 26,
	MI_27_FIRE_ARROW 				 = 27,
	MI_28_BALL_LIGHTNING 			 = 28,
	MI_29_FIRE_TRAP 				 = 29,
	MI_30_STONE_CURSE 				 = 30,
	MI_31_NULL_SPELL_3 				 = 31,
	MI_32_HOLY_NOVA 				 = 32,
	MI_33_GOLEM 					 = 33,
	MI_34_ETHEREAL 					 = 34,
	MI_35_FURY_SPLASH 				 = 35,
	MI_36_APOC_EXPLODE 				 = 36,
	MI_37_HEALING 					 = 37,
	MI_38_FIRE_WALL 				 = 38,
	MI_39_INFRAVISION 				 = 39,
	MI_40_IDENTIFY 					 = 40,
	MI_41_HELLFIRE 					 = 41,
	MI_42_LIGHTNING_NOVA 			 = 42,
	MI_43_FURY 						 = 43,
	MI_44_APOCALYPSE 				 = 44,
	MI_45_ITEM_REPAIR 				 = 45,
	MI_46_STAFF_RECHARGE 			 = 46,
	MI_47_TRAP_DISARM 				 = 47,
	MI_48_INFERNO_SEGMENT 			 = 48,
	MI_49_INFERNO 					 = 49,
	MI_50_RUN_ATTACK_2 				 = 50,
	MI_51_KRULL 					 = 51,
	MI_52_CHARGED_BOLT 				 = 52,
	MI_53_HOLY_BOLT 				 = 53,
	MI_54_RISING 					 = 54,
	MI_55_TELEKINES 				 = 55,
	MI_56_LIGHTING_ARROW 			 = 56,
	MI_57_ACID_MISSILE 				 = 57,
	MI_58_ACID_SPLASH 				 = 58,
	MI_59_ACID_POOLS 				 = 59,
	MI_60_HEAL_OTHER 				 = 60,
	MI_61_ELEMENTAL 				 = 61,
	MI_62_RISING_2 					 = 62,
	MI_63_BONE_SPIRIT 				 = 63,
	MI_64_WEAPON_ELEMENTAL_DAMAGE	 = 64,
	MI_65_RED_PORTAL 				 = 65,
	MI_66_MONSTER_APOC_EXPLODE 		 = 66,
	MI_67_MONSTER_APOC 				 = 67,
	MI_68_MANA_RECHARGE 			 = 68,
	MI_69_MAGI 						 = 69,
	MI_70_LIGHTNING_WALL_SEGMENT	 = 70,
	MI_71_LIGHTING_WALL 			 = 71,
	MI_72_FIRE_NOVA 				 = 72,
	MI_73_SPECIAL_ARROW 			 = 73,
	MI_74_FIREBOLT_ARROW 			 = 74,
	MI_75_LIGHTNING_ARROW 			 = 75,
	MI_76_CHARGED_BOLT_ARROW 		 = 76,
	MI_77_HOLY_BOLT_ARROW 			 = 77,
	MI_78_WARP 						 = 78,
	MI_79_REFLECT 					 = 79,
	MI_80_BERSERK 					 = 80,
	MI_81_FLAME_RING 				 = 81,
	MI_82_STEAL_BOTTLES_FORM_BELT	 = 82,
	MI_83_MANA_TRAP 				 = 83,
	MI_84_LIGHTING_RING 			 = 84,
	MI_85_SEARCH 					 = 85,
	MI_86_SOME_ANOTHER_FLASH_FR 	 = 86,
	MI_87_SOME_ANOTHER_FLASH_BK 	 = 87,
	MI_88_FIREBALL 					 = 88,
	MI_89_RUNE_OF_FIRE 				 = 89,
	MI_90_RUNE_OF_LIGHTNING 		 = 90,
	MI_91_RUNE_OF_GREAT_LIGHTNING	 = 91,
	MI_92_RUNE_OF_IMMOLATION 		 = 92,
	MI_93_RUNE_OF_STONE 			 = 93,
	MI_94_BIG_FIRE_EX 				 = 94,
	MI_95_SPAWN_MEAT_BALL 			 = 95,
	MI_96_JESTER 					 = 96,
	MI_97_ENTER_TO_ABYSS_EXPLODE	 = 97,
	MI_98_LICH_ORA_BLAST 			 = 98,
	MI_99_BLUE_BLAST 				 = 99,
	MI_100_RED_BLAST 				 = 100,
	MI_101_YELOW_BLAST 				 = 101,
	MI_102_BLUE_BLAST_2 			 = 102,
	MI_103_YEL_EX 					 = 103,
	MI_104_RED_EX 					 = 104,
	MI_105_BLU_EX 					 = 105,
	MI_106_BLU_EX 					 = 106,
	MI_107_LICH_ORA_EX 				 = 107,
	MI_108_ARCANE_ARROW              = 108,
	MI_109_ACID_ARROW              = 109,
};
reflect_enum( MISSILE, MI_0_NONE_ARROW, MI_1_FIREBOLT, MI_2_HYDRA, MI_3_PHASING, MI_4_LIGHTNING_NOVA_SEGMENT, MI_5_FIRE_WALL_SEGMENT,
	MI_6_FIREBLAST, MI_7_LIGHTNING, MI_8_LIGHTING_SEGMENT, MI_9_MAGMA_BALL_EX, MI_10_TOWN_PORTAL, MI_11_FLASH_FR, MI_12_FLASH_BACK,
	MI_13_MANA_SHIELD, MI_14_HELLFIRE_SEGMENT, MI_15_ARCANE_NOVA, MI_16_NULL_SPELL_1, MI_17_BLOOD, MI_18_BONE, MI_19_METLHIT,
	MI_20_RUN_ATTACK, MI_21_MAGMA_BALL, MI_22_MONSTER_LIGHTNING, MI_23_MONSTER_LIGHTING_SEGMENT, MI_24_ARCANE_STAR, MI_25_ARCANE_STAR_EX,
	MI_26_TELEPORT, MI_27_FIRE_ARROW, MI_28_BALL_LIGHTNING, MI_29_FIRE_TRAP, MI_30_STONE_CURSE, MI_31_NULL_SPELL_3, MI_32_HOLY_NOVA, MI_33_GOLEM,
	MI_34_ETHEREAL, MI_35_FURY_SPLASH, MI_36_APOC_EXPLODE, MI_37_HEALING, MI_38_FIRE_WALL, MI_39_INFRAVISION, MI_40_IDENTIFY,
	MI_41_HELLFIRE, MI_42_LIGHTNING_NOVA, MI_43_FURY, MI_44_APOCALYPSE, MI_45_ITEM_REPAIR, MI_46_STAFF_RECHARGE, MI_47_TRAP_DISARM,
	MI_48_INFERNO_SEGMENT, MI_49_INFERNO, MI_50_RUN_ATTACK_2, MI_51_KRULL, MI_52_CHARGED_BOLT, MI_53_HOLY_BOLT, MI_54_RISING,
	MI_55_TELEKINES, MI_56_LIGHTING_ARROW, MI_57_ACID_MISSILE, MI_58_ACID_SPLASH, MI_59_ACID_POOLS, MI_60_HEAL_OTHER, MI_61_ELEMENTAL,
	MI_62_RISING_2, MI_63_BONE_SPIRIT, MI_64_WEAPON_ELEMENTAL_DAMAGE, MI_65_RED_PORTAL, MI_66_MONSTER_APOC_EXPLODE, MI_67_MONSTER_APOC,
	MI_68_MANA_RECHARGE, MI_69_MAGI, MI_70_LIGHTNING_WALL_SEGMENT, MI_71_LIGHTING_WALL, MI_72_FIRE_NOVA, MI_73_SPECIAL_ARROW,
	MI_74_FIREBOLT_ARROW, MI_75_LIGHTNING_ARROW, MI_76_CHARGED_BOLT_ARROW, MI_77_HOLY_BOLT_ARROW, MI_78_WARP, MI_79_REFLECT,
	MI_80_BERSERK, MI_81_FLAME_RING, MI_82_STEAL_BOTTLES_FORM_BELT, MI_83_MANA_TRAP, MI_84_LIGHTING_RING, MI_85_SEARCH, MI_86_SOME_ANOTHER_FLASH_FR,
	MI_87_SOME_ANOTHER_FLASH_BK, MI_88_FIREBALL, MI_89_RUNE_OF_FIRE, MI_90_RUNE_OF_LIGHTNING, MI_91_RUNE_OF_GREAT_LIGHTNING,
	MI_92_RUNE_OF_IMMOLATION, MI_93_RUNE_OF_STONE, MI_94_BIG_FIRE_EX, MI_95_SPAWN_MEAT_BALL, MI_96_JESTER, MI_97_ENTER_TO_ABYSS_EXPLODE,
	MI_98_LICH_ORA_BLAST, MI_99_BLUE_BLAST, MI_100_RED_BLAST, MI_101_YELOW_BLAST, MI_102_BLUE_BLAST_2, MI_103_YEL_EX, MI_104_RED_EX,
	MI_105_BLU_EX, MI_106_BLU_EX, MI_107_LICH_ORA_EX, MI_108_ARCANE_ARROW, MI_109_ACID_ARROW);

enum ELEMENTAL_TYPE : uchar {
	ET_0_PHYSICAL	= 0,
	ET_1_FIRE		= 1,
	ET_2_LIGHTNING	= 2,
	ET_3_ARCAN		= 3,
	ET_4_ACID		= 4,
	ET_5_HOLY		= 5, // th2
	ET_6_COLD		= 6, // новые
	ET_7_CURSE		= 7, // уже восемь типов магии (byte mask full)
	ET_COUNT
};
reflect_enum( ELEMENTAL_TYPE, ET_0_PHYSICAL, ET_1_FIRE, ET_2_LIGHTNING, ET_3_ARCAN, ET_4_ACID, ET_5_HOLY, ET_6_COLD, ET_7_CURSE);

enum MISSILE_TYPE : uchar {
	MT_0_ARROW		 = 0,
	MT_1_MAGIC		 = 1,
	MT_2_MAGIC_EXPLODE = 2,
};
reflect_enum( MISSILE_TYPE, MT_0_ARROW, MT_1_MAGIC, MT_2_MAGIC_EXPLODE );

enum MISSILE_SPRITE : uchar {
	MIS_M1_NONE = 0xFF,
	MIS_0_ARROWS = 0,
	MIS_1_FIREBA = 1,
	MIS_2_GUARD = 2,
	MIS_3_LGHNING = 3,
	MIS_4_FIREWAL = 4,
	MIS_5_MAGBLOS = 5,
	MIS_6_PORTAL = 6,
	MIS_7_BLUEXFR = 7,
	MIS_8_BLUEXBK = 8,
	MIS_9_MANASHLD = 9,
	MIS_10_BLOOD = 10,
	MIS_11_BONE = 11,
	MIS_12_METLHIT = 12,
	MIS_13_FARROW = 13,
	MIS_14_DOOM = 14,
	MIS_15 = 15,
	MIS_16_BLODBUR = 16,
	MIS_17_NEWEXP = 17,
	MIS_18_SHATTER1 = 18,
	MIS_19_BIGEXP = 19,
	MIS_20_INFERNO = 20,
	MIS_21_THINLGHT = 21,
	MIS_22_FLARE = 22,
	MIS_23_FLAREEXP = 23,
	MIS_24_MAGBALL = 24,
	MIS_25_KRULL = 25,
	MIS_26_MINILTNG = 26,
	MIS_27_HOLY = 27,
	MIS_28_HOLYEXPL = 28,
	MIS_29_LARROW = 29,
	MIS_30_FIRARWEX = 30,
	MIS_31_ACIDBF = 31,
	MIS_32_ACIDSPLA = 32,
	MIS_33_ACIDPUD = 33,
	MIS_34_ETHRSHLD = 34,
	MIS_35_FIRERUN = 35,
	MIS_36_RESSUR1 = 36,
	MIS_37_SKLBALL = 37,
	MIS_38_RPORTAL = 38,
	MIS_39_FIREPLAR = 39,
	MIS_40_SCUBMISB = 40,
	MIS_41_SCBSEXPB = 41,
	MIS_42_SCUBMISC = 42,
	MIS_43_SCBSEXPC = 43,
	MIS_44_SCUBMISD = 44,
	MIS_45_SCBSEXPD = 45,
	MIS_46_SPAWNS = 46,
	MIS_47_REFLECT = 47,
	MIS_48_MS_ORA = 48,
	MIS_49_MS_BLA = 49,
	MIS_50_MS_REB = 50,
	MIS_51_MS_YEB = 51,
	MIS_52_RGLOWS1 = 52,
	MIS_53_EX_YEL2 = 53,
	MIS_54_EX_BLU2 = 54,
	MIS_55_EX_RED3 = 55,
	MIS_56_MS_BLB = 56,
	MIS_57_EX_ORA1 = 57,
	MIS_58_EX_BLU3 = 58,
	MIS_59_HARROW = 59, // qndel - holy bolt arrow
	MIS_60_HARROW_EXPLO = 60, // explosion for it
	MIS_61_ARCARROW = 61,  //arcane arrow
	MIS_62_ARCARROW_EXPLO = 62,  //explosion for it
	MIS_63_ACIDARROW = 63,
	MIS_64_ACIDARROWEXPLO = 64,
};
reflect_enum( MISSILE_SPRITE, MIS_M1_NONE, MIS_0_ARROWS, MIS_1_FIREBA, MIS_2_GUARD, MIS_3_LGHNING, MIS_4_FIREWAL, MIS_5_MAGBLOS,
	MIS_6_PORTAL, MIS_7_BLUEXFR, MIS_8_BLUEXBK, MIS_9_MANASHLD, MIS_10_BLOOD, MIS_11_BONE, MIS_12_METLHIT, MIS_13_FARROW, MIS_14_DOOM,
	MIS_15, MIS_16_BLODBUR, MIS_17_NEWEXP, MIS_18_SHATTER1, MIS_19_BIGEXP, MIS_20_INFERNO, MIS_21_THINLGHT, MIS_22_FLARE, MIS_23_FLAREEXP,
	MIS_24_MAGBALL, MIS_25_KRULL, MIS_26_MINILTNG, MIS_27_HOLY, MIS_28_HOLYEXPL, MIS_29_LARROW, MIS_30_FIRARWEX, MIS_31_ACIDBF,
	MIS_32_ACIDSPLA, MIS_33_ACIDPUD, MIS_34_ETHRSHLD, MIS_35_FIRERUN, MIS_36_RESSUR1, MIS_37_SKLBALL, MIS_38_RPORTAL, MIS_39_FIREPLAR,
	MIS_40_SCUBMISB, MIS_41_SCBSEXPB, MIS_42_SCUBMISC, MIS_43_SCBSEXPC, MIS_44_SCUBMISD, MIS_45_SCBSEXPD, MIS_46_SPAWNS, MIS_47_REFLECT,
	MIS_48_MS_ORA, MIS_49_MS_BLA, MIS_50_MS_REB, MIS_51_MS_YEB, MIS_52_RGLOWS1, MIS_53_EX_YEL2, MIS_54_EX_BLU2, MIS_55_EX_RED3,
	MIS_56_MS_BLB, MIS_57_EX_ORA1, MIS_58_EX_BLU3,MIS_59_HARROW, MIS_60_HARROW_EXPLO, MIS_61_ARCARROW, MIS_62_ARCARROW_EXPLO, MIS_63_ACIDARROW, MIS_64_ACIDARROWEXPLO);

enum FLIP: uchar {
	FL_0_ARMOR2    = 0,
	FL_1_AXE       = 1,
	FL_2_FBTTLE    = 2,
	FL_3_BOW       = 3,
	FL_4_GOLDFLIP  = 4,
	FL_5_HELMUT    = 5,
	FL_6_MACE      = 6,
	FL_7_SHIELD    = 7,
	FL_8_SWORD     = 8,
	FL_9_ROCK      = 9,
	FL_10_CLEAVER  = 10,
	FL_11_STAFF    = 11,
	FL_12_RING     = 12,
	FL_13_CROWNF   = 13,
	FL_14_LARMOR   = 14,
	FL_15_WSHIELD  = 15,
	FL_16_SCROLL   = 16,
	FL_17_FPLATEAR = 17,
	FL_18_FBOOK    = 18,
	FL_19_FOOD     = 19,
	FL_20_FBTTLEBB = 20,
	FL_21_FBTTLEDY = 21,
	FL_22_FBTTLEOR = 22,
	FL_23_FBTTLEBR = 23,
	FL_24_FBTTLEBL = 24,
	FL_25_FBTTLEBY = 25,
	FL_26_FBTTLEWH = 26,
	FL_27_FBTTLEDB = 27,
	FL_28_INNSIGN  = 28,
	FL_29_FBRAIN   = 29,
	FL_30_LOB      = 30,
	FL_31_CP       = 31,
	FL_32_BLDSTN   = 32,
	FL_33_FANVIL   = 33,
	FL_34_FLAZSTAF = 34,
	FL_35_BOMBS1   = 35,
	FL_36_WAND     = 36,
	FL_37_WHOLEPS1 = 37,
	FL_38_RUNES1   = 38,
	FL_39_TEDDYS1  = 39,
	FL_40_COWZ1    = 40,
	FL_41_LAZSTAF  = 41,
	FL_42_CLOTH    = 42,
	FL_43_MUSHROOM = 43,
	#ifndef TH1
	FL_44_BELT     = 44,
	FL_45_GLOVES   = 45,
	FL_45_CGLOVES  = 46,
	FL_47_MGLOVES  = 47,
	FL_48_BOOTS    = 48,
	FL_49_CBOOTS   = 49,
	FL_50_MBOOTS   = 50,
	FL_51_MAUL     = 51,
	#endif
	FL_52_COUNT
};
reflect_enum( FLIP, FL_0_ARMOR2, FL_1_AXE, FL_2_FBTTLE, FL_3_BOW, FL_4_GOLDFLIP, FL_5_HELMUT, FL_6_MACE, FL_7_SHIELD, FL_8_SWORD,
	FL_9_ROCK, FL_10_CLEAVER, FL_11_STAFF, FL_12_RING, FL_13_CROWNF, FL_14_LARMOR, FL_15_WSHIELD, FL_16_SCROLL, FL_17_FPLATEAR,
	FL_18_FBOOK, FL_19_FOOD, FL_20_FBTTLEBB, FL_21_FBTTLEDY, FL_22_FBTTLEOR, FL_23_FBTTLEBR, FL_24_FBTTLEBL, FL_25_FBTTLEBY,
	FL_26_FBTTLEWH, FL_27_FBTTLEDB, FL_28_INNSIGN, FL_29_FBRAIN, FL_30_LOB, FL_31_CP, FL_32_BLDSTN, FL_33_FANVIL, FL_34_FLAZSTAF,
	FL_35_BOMBS1, FL_36_WAND, FL_37_WHOLEPS1, FL_38_RUNES1, FL_39_TEDDYS1, FL_40_COWZ1, FL_41_LAZSTAF, FL_42_CLOTH );
 
enum BASE_MONSTER : int {
	BM_0_BURNED_CORPSE = 0,
	BM_1_OBLIVION_KNIGHT = 1,
	BM_2_ROTTING_CARCASS = 2,
	BM_3_FAMILIAR = 3,
	BM_4_GREMLIN = 4,
	BM_5_FALLEN_ONE = 5,
	BM_6_GRAVE_DIGGER = 6,
	BM_7_SKELETON = 7,
	BM_8_BONE_CREEPER = 8,
	BM_9_REVIVED = 9,
	BM_10_BURNING_DEAD = 10,
	BM_11_HATRED = 11,
	BM_12_IMP = 12,
	BM_13_DARK_ONE = 13,
	BM_14_SOUL_HUNTER = 14,
	BM_15_TOMB_SLAVE = 15,
	BM_16_HORNED_BEAST = 16,
	BM_17_SCAVENGER = 17,
	BM_18_VORTEX_ROGUE = 18,
	BM_19_RAVAGER = 19,
	BM_20_SKELETON = 20,
	BM_21_REVIVED = 21,
	BM_22_BURNING_DEAD = 22,
	BM_23_MALICE = 23,
	BM_24_SKELETON = 24,
	BM_25_REVIVED = 25,
	BM_26_BURNING_DEAD = 26,
	BM_27_HORROR = 27,
	BM_28_BLOOD_LEGION = 28,
	BM_29_HIDDEN = 29,
	BM_30_SHADOW = 30,
	BM_31_UNSEEN = 31,
	BM_32_NIGHTMARE = 32,
	BM_33_MOON_CLAN = 33,
	BM_34_FLESH_CLAN = 34,
	BM_35_FIRE_CLAN = 35,
	BM_36_DARKNESS_CLAN = 36,
	BM_37_STONE_CLAN = 37,
	BM_38_WEREWOLF = 38,
	BM_39_WARPING_DEMON = 39,
	BM_40_QUASIT = 40,
	BM_41_DARK_SERAPH = 41,
	BM_42_NIGHT_CLAN = 42,
	BM_43_BLOOD_CLAN = 43,
	BM_44_DOOM_CLAN = 44,
	BM_45_VENOM_CLAN = 45,
	BM_46_PIT_SPIDER = 46,
	BM_47_ACID_HOUND = 47,
	BM_48_POISON_BAT = 48,
	BM_49_BILE_SPITTER = 49,
	BM_50_SKELETON_LORD = 50,
	BM_51_THE_BUTCHER = 51,
	BM_52_BILE_DEMON = 52,
	BM_53_HELL_HOUND = 53,
	BM_54_BEHOLDER = 54,
	BM_55_GRIM_DEMON = 55,
	BM_56_PIT_DEMON = 56,
	BM_57_HELL_CLAN = 57,
	BM_58_ABYSS_GUARDIAN = 58,
	BM_59_PIT_FIEND = 59,
	BM_60_HELL_STONE = 60,
	BM_61_BLOOD_STONE = 61,
	BM_62_MAULER = 62,
	BM_63_LAVA_LORD = 63,
	BM_64_DEATH_GUARDIAN = 64,
	BM_65_HELL_SPAWN = 65,
	BM_66_HORNED_DEATH = 66,
	BM_67_BLACK_HORN = 67,
	BM_68_GORE_VIPER = 68,
	BM_69_WINGED_DEMON = 69,
	BM_70_STORMWING = 70,
	BM_71_THUNDER_LORD = 71,
	BM_72_FIREWING = 72,
	BM_73_DEATH_ANGEL = 73,
	BM_74_GREATER_HULK = 74,
	BM_75_BLOOD_HULK = 75,
	BM_76_DEATH_CLAW = 76,
	BM_77_STORM_DEMON = 77,
	BM_78_EVISCERATOR = 78,
	BM_79_FEAR_HUNTER = 79,
	BM_80_DEVIL_KIN = 80,
	BM_81_FLYING_DEMON = 81,
	BM_82_GARGOYLE = 82,
	BM_83_LASH_WORM = 83,
	BM_84_DEATH_WING = 84,
	BM_85_BALOR = 85,
	BM_86_SLAYER = 86,
	BM_87_DARK_REAPER = 87,
	BM_88_BALROG = 88,
	BM_89_AZURE_DRAKE = 89,
	BM_90_CAVE_SNAKE = 90,
	BM_91_GOLD_SERPENT = 91,
	BM_92_ILLUSION_WEAVER = 92,
	BM_93_FLAYED_ONE = 93,
	BM_94_LURKER = 94,
	BM_95_GHOST_WARRIOR = 95,
	BM_96_CURSE_BEARER = 96,
	BM_97_DARK_CHARGER = 97,
	BM_98_IMMORTAL = 98,
	BM_99_OVERLORD = 99,
	BM_100_TORMENTOR = 100,
	BM_101_DARK_MISTRESS = 101,
	BM_102_SUCCUBUS = 102,
	BM_103_BLOOD_WITCH = 103,
	BM_104_DARK_WITCH = 104,
	BM_105_IMP_ROGUE = 105,
	BM_106_CORRUPT_ORDER = 106,
	BM_107_DARK_MAGE = 107,
	BM_108_MAGISTRATE = 108,
	BM_109_GOLEM = 109,
	BM_110_GREATER_DEMON = 110,
	BM_111_OBSIDIAN_GOLEM = 111,
	BM_112_UMBER_HULK = 112,
	BM_113_ASH_GOLEM = 113,
	BM_114_FROZEN_HORROR = 114,
	BM_115_GRUNT_BEAST = 115,
	BM_116_IMP_BRUTE = 116,
	BM_117_STINGER = 117,
	BM_118_DRAGON_KIN = 118,
	BM_119_DARK_GHOST = 119,
	BM_120_NECROMORPH = 120,
	BM_121_SPECTRE = 121,
	BM_122_BLOOD_SPECTRE = 122,
	BM_123_BICLOPS = 123,
	BM_124_GLOOM_CLAN = 124,
	BM_125_GOLD_GOLEM = 125,
	BM_126_PLAGUE_EATER = 126,
	BM_127_WYRM = 127,
	BM_128_GREATER_IMP = 128,
	BM_129_LICH = 129,
	BM_130_BLACK_GOLEM = 130,
	BM_131_FIRE_BAT = 131,
	BM_132_BONEWING = 132,
	BM_133_SOUL_BURNER = 133,
	BM_134_MUD_RUNNER = 134,
	BM_135_GROTESQUE = 135,
	BM_136_BLOOD_SLAYER = 136,
	BM_137_UBER_DIABLO = 137,
	BM_138_SHADOW_BEAST = 138,
	BM_139_BONE_GASHER = 139,
	BM_140_GHOUL = 140,
	BM_141_SHAMBLER = 141,
	BM_142_HELL_MEAT = 142,
	BM_143_DOOM_TAIL = 143,
	BM_144_DARK_SERVANT = 144,
	BM_145_BLACK_MOURNER = 145,
	BM_146_CORRUPT_ORDER = 146,
	BM_147_FIEND = 147,
	BM_148_TURBAK_THE_DEUCE = 148,
	BM_149_THRESHER = 149,
	BM_150_FELLTWIN = 150,
	BM_151_HYBRID = 151,
	BM_152_BLACK_REAPER = 152,
	BM_153_DEATH_MINION = 153,
	BM_154_DEATH_MINION = 154,
	BM_155_FALLEN_ONE = 155,
	BM_156_IMP_ROGUE = 156,
	BM_157_YELLOW_ONE = 157,
	BM_158_DEATH_RETINUE = 158,
	BM_159_GUARDIAN = 159,
	BM_160_CHASM_DEMON = 160,
	BM_161_CHASM_DRAKE = 161,
	BM_162_CORRUPT_PALADIN = 162,
	BM_163_STINGER_LORD = 163,
	BM_164_LIGHTNING_DEMON = 164,
	BM_165_APOCALYPSE_CLAN = 165,
	BM_166_GOATLORD_BOSS = 166,
	BM_167_SKULLWING = 167,
	BM_168_HELL_BAT = 168,
	BM_169_ZOMBIE = 169,
	BM_170_LICH = 170,
	BM_171_MUD_LORD = 171,
	BM_172_SPITTING_TERROR = 172,
	BM_173_GHARBAD_BASEMNSTR = 173,
	BM_174_ZHAR_BASEMNSTR = 174,
	BM_175_TERROR_CLAN = 175,
	BM_176_DEVASTATOR = 176,
	BM_177_PHASE_DEMON = 177,
	BM_178_OVERLORD = 178,
	BM_179_FILTH_DEMON = 179,
	BM_180_CRYPT_STONE = 180,
	BM_181_ADVOCATE = 181,
	BM_182_BLINK_DEMON = 182,
	BM_183_STALKER = 183,
	BM_184_REALITY_WEAVER = 184,
	BM_185_BLOOD_HORN = 185,
	BM_186_DEATH_CLAN = 186,
	BM_187_BLOOD_CLAN = 187,
	BM_188_HELL_CLAN = 188,
	BM_189_CARVER = 189,
	BM_190_WINGED_DEMON = 190,
	BM_191_DARK_MISTRESS = 191,
	BM_192_UNRAVELLER = 192,
	BM_193_DLVL12_UBERBOSS = 193,
	BM_194_BLOODIED_HIDDEN = 194,
	BM_195_UBER_BUTCHER = 195,
	BM_196_EVIL_ONE = 196,
	BM_197_CEROMORTH = 197,
	BM_198_HORN_CLAN = 198,
	BM_199_HELL_CLAN = 199,
	BM_200_CABALIST = 200,
	BM_201_ADEPT = 201,
	BM_202_SUCCUBUS = 202,
	BM_203_DEATH_KNIGHT = 203,
	BM_204_SHADOW_CLAN = 204,
	BM_205_PINKY = 205,
	BM_206_ACID_SPITTER = 206,
	BM_207_DREGBEZ = 207,
	BM_208_WARPED_ONE = 208,
	BM_209_HATRED_CLAN = 209,
	BM_210_HELLWING = 210,
	BM_211_TORCHANT = 211,
	BM_212_CACODEMON = 212,
	BM_213_POISONED_ONE = 213,
	BM_214_SATYR_LORD = 214,
	BM_215_CADAVER = 215,
	BM_216_ZEALOT = 216,
	BM_217_GRIMSPIKE = 217,
	BM_218_ICE_GOLEM = 218,
	BM_219_FROST_BONE = 219,
	BM_220_SNOW_LICH = 220,
	BM_221_RAT_MAN = 221,
	BASE_222_MONSTERS = 222,
};

enum DAMAGED_ITEMS_PICS : int {
	DIP_0_UNKNOWN = 0,
	DIP_1_SHEELD = 1,
	DIP_2_SWORD = 2,
	DIP_3_BODY_ARMOR = 3,
	DIP_4_HELM = 4,
	DIP_5_MACE = 5,
	DIP_6_AXE = 6,
	DIP_7_BOW = 7,
	DIP_8_STAFF = 8,
	DIP_9 = 9,
	DIP_10 = 10,
	DIP_11 = 11,
	DIP_12 = 12,
	DIP_13 = 13,
	DIP_14 = 14,
	DIP_15 = 15,
	DIP_16 = 16,
	DIP_8_NUMBER_OF_DIFFERENT_PICS = 8,
};

enum MONSTER_STATE : uchar {
	MS_0_DEATH = 0,
	MS_1_ATTACK = 1,
	MS_2_RETREAT = 2,
	MS_3_UNEARTH_CORPSES = 3,
	MS_4 = 4,
	MS_5 = 5,
	MS_6_WAIT_TALK = 6,
	MS_7_WAIT_TALK2 = 7,
};
reflect_enum( MONSTER_STATE, MS_0_DEATH, MS_1_ATTACK, MS_2_RETREAT, MS_3_UNEARTH_CORPSES, MS_4, MS_5, MS_6_WAIT_TALK, MS_7_WAIT_TALK2 );

enum VIRTUAL_KEYS
{
	VK_8_BACKSPACE_KEY    = 8,
	VK_9_TAB_KEY          = 9,
	VK_13_RETURN_KEY      = 13,
	VK_16_SHIFT			  = 16,
	VK_17_CTRL_KEY        = 17,
	VK_27_ESC_KEY         = 27,
	VK_19_PAUSE_KEY       = 19,
	VK_32_SPACE_KEY       = 32,
	VK_33_PAGE_UP         = 33,
	VK_34_PAGE_DOWN       = 34,
	VK_35_HOME_KEY        = 35,
	VK_36_END_KEY		  = 36,
	VK_37_LEFT_ARROW_KEY  = 37,
	VK_38_UP_ARROW_KEY    = 38,
	VK_39_RIGHT_ARROW_KEY = 39,
	VK_40_DOWN_ARROW_KEY  = 40,
	VK_48_0_KEY           = 48,
	VK_49_1_KEY           = 49,
	VK_50_2_KEY           = 50,
	VK_51_3_KEY           = 51,
	VK_52_4_KEY           = 52,
	VK_53_5_KEY           = 53,
	VK_54_6_KEY           = 54,
	VK_55_7_KEY           = 55,
	VK_56_8_KEY           = 56,
	VK_57_9_KEY           = 57,
	VK_65_A_KEY           = 65,
	VK_66_B_KEY           = 66,
	VK_67_C_KEY           = 67,
	VK_68_D_KEY           = 68,
	VK_69_E_KEY           = 69,
	VK_70_F_KEY           = 70,
	VK_71_G_KEY           = 71,
	VK_72_H_KEY           = 72,
	VK_73_I_KEY           = 73,
	VK_74_J_KEY           = 74,
	VK_75_K_KEY           = 75,
	VK_76_L_KEY           = 76,
	VK_77_M_KEY           = 77,
	VK_78_N_KEY           = 78,
	VK_79_O_KEY           = 79,
	VK_80_P_KEY           = 80,
	VK_81_Q_KEY           = 81,
	VK_82_R_KEY           = 82,
	VK_83_S_KEY           = 83,
	VK_84_T_KEY           = 84,
	VK_85_U_KEY           = 85,
	VK_86_V_KEY           = 86,
	VK_87_W_KEY           = 87,
	VK_88_X_KEY           = 88,
	VK_89_Y_KEY           = 89,
	VK_90_Z_KEY           = 90,
	VK_112_F1_KEY         = 112,
	VK_113_F2_KEY         = 113,
	VK_114_F3_KEY         = 114,
	VK_115_F4_KEY         = 115,
	VK_116_F5_KEY         = 116,
	VK_117_F6_KEY         = 117,
	VK_118_F7_KEY         = 118,
	VK_119_F8_KEY         = 119,
	VK_120_F9_KEY         = 120,
	VK_121_F10_KEY        = 121,
	VK_122_F11_KEY        = 122,
	VK_123_F12_KEY        = 123,
	VK_187_OEM_PLUS_KEY   = 187,
	VK_189_OEM_MINUS_KEY  = 189,
};

enum GENERAL_MONSTER_FLAG
{
	GMF_B1 = BIT(1),
	GMF_B2_NOT_REVERSED_ANIMATION = BIT(2),
	GMF_B3_STONE_MODE = BIT(3),
	GMF_B4_MONSTER_CANT_HEAL = BIT(4),
	GMF_B5_TARGET_IS_MONSTER = BIT(5),
	GMF_B6_PLAYER_FRENDLY = BIT(6),
	GMF_B7 = BIT(7),
	GMF_B8_CAN_KNOKBACK = BIT(8),
	GMF_B9 = BIT(9),
	GMF_B10_CAN_INTERACT_WITH_DOORS = BIT(10),
	GMF_B11_NOT_SELECT_TARGET_YET = BIT(11),
	GMF_B12_BERSERK = BIT(12),
	GMF_B13 = BIT(13),
	GMF_B14 = BIT(14),
	GMF_B15 = BIT(15),
	GMF_B16 = BIT(16),
	GMF_B17 = BIT(17),
	GMF_B18 = BIT(18),
	GMF_B19 = BIT(19),
	GMF_B20 = BIT(20),
	GMF_B21 = BIT(21),
	GMF_B22 = BIT(22),
	GMF_B23 = BIT(23),
	GMF_B24 = BIT(24),
	GMF_B25 = BIT(25),
	GMF_B26 = BIT(26),
	GMF_B27 = BIT(27),
	GMF_B28 = BIT(28),
	GMF_B29 = BIT(29),
	GMF_B30 = BIT(30),
	GMF_B31 = BIT(31),
	GMF_B32 = BIT(32),
};

enum CELL_FLAG : uchar
{
	CF_1_SPELL_CAST = BIT(1),
	CF_2_VISIBLE_BY_PLAYER = BIT(2),
	CF_4_DEAD_PLAYER = BIT(3),
	CF_8_FORBIDDEN = BIT(4),
	CF_16_MONSTER = BIT(5),
	CF_32_PLAYER = BIT(6),
	CF_64_VISIBLE_BY_CURSOR = BIT(7),
	CF_128_DISCOVERED = BIT(8),
};

enum MONSTER_RESIST : ushort
{
	MR_0_NO			= 0,
	MR_1_ARCAN		= BIT(1),
	MR_2_FIRE		= BIT(2),
	MR_3_LIGHT		= BIT(3),
	MR_4_IM_ARCAN	= BIT(4),
	MR_5_IM_FIRE	= BIT(5),
	MR_6_IM_LIGHT	= BIT(6),
	MR_7_IM_CURSE	= BIT(7),
	MR_8_IM_ACID	= BIT(8),
};
bit_enum( MONSTER_RESIST )
reflect_enum( MONSTER_RESIST, MR_1_ARCAN, MR_2_FIRE, MR_3_LIGHT,
	MR_4_IM_ARCAN, MR_5_IM_FIRE, MR_6_IM_LIGHT, MR_7_IM_CURSE, MR_8_IM_ACID );

enum EFFECT_ACTION
{
	EA_END_MARKER = -1,
	EA_NO,
	EA_FIRE_HIT,
	EA_LIGHTNING_HIT,
	EA_FIRE_ARROW,
	EA_LIGHTNING_ARROW,
	EA_KNOCK_BACK,
	EA_LIFE_STEAL,
	EA_MANA_STEAL,
	EA_TAKEN_TO_MANA,
	EA_THORNS,
	//EA_THORNS_FIRE, // и т.п. (по аналогии с elemental hit выше)
	EA_COUNT
};

enum TRIGGER : uint
{
	T_NO			= 0,
	T_ATTACK		= BIT(1),
	T_CAST			= BIT(2),
	T_HIT_MELEE		= BIT(3),
	T_HIT_RANGED	= BIT(4),
	T_DAMAGE		= BIT(5),
	T_TAKE_MELEE	= BIT(6),
	T_TAKE_RANGED	= BIT(7),
	T_TAKE_DAMAGE	= BIT(8),
	T_DURABILITY	= BIT(9), // добавить индекс моба попавшего в броню, параметры смотреть в вещи
	T_KILL			= BIT(10),
	T_HEAL			= BIT(11),
	T_MOVE			= BIT(12),
	T_STAY			= BIT(13),
	T_BLOCK			= BIT(14),
	T_DESTROY		= BIT(15),
	T_DROP			= BIT(16),
	T_SPEND_MANA	= BIT(17),
	T_DEATH			= BIT(18),
	T_LEVEL_UP		= BIT(19),
	T_TICK			= BIT(20),
	T_HIT = T_HIT_MELEE + T_HIT_RANGED,
	T_TAKE_HIT = T_TAKE_MELEE + T_TAKE_RANGED,
};
bit_enum( TRIGGER )

enum ITEM_AFFIX: uint {
	IA_JEWEL  = 0x1,
	IA_RANGE  = 0x10,
	IA_STAFF  = 0x100,
	IA_MELEE  = 0x1000,
	IA_SHIELD = 0x10000,
	IA_ARMOR  = 0x100000,
	//IA_BELT = 0x1000000, // здесь можно детализировать типизацию аффиксов
	IA_ALL    = 0x111111,
};
bit_enum( ITEM_AFFIX )
reflect_enum( ITEM_AFFIX, IA_JEWEL, IA_RANGE, IA_STAFF, IA_MELEE, IA_SHIELD, IA_ARMOR, IA_ALL );

#ifndef TH1
enum CRIT{
	CR_MELEE,
	CR_ARROW,
	CR_MAGIC,
	CR_REFLECT,
	CR_COUNT
};

enum AFFIX_EFFECT: int
{
	END_MARKER	= -1,
	AE_TO_HIT,
	AE_PERCENT_DAMAGE,
	AE_TO_HIT_DAMAGE,
	AE_PERCENT_AC,
	AE_SPECIAL_AC,
	AE_AC,
	AE_RESIST_FIRE,
	AE_RESIST_LIGHTNING,
	AE_RESIST_ARCAN,
	AE_RESIST_All,
	AE_RESIST_FIRE_DISABLED,
	AE_SPELLS_LEVEL,
	AE_EXTRA_CHARGES,
	AE_SPELL,
	AE_FIRE_HIT_DAMAGE,
	AE_LIGHTNING_HIT_DAMAGE,
	AE_STR,
	AE_MAG,
	AE_DEX,
	AE_VIT,
	AE_ALL_STAT,
	AE_DFE,
	AE_HIT_POINTS,
	AE_MANA,
	AE_HIGH_DURABILITY,
	AE_DECREASED_DURABILITY,
	AE_INDESTRUCTIBLE_DIS,
	AE_PLUS_LIGHT_RADIUS,
	AE_MINUS_LIGHT_RADIUS,
	AE_MULTIPLE_ARROWS, // в th1 elemental arrow взаимоисключающие, для реализации дополнительных подвидов Specal Magic Arrow через Player.MinLightningDamage
	AE_FIRE_ARROW_DAMAGE,
	AE_LIGHTNING_ARROW_DAMAGE,
	AE_FIREBALL_DAMAGE,
	AE_BONUS_DAMAGE_VS_UNDEAD,
	AE_LOSE_ALL_REGENERATION,
	AE_YOU_CANT_HEAL_DISABLED,
	AE_ARD,
	AE_KNOCKS_TARGET_BACK,
	AE_DAMAGE_VS_DEMONS,
	AE_LOSE_ALL_RESISTANCES,
	AE_2X_FURY_DURATION,
	AE_MANA_STEAL_1_2,
	AE_LIFE_STEAL_1_2,
	AE_ARMOR_PIERCING,
	AE_FAST_ATTACK_SPEED,
	AE_FAST_HIT_RECOVERY,
	AE_FAST_BLOCK,
	AE_DAMAGE,
	AE_RANDOM_SPEED_ARROWS,
	AE_UNUSUAL_ITEM_DAMAGE,
	AE_UNUSUAL_DURABILITY,
	AE_FASTER_ATTACK_SWING_DISABLED,
	AE_ONE_HANDED_STAFF,
	AE_LIFE_REGEN_PERCENT_100,
	AE_LIFE_STEALING_1_2_RND,
	AE_NO_STR_REQ,
	AE_INFRAVISION,
	AE_UNIQUE_GRAPHIC,
	AE_LIGHTNING_DAMAGE,
	AE_CHARGED_BOLTS_ON_HITS_DISABLED,
	AE_CHANCE_OF_DOUBLE_DAMAGE,
	AE_DECAYING_DAMAGE_DISABLED,
	AE_INCREASED_MANA_REGENERATION,
	AE_RANDOM_0_300_PERCENT_DAMAGE,
	AE_LOW_DUR_ADD_DAMAGE,
	AE_LESS_25_MANACOST,
	AE_AC_VS_DEMONS,
	AE_AC_VS_UNDEAD,
	AE_MANA_MOVED_TO_HEALTH,
	AE_HEALTH_MOVED_TO_MANA,

	// PHYSICAL
	// FIRE
	// LIGHTNING
	// ARCANE
	// POISON
	// HOLY
	// COLD
	// CURSE
	
	AE_GOLD_FIND	,	// 1-2 байт	+/-X% gold find (настраиваемый процент) // ----- th2 новые эффекты аффиксов -----------------------------------------------------:
	AE_GOLD_ABS_FIND	,	// +/-X or +/-X-Y gold find
	AE_MAGIC_FIND	,	// 1-2 байт	+/-X% chance to find magic items (настраиваемый процент)
	AE_SPELL_LEVEL	,	// 2-10 байт (индекс типа(1 байт) или маска заклов (8 байт) и значение (до 2 байт)) // +/-X spell level(s) to Y (X - настраиваемое число, Y - заклинание)
	AE_SPELL_PERCENT,	// 2-10 байт (индекс или маска спелла и урон) +/-X% to spell damage
	AE_SPELL_DAMAGE	,	// 2-10 байт (индекс или маска спелла и урон) +/-X-Y to spell damage
	AE_ELEMENT_PERCENT	,	// 2-4 байта (2 маска типа и 2 урон) +/-X% to Fire/Lightning/Magic/Holy/Other damage spells
	AE_ELEMENT_DAMAGE	, // element damages and to hit (chance)
	
	AE_ACTION	,	// эти три эффекта заменют группу закоменнтированных ниже
	AE_ACTION_PERCENT	,
	AE_ACTION_VALUE	,
	
	//AE_ARCAN_HIT_DAMAGE	,	// 4-8 байт	X-Y magic hit damage / magic arrows (трн перекрас огнеэфекта на бордовый)
	//AE_HOLY_HIT_DAMAGE	,	// 4-8 байт	X-Y holy hit damage / holy arrows (TRN перекрас на светло белый)
	//AE_POISON_HIT_DAMAGE	,	// 4-8 байт	X-Y poison hit damage / poison arrows (TRN перекрас на green??)
	//AE_COLD_HIT_DAMAGE	,	// 4-8 байт	X-Y cold hit damage / cold arrows (TRN перекрас на blue??)
	//AE_CURSE_HIT_DAMAGE	,	// 4-8 байт	X-Y curse hit damage / curse arrows (TRN перекрас на void??)
	AE_ARCAN_ARROW_DAMAGE	,	// эти по аналогии MinFireDamage, MinLightningDamage которые int, и можно урезать до short
	AE_HOLY_ARROW_DAMAGE	,	// таким образом освободиться место для уже существущих Magic(Arcan) и Holy
	AE_ACID_ARROW_DAMAGE	,	// либо уже расширять структуру Item, не должно повлият (по сети она не передается
	//AE_COLD_ARROW_DAMAGE	,
	//AE_CURSE_ARROW_DAMAGE	,
	//AE_TO_LIFE_STEAL,	// 1 байт +/-X% life steal // было 4 бита 3% lifesteal, 3% manasteal, 4% lifesteal, 4% manasteal
	//AE_TO_MANA_STEAL,	// 1 байт +/-X% mana steal
	//AE_DAMAGE_TAKEN_TO_MANA,	// 1 байт X% damage taken goes to mana (Absorb ?)
	//AE_THORNS	,	// 6 байт шипы: attacker takes Z damage of X-Y (for melee attacks from monsters, Z - dmg type)
	//AE_THORNS_PERCENT,	// 6 байт шипы: +X% attacker takes Z damage (for melee attacks from monsters, Z - dmg type)
	//AE_THORNS_CHANCE,	// 6 байт шипы: +X% attacker chance takes Z damage (for melee attacks from monsters, Z - dmg type)

	AE_FAST_CAST	,	// 3 бита ( 1,2,3 - по схеме атаки/хита) fast/faster/fastest casting (ускорения каста заклинаний: -1 frame, -1/2, -2) // qndel - changed to -1,-2,-3
	//AE_AC	,	// уже есть // +/-X to Armor Class (настраиваемое число на предметах с броней) 
	AE_STATS_PERCENT	,	// 1 байт	+/-X% to all stats (attributes)
	AE_STR_PERCENT	,	// 4 байта	+/-X% to stat
	AE_DEX_PERCENT	,
	AE_MAG_PERCENT	,
	AE_VIT_PERCENT	,
	AE_LIFE_REGEN	,	// 1-2 байт +X to life regeneration
	AE_MANA_REGEN	,	// 1-2 байт +X to mana regeneration
	AE_LIFE_REGEN_PERCENT	,	// 1-2 байт +X% to life regeneration
	AE_MANA_REGEN_PERCENT	,	// 1-2 байт +X% to mana regeneration
	AE_XP_GAIN	,	// 4 байт +/-X experience gained
	AE_XP_GAIN_PERCENT	,	// 1-2 байт +/-X% experience gained
	AE_ABSORB_MELEE_DAMAGE	,	// 1-2 байт +/-X% damage absorbed (бонус к поглощению мили урона персонажем),
	AE_ABSORB_RANGED_DAMAGE	,	// 1-2 байт (переработанный AE_ARD) кстати возможно что этот  аффикс надо интегрировать в броню, и сделать его больше для брони, меньше раза в 3 для шлема, и еще меньше для пояса перчаток и ботинок (типа 100%, 35%, 10%, 20%, 15%).
	AE_SUMMON_HP_PERCENT	,	// 1-2 байта +/-X % to summoned minion HPs
	AE_SUMMON_DAMAGE_PERCENT	,	// 1-2 байта +/-X % to summoned minion damage //пусть работает сразу для любого типа урона. даже для магии
	AE_SUMMON_AC_PERCENT	,	// 1-2 байта +/-X % to summoned minion AC
	AE_SUMMON_TO_HIT	,	// 1-2 байта +/-X % to summoned minion ToHit
	AE_SUMMON_HP	,	// 2-4 байта +/-X to summoned minion HPs
	AE_SUMMON_DAMAGE	,	// 2-4 байта +/-X to summoned minion damage //пусть работает сразу для любого типа урона. даже для магии
	AE_SUMMON_AC	,	// 2-4 байта +/-X to summoned minion AC
	AE_BLOCK_CHANCE	,	// 1 байт +/-X% chance of blocking
	AE_CRIT_CHANCE	,	// 2 байт +X% chance of critical hit chance
	AE_CRIT_DAMAGE_PERCENT	,	// 2 байта +/-X% to critical hit damage (если сложно кодить, то можно +25%, +50%)
	AE_CRIT_PERCENT	,	// 2 байта +/-X% to critical hit damage (если сложно кодить, то можно +25%, +50%)
	AE_CRIT_DAMAGE	,	// +/-X to critical hit damage
	AE_SPICIES_DAMAGE	,	// 3 байта +X damage to demons/beasts/undead
	AE_SPICIES_DAMAGE_PERCENT	,	// 3 байта +X% damage to demons/beasts/undead
	AE_SPICIES_TO_HIT	,	// 3 байта +X% hit to demons/beasts/undead
	AE_SPICIES_AC	,
	AE_SPICIES_AC_PERCENT	,
	AE_SPICIES_DFE	,	// 2-3 байта -/+X DFE of (Y) beast/demon/undead type (for all damage types)
	AE_LIFE_PERCENT	,	// 1-2 байта +/-X% life/mana (increases character life/mana based on basic character value)
	AE_MANA_PERCENT	,	// 1-2 байта
	AE_WEAPON_PERCENT	,	// 4 байта +/-X% to sword/mace/axe/polearm/bow/crossbow/staff proficiency
	AE_RESIST	, // +/-X% resist to Z element
	AE_ATTACK_SPEED	,
	AE_CAST_SPEED	,
	AE_COUNT
};
#endif

enum AFFIX_FLAG
{
	AF_1_INFRAVISION = BIT(1),
	AF_2_RND_STEAL_LIFE = BIT(2),
	AF_3_RND_ARROWS_SPEED = BIT(3),
	AF_4_FIRE_ARROWS = BIT(4),
	AF_5_FIRE_MILI_DAMAGE = BIT(5),
	AF_6_LIGHTING_MILI_DAMAGE = BIT(6),
	AF_7_FAST_LIFE_REGEN = BIT(7),
	AF_8_UNKNOW = BIT(8),
	AF_9_PLAYER_CANT_HEAL_DISABLED = BIT(9),
	AF_10_MULTI_SHOT = BIT(10),
	AF_11_UNKNOW = BIT(11),
	AF_12_KNOCK_TARGET_BACK = BIT(12),
	AF_13_2X_FURY_DURATION = BIT(13),
	AF_14_SMALL_MANA_STEAL    = BIT(14), // 1%
	AF_15_BIG_MANA_STEAL      = BIT(15), // 2%
	AF_16_SMALL_LIFE_STEAL    = BIT(16), // 1%
	AF_17_BIG_LIFE_STEAL      = BIT(17), // 2%
	AF_18_FAST_ATTACK_SPEED_1 = BIT(18), // quick   // в д1 для игрока берется наибольшая скорость с предмета, а не сумма прибавок как в д2/д3
	AF_19_FAST_ATTACK_SPEED_2 = BIT(19), // fast	// чтобы сделать суммирование, надо в предмете сделать поле процент скорости атаки
	AF_20_FAST_ATTACK_SPEED_3 = BIT(20), // faster	// можно char (так как char BaseItem.AnimationDelay, который наверно надо переделать в speed)
	AF_21_FAST_ATTACK_SPEED_4 = BIT(21), // fastest // так же в игроке надо сумму, тут уже хотя бы short
	AF_22_FAST_HIT_RECOVERY_1 = BIT(22), // fast
	AF_23_FAST_HIT_RECOVERY_2 = BIT(23), // faster
	AF_24_FAST_HIT_RECOVERY_3 = BIT(24), // fastest
	AF_25_FAST_BLOCK = BIT(25),
	AF_26_LIGHTING_ARROWS = BIT(26),
	AF_27_BONUS_DAMAGE_VS_UNDEAD = BIT(27),
	AF_28_LOSE_ALL_REGENERATION = BIT(28),
	AF_29_ARD = BIT(29),
	AF_30_UNKNOW = BIT(30),
	AF_31_BONUS_DAMAGE_VS_DEMONS = BIT(31),
	AF_32_LOSE_RESISTANSE = BIT(32),
	AF_CHARGED_BOLT_ON_HIT = (AF_5_FIRE_MILI_DAMAGE | AF_6_LIGHTING_MILI_DAMAGE),
	AF_LIGHTING_ON_SHOT = (AF_4_FIRE_ARROWS | AF_26_LIGHTING_ARROWS),
	AF_ATTACK_SPEEDS = AF_21_FAST_ATTACK_SPEED_4|AF_20_FAST_ATTACK_SPEED_3|AF_19_FAST_ATTACK_SPEED_2|AF_18_FAST_ATTACK_SPEED_1,
	AF_HIT_SPEEDS = AF_22_FAST_HIT_RECOVERY_1|AF_23_FAST_HIT_RECOVERY_2|AF_24_FAST_HIT_RECOVERY_3,
};

enum AFFIX_FLAG2
{
	AF_33_CHANCE_OF_DOUBLE_DAMAGE     = BIT( 1 ), // 1
	AF_34_DECAYING_DAMAGE_DISABLE     = BIT( 2 ), // 2
	AF_35_INCREASED_MANA_REGENERATION = BIT( 3 ), // 4  // в hf тут был двойной удар по монстрам, одинарный по себе
	AF_36_RANDOM_1_260_PERCENT_DAMAGE = BIT( 4 ), // 8
	AF_37_DEC_25_MANACOST             = BIT( 5 ), // 16 // в hf тут был Doppelganger - клонирование монстра
	AF_38_AC_VS_DEMONS                = BIT( 6 ), // 32
	AF_39_AC_VS_UNDEAD                = BIT( 7 ), // 64
	AF_40_CAST_SPEED_1				  = BIT( 8 ), // th2 новые флаги для новых аффиксов
	AF_41_CAST_SPEED_2				  = BIT( 9 ),
	AF_42_CAST_SPEED_3				  = BIT( 10 ),
	AF_43_HOLY_ARROWS				  = BIT( 11 ),
	AF_44_ARCANE_ARROWS               = BIT( 12 ),
	AF_45_ACID_ARROWS               = BIT( 13 ),
	AF_46 = BIT( 14 ),
	AF_47 = BIT( 15 ),
	AF_48 = BIT( 16 ),
	AF_49 = BIT( 17 ),
	AF_50 = BIT( 18 ),
	AF_51 = BIT( 19 ),
	AF_52 = BIT( 20 ),
	AF_53 = BIT( 21 ),
	AF_54 = BIT( 22 ),
	AF_55 = BIT( 23 ),
	AF_56 = BIT( 24 ),
	AF_57 = BIT( 25 ),
	AF_58 = BIT( 26 ),
	AF_59 = BIT( 27 ),
	AF_60 = BIT( 28 ),
	AF_61 = BIT( 29 ),
	AF_62 = BIT( 30 ),
	AF_63 = BIT( 31 ),
	AF_64 = BIT( 32 ),
	AF_CAST_SPEEDS = AF_40_CAST_SPEED_1|AF_41_CAST_SPEED_2|AF_42_CAST_SPEED_3,
};

enum BUFF_FLAG
{
	BF_1_ETHEREAL     = BIT(1), // 1   Бессмертие в d1/hf, Иммунитет к магии в th
	BF_2_FURY_ACTIVE  = BIT(2), // 2
	BF_3_FURY_LETARGY = BIT(3), // 4
	BF_4_ARMOR_BLESS  = BIT(4), // 8  
	BF_5_DAMAGE_BLESS = BIT(5), // 16
	BF_6              = BIT(6), // 32  th2 новые флаги
	BF_7              = BIT(7), // 64
	BF_8              = BIT(8), // 128
};

enum SPELL_ORIGIN
{
	SO_0_SKILL = 0,
	SO_1_SPELL = 1,
	SO_2_RELIC = 2,
	SO_3_STAFF = 3,
	SO_4_DISABLE = 4,
};

enum MOUSE_BUTTON_PRESSED
{
	MBP_0_NONE = 0,
	MBP_1_LEFT = 1,
	MBP_2_RIGHT = 2,
};

enum PLAYER_CUR_ACTION
{
	PCA_0_NOTHING = 0,
	PCA_1_WALK_UP = 1,
	PCA_2_WALK_DOWN = 2,
	PCA_3_WALK_HORISONTAL = 3,
	PCA_4_ATTACK = 4,
	PCA_5_RANGE_ATTACK = 5,
	PCA_6_BLOCK = 6,
	PCA_7_GOT_HIT = 7,
	PCA_8_DEATH = 8,
	PCA_9_SPELL = 9,
	PCA_10_NOTHING_2 = 10,
	PCA_11 = 11,
};

enum PLAYER_NEXT_ACTION
{
	PNA_M1_NONE = -1,
	PNA_9_MELEE_ATTACK_TO_NONE = 9,
	PNA_10_RANGE_ATTACK_TO_NONE = 10,
	PNA_12_CAST_SPELL_TO_NONE = 12,
	PNA_13_OBJECT_ACTIVATE = 13,
	PNA_14_OBJECT_SAFE_ACTIVATE = 14,
	PNA_15_GET_ITEM_FROM_LAND = 15,
	PNA_16_GET_ITEM_FROM_LAND_2 = 16,
	PNA_17_TOWNER_DIALOG = 17,
	PNA_18_ACTIVATE_OBJECT_WITH_TELEKINES = 18,
	PNA_20_MELEE_ATTACK_TO_MONSTER = 20,
	PNA_21_MELEE_ATTACK_TO_PLAYER = 21,
	PNA_22_RANGE_ATTACK_TO_MONSTER = 22,
	PNA_23_RANGE_ATTACK_TO_PLAYER = 23,
	PNA_24_CAST_SPELL_TO_MONSTER = 24,
	PNA_25_CAST_SPELL_TO_PLAYER = 25,
	PNA_26_CAST_NOT_ORIENTED_SPELL = 26,
};

enum MAIN_PANEL_BUTTON
{
	MPB_0_CHAR = 0,
	MPB_1_QUEST = 1,
	MPB_2_AUTOMAP = 2,
	MPB_3_MENU = 3,
	MPB_4_INV = 4,
	MPB_5_SPELL = 5,
	MPB_6_TALK = 6,
	MPB_7_PVP = 7,
};

enum CURSOR_MODE
{
	CM_0_INVISIBLE = 0,
	CM_1_NORMAL_HAND = 1,
	CM_2_IDENTIFY = 2,
	CM_3_REPAIR = 3,
	CM_4_STAFF_RECHARGE = 4,
	CM_5_TRAP_DISARM = 5,
	CM_6_OIL = 6,
	CM_7_TELECINES = 7,
	CM_8_RISING = 8,
	CM_9_SIGHT = 9,
	CM_10_HEAL_OTHER = 10,
	CM_11_SAND_GLASS = 11,
	CM_12_ITEMS_PICS_START = 12,
};

enum NET_CMD
{
	NC_1_WALK_PLAYER = 1,
	NC_2_PLAYER_CONNECT_2 = 2,
	NC_3_MODIFY_STR = 3,
	NC_4_MODIFY_MAG = 4,
	NC_5_MODIFY_DEX = 5,
	NC_6_MODIFY_VIT = 6,
	NC_7_PLAYER_CAST_TO_NONE = 7,
	NC_8_GET_ITEM_TO_CURSOR = 8,
	NC_9_GET_ITEM_TO_INVENTORY = 9,
	NC_10_DROP_ITEM_FROM_CURSOR = 10,
	NC_11_FLIP_ITEM = 11,
	NC_12_MELEE_ATTACK_TO_NONE = 12,
	NC_13_RANGE_ATTACK_TO_NONE = 13,
	NC_14_CAST_ORIENTED_SPELL = 14,
	NC_15_CAST_ORIENTED_SPELL_2 = 15,
	NC_16_OBJECT_ACTIVATE = 16,
	NC_17_OBJECT_DISARM_ACTIVATE = 17,
	NC_18_MELEE_ATTACK_TO_MONSTER = 18,
	NC_19_MELEE_ATTACK_TO_PLAYER = 19,
	NC_20_RANGE_ATTACK_TO_MONSTER = 20,
	NC_21_RANGE_ATTACK_TO_PLAYER = 21,
	NC_22_CAST_ORIENTED_SPELL_TO_MONSTER = 22,
	NC_23_CAST_ORIENTED_SPELL_TO_PLAYER = 23,
	NC_24_CAST_ORIENTED_SPELL_TO_MONSTER = 24,
	NC_25_CAST_ORIENTED_SPELL_TO_PLAYER = 25,
	NC_26_RISING_PLAYER = 26,
	NC_27_ACTIVATE_OBJECT_WITH_TELEKINES = 27,
	NC_28_MONSTER_KNOCKBACK_WITH_TELEKINES = 28,
	NC_29_TOWNER_DIALOG = 29,
	NC_30_START_NEW_LVL = 30,
	NC_31_USE_TOWN_PORTAL = 31,
	NC_32_START_RESSURECT_TIMER = 32,
	NC_33_THROW_LEFT = 33,
	NC_34_THROW_RIGHT = 34,
	NC_35_MONSTERS_SYNC = 35,
	NC_36_KILL_MONSTER = 36,
	NC_37_DAMAGE_MONSTER = 37,
	NC_38_START_PLAYER_KILL = 38,
	NC_39_GET_ITEM_FROM_LAND = 39,
	NC_40_GET_ITEM_FROM_LAND = 40,
	NC_41_PLAYER_GOTO_ITEM_1 = 41,
	NC_42_PLAYER_GOTO_ITEM_2 = 42,
	NC_43_OPEN_DOOR = 43,
	NC_44_CLOSE_DOOR = 44,
	NC_45_ACTIVATE_OBJECT = 45,
	NC_46_ACTIVATE_SHRINE = 46,
	NC_47_DESTROY_OBJECT = 47,
	NC_48_EQUIP_ITEM = 48,
	NC_49_DESTROY_ON_BODY_ITEM = 49,
	NC_50_PVP_DAMAGE = 50,
	NC_51_LEVELUP_PLAYER = 51,
	NC_52_DROP_ITEM = 52,
	NC_53_MOVE_PLAYER_TO_DLVL = 53,
	NC_54_CONNECT_PLAYER = 54,
	NC_55_MELEE_ATTACK_TO_NONE = 55,
	NC_56_MAKE_TP = 56,
	NC_57_RESET_PLAYER_ENTRYS = 57,

	NC_58_DLVL_0 = 58,
	NC_59_DLVL_1 = 59,
	NC_60_DLVL_2 = 60,
	NC_61_DLVL_3 = 61,
	NC_62_DLVL_4 = 62,
	NC_63_DLVL_5 = 63,
	NC_64_DLVL_6 = 64,
	NC_65_DLVL_7 = 65,
	NC_66_DLVL_8 = 66,
	NC_67_DLVL_9 = 67,
	NC_68_DLVL_10 = 68,
	NC_69_DLVL_11 = 69,
	NC_70_DLVL_12 = 70,
	NC_71_DLVL_13 = 71,
	NC_72_DLVL_14 = 72,
	NC_73_DLVL_15 = 73,
	NC_74_DLVL_16 = 74,
	NC_75_DLVL_17 = 75,
	NC_76_DLVL_18 = 76,
	NC_77_DLVL_19 = 77,
	NC_78_DLVL_20 = 78,
	NC_79_DLVL_21 = 79,
	NC_80_DLVL_22 = 80,
	NC_81_DLVL_23 = 81,
	NC_82_DLVL_24 = 82,
	NC_83_PORTALS_AND_QUESTS_INFO = 83,
	NC_84_END_OF_WORLD_INFO = 84,
	NC_85_HEAL_PLAYER = 85,
	NC_86_MESSAGE = 86,
	NC_87_MODYFY_STR = 87,
	NC_88_MODYFY_MAG = 88,
	NC_89_MODYFY_DEX = 89,
	NC_90_MODYFY_VIT = 90,
	NC_91_RESTART_IN_TOWN = 91,
	NC_92_CAST_NOT_ORIENTED = 92,
	NC_93_GET_ITEM_FROM_NET = 93,
	NC_94_GET_ITEM_FROM_MAP_TO_CURSOR = 94,
	NC_95_KILL_GOLEM_BY_ITS_OWNER = 95,
	NC_96_UPDATE_QUEST_STATUS = 96,
	NC_97_DESTROY_MANASHIELD = 97,
	NC_98_CREATE_GOLEM = 98,
	NC_99_DESTROY_REFLECT = 99,
	NC_100_OPEN_WEAK_UBER = 100,
	NC_101_OPEN_ABYSS = 101,
	NC_102_OPEN_CRYPT = 102,
	NC_103_SET_PLAYER_INDEX = 103,
	NC_104_SET_PLAYER_ONLINE = 104,
};

enum DROP_TYPE: ushort
{
	D_GOOD			= BIT(7),	// 0x40
	D_BOSS			= BIT(8),	// 0x80
	D_MOB			= BIT(9),	// 0x100
	D_ALLOW_DUP		= BIT(10),	// 0x200
	D_GRISWOLD_BASIC= BIT(11),	// 0x400
	D_GRISWOLD_MAGIC= BIT(12),	// 0x800
	D_WIRT			= BIT(13),	// 0x1000
	D_ADRIA			= BIT(14),	// 0x2000
	D_PEPIN			= BIT(15),	// 0x4000
	D_INTERNAL		= BIT(16),	// 0x8000
	D_SHOP = D_GRISWOLD_BASIC | D_GRISWOLD_MAGIC | D_WIRT | D_ADRIA | D_PEPIN,
	D_RANDOM_POTION	= D_BOSS | D_MOB,
	D_MAGIC_FIND	= D_ADRIA | D_PEPIN,
	D_RARE			= D_GRISWOLD_BASIC | D_GRISWOLD_MAGIC,
};

enum ITEM_TYPE: char {
	ITEM_0_NONE						= 0,
	ITEM_1_WEAPON					= 1,
	ITEM_2_ARMOR					= 2,
	ITEM_3_JEWELRY_POTION_RELICT	= 3,
	ITEM_4_GOLD						= 4,
	ITEM_5_NOVELTY					= 5,
};
reflect_enum( ITEM_TYPE, ITEM_0_NONE, ITEM_1_WEAPON, ITEM_2_ARMOR, ITEM_3_JEWELRY_POTION_RELICT, ITEM_4_GOLD, ITEM_5_NOVELTY );

enum MAGIC_LEVEL: char {
	ML_0_USUAL	 = 0,
	ML_1_MAGIC	 = 1,
	ML_2_UNIQUE	 = 2,
	ML_3_SET	 = 3,
};
reflect_enum( MAGIC_LEVEL, ML_0_USUAL, ML_1_MAGIC, ML_2_UNIQUE, ML_3_SET );

enum WEAPON { //sword/mace/axe/polearm/bow/crossbow/staff proficiency
	W_SWORD,
	W_MACE,
	W_AXE,
	W_POLEARM,
	W_BOW,
	W_CROSSBOW,
	W_STAFF,
	W_COUNT
};

enum ITEM_CODE: int { // must be int
	IC_M1_NONE			= -1,
	IC_0_OTHER			=  0, // All other items: novelties, potions, scrolls, books, etc
	IC_1_SWORD			=  1, // 01 Swords
	IC_2_AXE			=  2, // 02 Axes, Cleaver
	IC_3_BOW			=  3, // 03 Bows
	IC_4_MACE			=  4, // 04 Blunt weapons: maces, hammers, mauls, clubs
	IC_5_SHIELD			=  5, // 05 Shields
	IC_6_LIGHT_ARMOR	=  6, // 06 Light armor: rags, capes, leather armor, etc
	IC_7_HELM			=  7, // 07 Helms, crowns
	IC_8_MID_ARMOR		=  8, // 08 Mid armor: Arkaine's Valor, chain mail, splint mail, etc
	IC_9_HEAVY_ARMOR	=  9, // 09 Heavy plates: Full Plate Mail, Gothic Plate, Breast Plate, etc
	IC_10_STAFF			= 10, // 0A Staves
	IC_11_GOLD			= 11, // 0B Gold
	IC_12_RING			= 12, // 0C Rings
	IC_13_AMULET		= 13, // 0D Amulets
	IC_14_EAR			= 14, // placeholder для пока непонятного оригинального кода
	IC_15_GLOVE			= 15, // 0F Gloves
	IC_16_BOOTS			= 16, // 10 Boots
	IC_17_BELT			= 17, // 11 Belts
	IC_COUNT
};
reflect_enum( ITEM_CODE, IC_M1_NONE, IC_0_OTHER, IC_1_SWORD, IC_2_AXE, IC_3_BOW, IC_4_MACE, IC_5_SHIELD, IC_6_LIGHT_ARMOR,
						 IC_7_HELM, IC_8_MID_ARMOR, IC_9_HEAVY_ARMOR, IC_10_STAFF, IC_11_GOLD, IC_12_RING, IC_13_AMULET,
						 IC_14_EAR, IC_15_GLOVE, IC_16_BOOTS, IC_17_BELT );

enum EQUIPPED_LOCATION: char
{
	EL_M1_END_MARKER = -1,
	EL_1_ONE_HANDED = 1,
	EL_2_TWO_HANDED = 2,
	EL_3_TORSO = 3,
	EL_4_HEAD = 4,
	EL_5_FINGER = 5,
	EL_6_NECK = 6,
	EL_7_INVENTORY = 7,
	EL_8_BELT = 8,
	EL_9_WAIST = 9,
	EL_10_HANDS = 10,
	EL_11_FEET = 11,
};
reflect_enum( EQUIPPED_LOCATION, EL_M1_END_MARKER, EL_1_ONE_HANDED, EL_2_TWO_HANDED, EL_3_TORSO, EL_4_HEAD, EL_5_FINGER,
								 EL_6_NECK, EL_7_INVENTORY, EL_8_BELT, EL_9_WAIST, EL_10_HANDS, EL_11_FEET );

constexpr int InvRows = th2 ? 7 : 4;
constexpr int InvCols = 10;

enum ALT_WEAPON
{
	AW_LeftHand,
	AW_RightHand
};

enum INVENTORY_SLOT // Player.OnBodySlots[] indexes
{
	IS_0_Head = 0,
	IS_1_LeftRing,
	IS_2_RightRing,
	IS_3_Neck,
	IS_4_LeftHand,
	IS_5_RightHand,
	IS_6_Torso,
	IS_7_Waist,
	IS_8_Hands,
	IS_9_Feet,
	IS_10_7_Inventory = th2 ? 10 : 7,
	IS_11_8_Belt,

	IS_12_9_slots = th2 ? 12 : 9,
	IS_70_40_Inv_Count = InvRows * InvCols,
	IS_50_47_Belt_Start = IS_10_7_Inventory + IS_70_40_Inv_Count,
	IS_8_Belt_Count = 8,
};

enum MOUSE_BUTTON
{
	MOUSE_BUTTON_UP   = 0,
	MOUSE_BUTTON_DOWN = 1,
};

enum MAGIC_CODE: int { // must be int
	MC_0_NONE						 = 0,
	MC_1							 = 1,
	MC_2_POTION_OF_FULL_HEALING		 = 2,
	MC_3_POTION_OF_HEALING			 = 3,
	MC_4							 = 4,
	MC_5							 = 5,
	MC_6_POTION_OF_MANA				 = 6,
	MC_7_POTION_OF_FULL_MANA		 = 7,
	MC_8							 = 8,
	MC_9							 = 9,
	MC_10_ELIXIR_OF_STRENGTH		 = 10,
	MC_11_ELIXIR_OF_MAGIC			 = 11,
	MC_12_ELIXIR_OF_DEXTERITY		 = 12,
	MC_13_ELIXIR_OF_VITALITY		 = 13,
	MC_14							 = 14,
	MC_15							 = 15,
	MC_16							 = 16,
	MC_17							 = 17,
	MC_18_POTION_OF_REJUVENATION	 = 18,
	MC_19_POTION_OF_FULL_REJUVENTAION = 19,
	MC_20							 = 20,
	MC_21_RELIC_NEED_NO_TARGET		 = 21, // Scroll of Healing)\ Identify)\ Town Portal)\ Infravision)\ Phasing)\ Mana	Shield)\ Nova)\ Teleport)\ Apocalypse,
	MC_22_RELIC_NEED_TARGET			 = 22, // Scroll of Resurrect)\ Lightning)\ FireWall)\ Inferno)\ Flash)\ Flame Wave)\	Fireball)\ Stone Curse)\ Chain Lightning)\ Guardian)\ Golem,
	MC_23_STAFF						 = 23,
	MC_24_BOOKS						 = 24,
	MC_25_RINGS						 = 25,
	MC_26_AMULETS					 = 26,
	MC_27_QUEST_UNIQUE				 = 27,
	MC_28							 = 28,
	MC_29							 = 29,
	MC_30_OIL_OF_SOMETHING			 = 30, // The 10 possible oils are located at A4028 and beyond
	MC_31_OIL_OF_REPAIR_I			 = 31, // also as a seperate oil
	MC_32_OIL_OF_REPAIR_II			 = 32,
	MC_33_OIL_OF_REPAIR_III			 = 33, // also as a seperate oil
	MC_34_OIL_OF_REPAIR_IV			 = 34,
	MC_35_OIL_OF_REPAIR_V			 = 35,
	MC_36_BLACKSMITH_OIL			 = 36, // also as a seperate oil
	MC_37_OIL_OF_FORTITUDE			 = 37,
	MC_38_OIL_OF_REPAIR_VI			 = 38,
	MC_39_OIL_OF_REPAIR_VII			 = 39,
	MC_40_OIL_OF_HANDENING			 = 40,
	MC_41							 = 41,
	MC_42_MAP_OF_THE_STARS			 = 42,
	MC_43_EAR_HEART					 = 43,
	MC_44_SPECTRAL_ELIXIR			 = 44,
	MC_45							 = 45,
	MC_46_RUNES_START				 = 46,
	MC_47_RUNE_OF_FIRE				 = 47,
	MC_48_RUNE_OF_LIGHTNING			 = 48,
	MC_49_RUNE_OF_SHOCK				 = 49,
	MC_50_RUNE_OF_BLAZE				 = 50,
	MC_51_RUNE_OF_STONE				 = 51,
	MC_52_RUNES_END					 = 52,
	MC_53_AURIC_AMULET				 = 53,
	MC_54_RECONSTRUCTED_NOTE		 = 54,

	MC_55_THROW_POTION				 = 55, // flask
};
reflect_enum( MAGIC_CODE, MC_0_NONE, MC_1, MC_2_POTION_OF_FULL_HEALING, MC_3_POTION_OF_HEALING, MC_4, MC_5, MC_6_POTION_OF_MANA,
	MC_7_POTION_OF_FULL_MANA, MC_8, MC_9, MC_10_ELIXIR_OF_STRENGTH, MC_11_ELIXIR_OF_MAGIC, MC_12_ELIXIR_OF_DEXTERITY, MC_13_ELIXIR_OF_VITALITY,
	MC_14, MC_15, MC_16, MC_17, MC_18_POTION_OF_REJUVENATION, MC_19_POTION_OF_FULL_REJUVENTAION, MC_20, MC_21_RELIC_NEED_NO_TARGET,
	MC_22_RELIC_NEED_TARGET, MC_23_STAFF, MC_24_BOOKS, MC_25_RINGS, MC_26_AMULETS, MC_27_QUEST_UNIQUE, MC_28, MC_29, MC_30_OIL_OF_SOMETHING,
	MC_31_OIL_OF_REPAIR_I, MC_32_OIL_OF_REPAIR_II, MC_33_OIL_OF_REPAIR_III, MC_34_OIL_OF_REPAIR_IV, MC_35_OIL_OF_REPAIR_V, MC_36_BLACKSMITH_OIL,
	MC_37_OIL_OF_FORTITUDE, MC_38_OIL_OF_REPAIR_VI, MC_39_OIL_OF_REPAIR_VII, MC_40_OIL_OF_HANDENING, MC_41, MC_42_MAP_OF_THE_STARS,
	MC_43_EAR_HEART, MC_44_SPECTRAL_ELIXIR, MC_45, MC_46_RUNES_START, MC_47_RUNE_OF_FIRE, MC_48_RUNE_OF_LIGHTNING, MC_49_RUNE_OF_SHOCK,
	MC_50_RUNE_OF_BLAZE, MC_51_RUNE_OF_STONE, MC_52_RUNES_END, MC_53_AURIC_AMULET, MC_54_RECONSTRUCTED_NOTE );

enum DUNGEON_TYPE: char {
	DT_M1_NONE	= -1,
	DT_0_TOWN = 0,
	DT_1_CHURCH_OR_CRYPT = 1,
	DT_2_CATACOMB = 2,
	DT_3_CAVE_OR_ABYSS = 3,
	DT_4_HELL = 4,
	DT_5_CRYPT = 5,
	DT_6_ABYSS = 6,
};
reflect_enum( DUNGEON_TYPE, DT_M1_NONE, DT_0_TOWN, DT_1_CHURCH_OR_CRYPT, DT_2_CATACOMB, DT_3_CAVE_OR_ABYSS, DT_4_HELL );

enum QUEST_FLOOR: char {
	QF_M1	 = -1,
	QF_0	 = 0,
	QF_1_KING_LEORICS_TOMB	 = 1,
	QF_2_BONE_CHAMBER	 = 2,
	QF_3_THE_INFESTED_CELLAR	 = 3,
	QF_4_POISONED_WATER_SUPPLY	 = 4,
	QF_5_ARCHBISHOP_LAZARUS_LAIR	 = 5,
	QF_6_HALLS_OF_ANGUISH	 = 6,
	QF_7_ANDARIELS_THRONE	 = 7,
	QF_8_HORAZONS_HAVEN	 = 8,
	QF_9_SUMMONING_ROOMS	 = 9,
	QF_10_THE_PIT	 = 10,
	QF_11_PASSAGE_OF_FIRE	 = 11,
	QF_12_VALLEY_OF_DESPAIR	 = 12,
	QF_13_DISUSED_RELIQUARY	 = 13,
	QF_14_GLACIAL_CAVERNS	 = 14,
	QF_15_FROZEN_LOCH	 = 15,
	QF_16_ISLAND	 = 16,
	QF_17_FLESHDOOM	 = 17,
	QF_18_WIELDER	 = 18,
	QF_19_HEPHASTO	 = 19,
	QF_20	 = 20,
	QF_21	 = 21,
	QF_22	 = 22,
	QF_23	 = 23,
	QF_24	 = 24,
	QF_25_RAVENHOLM	 = 25,
};
reflect_enum( QUEST_FLOOR, QF_M1, QF_0, QF_1_KING_LEORICS_TOMB, QF_2_BONE_CHAMBER, QF_3_THE_INFESTED_CELLAR, QF_4_POISONED_WATER_SUPPLY,
	QF_5_ARCHBISHOP_LAZARUS_LAIR, QF_6_HALLS_OF_ANGUISH, QF_7_ANDARIELS_THRONE, QF_8_HORAZONS_HAVEN, QF_9_SUMMONING_ROOMS, QF_10_THE_PIT,
	QF_11_PASSAGE_OF_FIRE, QF_12_VALLEY_OF_DESPAIR, QF_13_DISUSED_RELIQUARY, QF_14_GLACIAL_CAVERNS, QF_15_FROZEN_LOCH, QF_16_ISLAND,
	QF_17_FLESHDOOM, QF_18_WIELDER, QF_19_HEPHASTO, QF_20, QF_21, QF_22, QF_23, QF_24, QF_25_RAVENHOLM );

enum QUEST: char {
	//Q_NO = -1,
	Q_0_THE_MAGIC_ROCK  = 0,
	Q_1_BLACK_MUSHROOM  = 1,
	Q_2_GHARBAD_THE_WEAK  = 2,
	Q_3_ZHAR_THE_MAD  = 3,
	Q_4_LACHDANAN  = 4,
	Q_5_DIABLO  = 5,
	Q_6_THE_BUTCHER  = 6,
	Q_7_OGDENS_SIGN  = 7,
	Q_8_HALLS_OF_THE_BLIND  = 8,
	Q_9_VALOR  = 9,
	Q_10_ANVIL_OF_FURY  = 10,
	Q_11_WARLORD_OF_BLOOD  = 11,
	Q_12_THE_CURSE_OF_KING_LEORIC  = 12,
	Q_13_POISONED_WATER_SUPPLY  = 13,
	Q_14_THE_CHAMBER_OF_BONE  = 14,
	Q_15_ARCHBISHOP_LAZARUS  = 15,
	Q_16_HORAZON_S_DEMONS  = 16,
	Q_17_IZUAL  = 17,
	Q_18_LITTLE_GIRL  = 18,
	Q_19_LOST_TREASURE  = 19,
	Q_20_ISLAND  = 20,
	Q_21_FLESHDOOM  = 21,
	Q_22_MAIDEN_OF_ANGUISH  = 22,
	Q_23_THE_LAIR  = 23,
	Quest_24_Count
};
reflect_enum( QUEST, Q_0_THE_MAGIC_ROCK, Q_1_BLACK_MUSHROOM, Q_2_GHARBAD_THE_WEAK, Q_3_ZHAR_THE_MAD, Q_4_LACHDANAN, Q_5_DIABLO,
	Q_6_THE_BUTCHER, Q_7_OGDENS_SIGN, Q_8_HALLS_OF_THE_BLIND, Q_9_VALOR, Q_10_ANVIL_OF_FURY, Q_11_WARLORD_OF_BLOOD, Q_12_THE_CURSE_OF_KING_LEORIC,
	Q_13_POISONED_WATER_SUPPLY, Q_14_THE_CHAMBER_OF_BONE, Q_15_ARCHBISHOP_LAZARUS, Q_16_HORAZON_S_DEMONS, Q_17_IZUAL, Q_18_LITTLE_GIRL,
	Q_19_LOST_TREASURE, Q_20_ISLAND, Q_21_FLESHDOOM, Q_22_MAIDEN_OF_ANGUISH, Q_23_THE_LAIR );

enum OPEN_STATE
{
	OS_0_CLOSED = 0,
	OS_1_OPEN = 1,
	OS_2_BLOCKED = 2,
};

enum BASE_OBSECT_SPRITE: uchar {
	BOS_0_L1BRAZ = 0,
	BOS_1_L1DOORS = 1,
	BOS_2_LEVER = 2,
	BOS_3_CHEST1 = 3,
	BOS_4_CHEST2 = 4,
	BOS_5_BANNER = 5,
	BOS_6_SKULPILE = 6,
	BOS_7_SKULFIRE = 7,
	BOS_8_SKULSTIK = 8,
	BOS_9_CRUXSK1 = 9,
	BOS_10_CRUXSK2 = 10,
	BOS_11_CRUXSK3 = 11,
	BOS_12_BOOK1 = 12,
	BOS_13_BOOK2 = 13,
	BOS_14_ROCKSTAN = 14,
	BOS_15_ANGEL = 15,
	BOS_16_CHEST3 = 16,
	BOS_17_BURNCROS = 17,
	BOS_18_CANDLE2 = 18,
	BOS_19_NUDE2 = 19,
	BOS_20_SWITCH4 = 20,
	BOS_21_TNUDEM = 21,
	BOS_22_TNUDEW = 22,
	BOS_23_TSOUL = 23,
	BOS_24_L2DOORS = 24,
	BOS_25_WTORCH4 = 25,
	BOS_26_WTORCH3 = 26,
	BOS_27_SARC = 27,
	BOS_28_FLAME1 = 28,
	BOS_29_PRSRPLT1 = 29,
	BOS_30_TRAPHOLE = 30,
	BOS_31_MINIWATR = 31,
	BOS_32_WTORCH2 = 32,
	BOS_33_WTORCH1 = 33,
	BOS_34_BCASE = 34,
	BOS_35_BSHELF = 35,
	BOS_36_WEAPSTND = 36,
	BOS_37_BARREL = 37,
	BOS_38_BARRELEX = 38,
	BOS_39_LSHRINEG = 39,
	BOS_40_RSHRINEG = 40,
	BOS_41_BLOODFNT = 41,
	BOS_42_DECAP = 42,
	BOS_43_PEDISTL = 43,
	BOS_44_L3DOORS = 44,
	BOS_45_PFOUNTN = 45,
	BOS_46_ARMSTAND = 46,
	BOS_47_GOATSHRN = 47,
	BOS_48_CAULDREN = 48,
	BOS_49_MFOUNTN = 49,
	BOS_50_TFOUNTN = 50,
	BOS_51_ALTBOY = 51,
	BOS_52_MCIRL = 52,
	BOS_53_BKSLBRNT = 53,
	BOS_54_MUSHPTCH = 54,
	BOS_55_LZSTAND = 55,
	BOS_56_HELLFORGE = 56,
};
reflect_enum( BASE_OBSECT_SPRITE,  
	BOS_0_L1BRAZ, BOS_1_L1DOORS, BOS_2_LEVER, BOS_3_CHEST1, BOS_4_CHEST2, BOS_5_BANNER, BOS_6_SKULPILE, BOS_7_SKULFIRE, BOS_8_SKULSTIK, 
	BOS_9_CRUXSK1, BOS_10_CRUXSK2, BOS_11_CRUXSK3, BOS_12_BOOK1, BOS_13_BOOK2, BOS_14_ROCKSTAN, BOS_15_ANGEL, BOS_16_CHEST3, 
	BOS_17_BURNCROS, BOS_18_CANDLE2, BOS_19_NUDE2, BOS_20_SWITCH4, BOS_21_TNUDEM, BOS_22_TNUDEW, BOS_23_TSOUL, BOS_24_L2DOORS, 
	BOS_25_WTORCH4, BOS_26_WTORCH3, BOS_27_SARC, BOS_28_FLAME1, BOS_29_PRSRPLT1, BOS_30_TRAPHOLE, BOS_31_MINIWATR, BOS_32_WTORCH2, 
	BOS_33_WTORCH1, BOS_34_BCASE, BOS_35_BSHELF, BOS_36_WEAPSTND, BOS_37_BARREL, BOS_38_BARRELEX, BOS_39_LSHRINEG, BOS_40_RSHRINEG, 
	BOS_41_BLOODFNT, BOS_42_DECAP, BOS_43_PEDISTL, BOS_44_L3DOORS, BOS_45_PFOUNTN, BOS_46_ARMSTAND, BOS_47_GOATSHRN, BOS_48_CAULDREN, 
	BOS_49_MFOUNTN, BOS_50_TFOUNTN, BOS_51_ALTBOY, BOS_52_MCIRL, BOS_53_BKSLBRNT, BOS_54_MUSHPTCH, BOS_55_LZSTAND, BOS_56_HELLFORGE
);

enum BASE_OBJECT: int
{
	BO_NONE = -1,
	BO_0_L1BRAZ = 0,
	BO_1_CHURCH_DOOR_MAIN_DIAGONAL = 1,
	BO_2_CHURCH_DOOR_COLLATERAL_DIAGONAL = 2,
	BO_3_TORCH = 3,
	BO_4_LEVER = 4,
	BO_5_SMALL_CHEST = 5,
	BO_6_CHEST = 6,
	BO_7_LARGE_CHEST = 7,
	BO_8_L1BRAZ = 8,
	BO_9_CANDLE2 = 9,
	BO_10_L1BRAZ = 10,
	BO_11_BANNER = 11,
	BO_12_BANNER = 12,
	BO_13_BANNER = 13,
	BO_14_SKULPILE = 14,
	BO_15_L1BRAZ = 15,
	BO_16_L1BRAZ = 16,
	BO_17_L1BRAZ = 17,
	BO_18_L1BRAZ = 18,
	BO_19_L1BRAZ = 19,
	BO_20_CRUCIFIED_SKELETON = 20,
	BO_21_CRUCIFIED_SKELETON_2 = 21,
	BO_22_CRUCIFIED_SKELETON_3 = 22,
	BO_23_MAGIC_ROCK_TABLE = 23,
	BO_24_ANGEL = 24,
	BO_25_ANCIENT_TOME_OR_BOOK_OF_VILENESS = 25,
	BO_26_BURNCROS = 26,
	BO_27_NUDE2 = 27,
	BO_28_SKULL_LEVER = 28,
	BO_29_BURNCROS = 29,
	BO_30_TNUDEM = 30,
	BO_31_TNUDEM = 31,
	BO_32_TNUDEM = 32,
	BO_33_TNUDEW = 33,
	BO_34_TNUDEW = 34,
	BO_35_TNUDEW = 35,
	BO_36_TSOUL = 36,
	BO_37_TSOUL = 37,
	BO_38_TSOUL = 38,
	BO_39_TSOUL = 39,
	BO_40_TSOUL = 40,
	BO_41_MYTHICAL_BOOK = 41,
	BO_42_CATACOMB_DOOR_MAIN_DIAGONAL = 42,
	BO_43_CATACOMB_DOOR_COLLATERAL_DIAGONAL = 43,
	BO_44_WTORCH4 = 44,
	BO_45_WTORCH3 = 45,
	BO_46_WTORCH1 = 46,
	BO_47_WTORCH2 = 47,
	BO_48_SARCOPHAGUS = 48,
	BO_49_FLAME1 = 49,
	BO_50_LEVER_2 = 50,
	BO_51_MINIWATR = 51,
	BO_52_BOOK1 = 52,
	BO_53_WALL_TRAP_FIRES_IN_ROW = 53,
	BO_54_WALL_TRAP_FIRES_IN_COL = 54,
	BO_55_BOOKSHELF = 55,
	BO_56_WEAPSTND = 56,
	BO_57_POD_URN_BARREL_WITH_DROP = 57,
	BO_58_POD_URN_BARREL_EXPLOSIVE = 58,
	BO_59_SHRINE = 59,
	BO_60_SHRINE_2 = 60,
	BO_61_ANCIENT_TOME = 61,
	BO_62_BOOKCASE = 62,
	BO_63_BOOKCASE_2 = 63,
	BO_64_LIBRARY_BOOK = 64,
	BO_65_CANDLE2 = 65,
	BO_66_BLOOD_FOUNTAIN = 66,
	BO_67_DECAPITATED_BODY = 67,
	BO_68_TRAPED_SMALL_CHEST = BO_5_SMALL_CHEST + BO_67_DECAPITATED_BODY - BO_5_SMALL_CHEST + 1,
	BO_69_TRAPED_CHEST = 	   BO_6_CHEST + BO_68_TRAPED_SMALL_CHEST - BO_5_SMALL_CHEST,
	BO_70_TRAPED_LARGE_CHEST = BO_7_LARGE_CHEST + BO_68_TRAPED_SMALL_CHEST - BO_5_SMALL_CHEST,
	BO_71_BOOK_OF_THE_BLIND = 71,
	BO_72_BOOK_OF_BLOOD = 72,
	BO_73_PEDESTAL_OF_BLOOD = 73,
	BO_74_CAVE_DOOR_MAIN_DIAGONAL = 74,
	BO_75_CAVE_DOOR_COLLATERAL_DIAGONAL = 75,
	BO_76_PURIFYING_SPRING = 76,
	BO_77_ARMOR = 77,
	BO_78_ARMSTAND = 78,
	BO_79_GOAT_SHRINE = 79,
	BO_80_CAULDRON = 80,
	BO_81_MURKY_POOL = 81,
	BO_82_FOUNTAIN_OF_TEARS = 82,
	BO_83_ALTBOY = 83,
	BO_84_MCIRL = 84,
	BO_85_MCIRL = 85,
	BO_86_QUEST_BOOK = 86,
	BO_87_ON_FLOAR_TORCH = 87,
	BO_88_STEEL_TOME = 88,
	BO_89_ARMOR_2 = 89,
	BO_90_WEAPON_RACK = 90,
	BO_91_BURNCROS = 91,
	BO_92_WEAPON_RACK_2 = 92,
	BO_93_WEAPSTND = 93,
	BO_94_MUSHROOM_PATCH = 94,
	BO_95_VILE_STAND = 95,
	BO_96_SLAIN_HERO = 96,
	BO_97_OGDEN_CHEST = 97,
	BO_98_HELLFORGE = 98,
};
reflect_enum( BASE_OBJECT,
	BO_NONE, BO_0_L1BRAZ, BO_1_CHURCH_DOOR_MAIN_DIAGONAL, BO_2_CHURCH_DOOR_COLLATERAL_DIAGONAL, BO_3_TORCH, BO_4_LEVER, BO_5_SMALL_CHEST,
	BO_6_CHEST, BO_7_LARGE_CHEST, BO_8_L1BRAZ, BO_9_CANDLE2, BO_10_L1BRAZ, BO_11_BANNER, BO_12_BANNER, BO_13_BANNER, BO_14_SKULPILE,
	BO_15_L1BRAZ, BO_16_L1BRAZ, BO_17_L1BRAZ, BO_18_L1BRAZ, BO_19_L1BRAZ, BO_20_CRUCIFIED_SKELETON, BO_21_CRUCIFIED_SKELETON_2,
	BO_22_CRUCIFIED_SKELETON_3, BO_23_MAGIC_ROCK_TABLE, BO_24_ANGEL, BO_25_ANCIENT_TOME_OR_BOOK_OF_VILENESS, BO_26_BURNCROS,
	BO_27_NUDE2, BO_28_SKULL_LEVER, BO_29_BURNCROS, BO_30_TNUDEM, BO_31_TNUDEM, BO_32_TNUDEM, BO_33_TNUDEW, BO_34_TNUDEW, BO_35_TNUDEW,
	BO_36_TSOUL, BO_37_TSOUL, BO_38_TSOUL, BO_39_TSOUL, BO_40_TSOUL, BO_41_MYTHICAL_BOOK, BO_42_CATACOMB_DOOR_MAIN_DIAGONAL,
	BO_43_CATACOMB_DOOR_COLLATERAL_DIAGONAL, BO_44_WTORCH4, BO_45_WTORCH3, BO_46_WTORCH1, BO_47_WTORCH2, BO_48_SARCOPHAGUS, BO_49_FLAME1,
	BO_50_LEVER_2, BO_51_MINIWATR, BO_52_BOOK1, BO_53_WALL_TRAP_FIRES_IN_ROW, BO_54_WALL_TRAP_FIRES_IN_COL, BO_55_BOOKSHELF,
	BO_56_WEAPSTND, BO_57_POD_URN_BARREL_WITH_DROP, BO_58_POD_URN_BARREL_EXPLOSIVE, BO_59_SHRINE, BO_60_SHRINE_2, BO_61_ANCIENT_TOME,
	BO_62_BOOKCASE, BO_63_BOOKCASE_2, BO_64_LIBRARY_BOOK, BO_65_CANDLE2, BO_66_BLOOD_FOUNTAIN, BO_67_DECAPITATED_BODY, BO_68_TRAPED_SMALL_CHEST,
	BO_69_TRAPED_CHEST, BO_70_TRAPED_LARGE_CHEST, BO_71_BOOK_OF_THE_BLIND, BO_72_BOOK_OF_BLOOD, BO_73_PEDESTAL_OF_BLOOD, BO_74_CAVE_DOOR_MAIN_DIAGONAL,
	BO_75_CAVE_DOOR_COLLATERAL_DIAGONAL, BO_76_PURIFYING_SPRING, BO_77_ARMOR, BO_78_ARMSTAND, BO_79_GOAT_SHRINE, BO_80_CAULDRON,
	BO_81_MURKY_POOL, BO_82_FOUNTAIN_OF_TEARS, BO_83_ALTBOY, BO_84_MCIRL, BO_85_MCIRL, BO_86_QUEST_BOOK, BO_87_ON_FLOAR_TORCH,
	BO_88_STEEL_TOME, BO_89_ARMOR_2, BO_90_WEAPON_RACK, BO_91_BURNCROS, BO_92_WEAPON_RACK_2, BO_93_WEAPSTND, BO_94_MUSHROOM_PATCH,
	BO_95_VILE_STAND, BO_96_SLAIN_HERO, BO_97_OGDEN_CHEST, BO_98_HELLFORGE
);

enum LAZARUS_QUEST_STATUS
{
	LQS_0 = 0,
	LQS_1 = 1,
	LQS_2_GIVE_LAZARUS_STAFF_TO_CAIN = 2,
	LQS_3_MAKE_PORTAL_TO_UNHOLY_ALTAR = 3,
	LQS_4_READ_BOOK_IN_UNHOLY_ALTAR = 4,
	LQS_5_TALK_WITH_LAZARUS = 5,
	LQS_6_FIGHT_WITH_LAZARUS = 6,
	LQS_7_LAZARUS_DEAD = 7,
	LQS_8 = 8,
};

enum LAZARUS_QUEST_ADDITIONAL_STATUS
{
	LQAS_0 = 0,
	LQAS_1 = 1,
	LQAS_2 = 2,
	LQAS_3 = 3,
	LQAS_4 = 4,
};

enum QUEST_STATUS
{
	QS_0_NO = 0,
	QS_1_ACCEPT = 1,
	QS_2_IN_PROGRESS = 2,
	QS_3_COMPLETE = 3,
	QS_7 = 7,
	QS_8 = 8,
	QS_9 = 9,
	QS_10 = 10,
};

enum TOWNER_IDENTIFICATOR
{
	TI_0_GRISWOLD =  0,
	TI_1_PEPIN =  1,
	TI_2_WOUNDED_GUY =  2,
	TI_3_OGDEN =  3,
	TI_4_CAIN =  4,
	TI_5_FARNHAM =  5,
	TI_6_ADRIA =  6,
	TI_7_GILIAN =  7,
	TI_8_WIRT =  8,
	TI_9_COWS =  9,
	TI_10_LESTER =  10,
	TI_11_CELIA =  11,
	TI_12_NUT =  12,
	TI_13_TREMAIN =  13,
	TI_14_COUNT =  14,
};

enum PLAYER_CLASS : char
{
	PC_0_PALADIN = 0,
	PC_1_SCOUT = 1,
	PC_2_MAGE = 2,
	PC_3_MONK = 3,
	PC_4_ASSASSIN = 4,
	PC_5_GLADIATOR = 5,
	PC_COUNT
};
reflect_enum( PLAYER_CLASS, PC_0_PALADIN, PC_1_SCOUT, PC_2_MAGE, PC_3_MONK, PC_4_ASSASSIN, PC_5_GLADIATOR );

enum PLAYER_ANIM_WEAPON
{
	PAW_0_NONE			= 0, // 'N' None ( Without Shield )
	PAW_1_SHIELD		= 1, // 'U' Unweild ( Shield )
	PAW_2_SWORD			= 2, // 'S' Sword ( Without Shield ), Barbarian Dual Sword
	PAW_3_SWORD_SHIELD	= 3, // 'D' Dual ( Sword + Shield )
	PAW_4_BOW			= 4, // 'B' Bow
	PAW_5_AXE			= 5, // 'A' Axe ( Only Double Hand )
	PAW_6_MACE			= 6, // 'M' Mace ( Without Shield ), Barbarian Dual Mace
	PAW_7_MACE_SHIELD	= 7, // 'H' Hammer ( Mace + Shield )
	PAW_8_STAFF			= 8, // 'T' Twig ( Staff Double Hand )
	PAW_9_STAFF_SHIELD	= 9, // 'H' Hammer ( One Hand Wand + Shield )
};

enum PLAYER_ANIM_FLAG
{
	PAF_1_STAY		 = BIT(1),
	PAF_2_WALK		 = BIT(2),
	PAF_4_ATTACK	 = BIT(3),
	PAF_8_GOT_HIT	 = BIT(4),
	PAF_16_LIGHT_CAST= BIT(5),
	PAF_32_FIRE_CAST = BIT(6),
	PAF_64_MAGIC_CAST= BIT(7),
	PAF_128_DEATH	 = BIT(8),
	PAF_256_BLOCK	 = BIT(9),
};

enum MONSTER_CLASS : int
{
	MON_0_UNDEAD = 0,
	MON_1_DEMON = 1,
	MON_2_BEAST = 2,
	MON_SPICIES
};

enum SOUND_FLAG: uchar
{
	SF_1_SOLO				 = BIT(1),// похоже из всех звуков с этим флагом может одновременно играть только один
	SF_2_MIX				 = BIT(2),// из звуков с этим флагом могут играть сразу несколько
	SF_4_MENU				 = BIT(3),
	SF_8_MONK				 = BIT(4),
	SF_16_SCOUT_ASSASIN		 = BIT(5),
	SF_32_PAL_GLAD			 = BIT(6),
	SF_64_MAGE				 = BIT(7),
	SF_9_MONK_SOLO			 = SF_8_MONK | SF_1_SOLO,
	SF_17_SCOUT_ASSASIN_SOLO = SF_16_SCOUT_ASSASIN | SF_1_SOLO,
	SF_33_PAL_GLAD_SOLO		 = SF_32_PAL_GLAD | SF_1_SOLO,
	SF_65_MAGE_SOLO			 = SF_64_MAGE | SF_1_SOLO,
	SF_75_MAGE_MONK_SOLO_MIX = SF_64_MAGE | SF_8_MONK | SF_2_MIX | SF_1_SOLO,
	SF_78_MAGE_MONK_MENU_MIX = SF_64_MAGE | SF_8_MONK | SF_4_MENU | SF_2_MIX,
	SF_80_MAGE_SCOUT_ASSASIN = SF_64_MAGE | SF_16_SCOUT_ASSASIN,
	SF_120_PLAYERS			 = SF_8_MONK | SF_16_SCOUT_ASSASIN | SF_32_PAL_GLAD | SF_64_MAGE,
};
reflect_enum( SOUND_FLAG, SF_1_SOLO, SF_2_MIX, SF_4_MENU, SF_8_MONK, SF_16_SCOUT_ASSASIN,
	SF_32_PAL_GLAD, SF_64_MAGE, SF_9_MONK_SOLO, SF_17_SCOUT_ASSASIN_SOLO, SF_33_PAL_GLAD_SOLO,
	SF_65_MAGE_SOLO, SF_75_MAGE_MONK_SOLO_MIX, SF_78_MAGE_MONK_MENU_MIX, SF_80_MAGE_SCOUT_ASSASIN, SF_120_PLAYERS );

enum PLAYER_VOICE
{
	PLAYER_VOICE_NO_REQ_ITEM = 0,
	PLAYER_VOICE_NO_SPELL_CHANGED = 1,
	PLAYER_VOICE_SPELL_DISABLE_IN_TOWN = 2,
	PLAYER_VOICE_WITH_SPELL_TYPE = 3,
	PLAYER_VOICE_NO_ROOM = 4,
};

enum ACTION
{
	A_0_STAY			=  0,
	A_1_WALK_UP		=  1, // walk up
	A_2_WALK_DOWN		=  2, // walk down
	A_3_WALK_HORIZ	=  3, // walk horizontal
	A_4_MELEE			=  4,
	A_5_GET_HIT		=  5,
	A_6_HIT_TO_DEATH	=  6,
	A_7_SECOND		=  7, // second attack 1
	A_8_SECOND_2		=  8, // second attack 2
	A_9_SECOND_3		=  9, // second attack 3
	A_10_RANGED		= 10, 
	A_11_SECOND_4		= 11, // second attack 4
	A_12_RANGED_2		= 12, // second ranged attack
	A_13_JUMP			= 13,
	A_14_RUN_ATTACK	= 14,
	A_15_STONE_CURSED	= 15, 
	A_16_STONE		= 16,
	A_17_WAIT_TALK	= 17,
};

enum ANIM
{
	ANIM_0_STAY	= 0, //   8 
	ANIM_1_WALK	= 1, //  52 
	ANIM_2_ATTACK	= 2, //  96 
	ANIM_3_HIT	= 3, // 140 
	ANIM_4_DIE	= 4, // 184 
	ANIM_5_SECOND	= 5, // 228 
};

enum CASTER_TYPE
{
	CT_M1_MAP_OBJECT = -1,
	CT_0_PLAYER = 0,
	CT_1_MONSTER_AND_TRAP = 1,
	CT_2_WALL = 2,
};

enum DIFFICULT_LEVEL
{
	DL_0_HORROR = 0,
	DL_1_PURGATORY = 1,
	DL_2_DOOM = 2,
};

enum GAME_MESSAGES 
{
	GM_1026_GOING_NEXT_DUNGEON = 1026,
	GM_1027_GOING_PREV_DUNGEON = 1027,
	GM_1028_GOING_FROM_QUEST_DUNGEON = 1028,
	GM_1029_MAYBE_GOING_TO_QUEST_DUNGEON = 1029,
	GM_1030_GOING_TO_TOWN_WITH_PORTAL = 1030,
	GM_1031_GOING_TO_DUNGEON = 1031,
	GM_1032_GOING_TO_TOWN = 1032,
	GM_1033_RESTART_IN_TOWN = 1033,
	GM_1034_START_NEW_GAME = 1034,
	GM_1035_LOAD_GAME = 1035,
};

enum BASE_ITEM: int {
	//BI_m1_NOITEM					 = -1,
	BI_0_GOLD						 = 0,
	BI_1_SHORT_KNIFE				 = 1,
	BI_2_BUCKLER					 = 2,
	BI_3_BONE						 = 3,
	BI_4_SMALL_BOW					 = 4,
	BI_5_WAND_OF_HOLY_BOLTS			 = 5,
	BI_6_HATCHET					 = 6,
	BI_7_BALANCED_AXE				 = 7,
	BI_8_HEAVY_AXE					 = 8,
	BI_9_MAGIC_ROCK					 = 9,
	BI_10_POWER_SHIELD				 = 10,
	BI_11_GUARDIAN_HELM				 = 11,
	BI_12_HORNED_BARBUTE			 = 12,
	BI_13_FULL_LENGTH_SCALEMAIL		 = 13,
	BI_14_SKULL_CROWN				 = 14,
	BI_15_LIGHT_HELMET				 = 15,
	BI_16_ANVIL_OF_FURY				 = 16,
	BI_17_HUGE_AXE					 = 17,
	BI_18_HEAVY_BONE				 = 18,
	BI_19_FUNGAL_TOME				 = 19,
	BI_20_SPECTRAL_ELIXIR			 = 20,
	BI_21_FULL_SHIELD				 = 21,
	BI_22_CRYPT_MAP					 = 22,
	BI_23_HEART						 = 23,
	BI_24_POTION_OF_HEALING			 = 24,
	BI_25_POTION_OF_MANA			 = 25,
	BI_26_RELICT_OF_MANA_SHIELD		 = 26,
	BI_27_RELICT_OF_TOWN_PORTAL		 = 27,
	BI_28_FULL_CROWN				 = 28,
	BI_29_POTION_OF_FULL_HEALING	 = 29,
	BI_30_POTION_OF_FULL_MANA		 = 30,
	BI_31_FLAT_AXE					 = 31,
	BI_32_POLE_AXE					 = 32,
	BI_33_STAFF_OF_LAZARUS			 = 33,
	BI_34_KABUTO_HELM				 = 34,
	BI_35_BLACKSMITH_OIL			 = 35,
	BI_36_CLUB						 = 36,
	BI_37_SLIM_BLADE				 = 37,
	BI_38_DAGGER					 = 38,
	BI_39_RUNE_BOMB_OPENS_ABYSS		 = 39,
	BI_40_SKULL_CAP					 = 40,
	BI_41_CIRCLET					 = 41,
	BI_42_LIGHT_CANE				 = 42,
	BI_43_LARGE_MACE				 = 43,
	BI_44_WAR_MACE					 = 44,
	BI_45_SCALE_PLATE				 = 45,
	BI_46_BONE_MACE					 = 46,
	BI_47_BLUDGEON					 = 47,
	BI_48_LEATHER_CAP				 = 48,
	BI_49_STEEL_CAP					 = 49,
	BI_50_BATTLE_HELMET				 = 50,
	BI_51_FULL_HELM					 = 51,
	BI_52_CROWN						 = 52,
	BI_53_CENTURION_HELMET			 = 53,
	BI_54_CAPE						 = 54,
	BI_55_RAGS						 = 55,
	BI_56_CLOAK						 = 56,
	BI_57_ROBE						 = 57,
	BI_58_QUILTED_ARMOR				 = 58,
	BI_59_LEATHER_ARMOR				 = 59,
	BI_60_HARD_LEATHER_ARMOR		 = 60,
	BI_61_STUDDED_LEATHER_ARMOR		 = 61,
	BI_62_RING_MAIL					 = 62,
	BI_63_CHAIN_MAIL				 = 63,
	BI_64_SCALE_MAIL				 = 64,
	BI_65_BREAST_PLATE				 = 65,
	BI_66_SPLINT_MAIL				 = 66,
	BI_67_PLATE_MAIL				 = 67,
	BI_68_THICK_LEATHER_ARMOR		 = 68,
	BI_69_GOTHIC_PLATE_MAIL			 = 69,
	BI_70_FULL_PLATE_MAIL			 = 70,
	BI_71_TARGE						 = 71,
	BI_72_GRIFFIN_SHIELD			 = 72,
	BI_73_CHAOS_SHIELD				 = 73,
	BI_74_KITE_SHIELD				 = 74,
	BI_75_TOWER_SHIELD				 = 75,
	BI_76_GOTHIC_SHIELD				 = 76,
	BI_77_POTION_OF_HEALING			 = 77,
	BI_78_POTION_OF_FULL_HEALING	 = 78,
	BI_79_POTION_OF_MANA			 = 79,
	BI_80_POTION_OF_FULL_MANA		 = 80,
	BI_81_WEIGHTED_SWORD			 = 81,
	BI_82_WEIGHTED_SHIELD			 = 82,
	BI_83_OIL_OF_HARDENING			 = 83,
	BI_84_SCALED_CUIRASS			 = 84,
	BI_85_THIN_PLATE_MAIL			 = 85,
	BI_86_COMBAT_AXE				 = 86,
	BI_87_ELIXIR_OF_STRENGTH		 = 87,
	BI_88_ELIXIR_OF_MAGIC			 = 88,
	BI_89_ELIXIR_OF_DEXTERITY		 = 89,
	BI_90_ELIXIR_OF_VITALITY		 = 90,
	BI_91_CURVED_SWORD				 = 91,
	BI_92_BATTLE_SWORD				 = 92,
	BI_93_BATTLE_HAMMER				 = 93,
	BI_94_RELICT_OF_SEEING			 = 94,
	BI_95_DOUBLE_BLADED_STAFF		 = 95,
	BI_96_GREAT_SWORD				 = 96,
	BI_97_HUGE_SWORD				 = 97,
	BI_98_RELICT_OF_TOWN_PORTAL		 = 98,
	BI_99_KATANA					 = 99,
	BI_100_SPIKED_HAMMER			 = 100,
	BI_101_BRUTE_SWORD				 = 101,
	BI_102_HEAVY_MACE				 = 102,
	BI_103_TRIPLE_FLAIL				 = 103,
	BI_104_HUGE_MACE				 = 104,
	BI_105_LINKED_MAIL				 = 105,
	BI_106_BARBARIC_ARMOR			 = 106,
	BI_107_THICK_MAIL				 = 107,
	BI_108_KERIS					 = 108,
	BI_109_GLADIUS					 = 109,
	BI_110_TUNIC					 = 110,
	BI_111_DIRK						 = 111,
	BI_112_THORN_SWORD				 = 112,
	BI_113_THICK_CLOAK				 = 113,
	BI_114_BOOK_OF_					 = 114,
	BI_115_BOOK_OF_					 = 115,
	BI_116_BOOK_OF_					 = 116,
	BI_117_BOOK_OF_					 = 117,
	BI_118_HEAVY_DAGGER				 = 118,
	BI_119_BLADE					 = 119,
	BI_120_FALCHION					 = 120,
	BI_121_SCIMITAR					 = 121,
	BI_122_CLAYMORE					 = 122,
	BI_123_KNIFE					 = 123,
	BI_124_SABRE					 = 124,
	BI_125_LONG_SWORD				 = 125,
	BI_126_BROAD_SWORD				 = 126,
	BI_127_BASTARD_SWORD			 = 127,
	BI_128_BARBARIC_SWORD			 = 128,
	BI_129_WAKIZASHI				 = 129,
	BI_130_SMALL_AXE				 = 130,
	BI_131_BROAD_AXE				 = 131,
	BI_132_LARGE_AXE				 = 132,
	BI_133_CLEAVER					 = 133,
	BI_134_BATTLE_AXE				 = 134,
	BI_135_GREAT_AXE				 = 135,
	BI_136_MACE						 = 136,
	BI_137_MORNING_STAR				 = 137,
	BI_138_WAR_HAMMER				 = 138,
	BI_139_SPIKED_CLUB				 = 139,
	BI_140_HEAVY_CLUB				 = 140,
	BI_141_HEAVY_FLAIL				 = 141,
	BI_142_MAUL						 = 142,
	BI_143_SHORT_BOW				 = 143,
	BI_144_OAK_BOW					 = 144,
	BI_145_REFLEX_BOW				 = 145,
	BI_146_COMPOSITE_BOW			 = 146,
	BI_147_SHORT_BATTLE_BOW			 = 147,
	BI_148_LONG_BATTLE_BOW			 = 148,
	BI_149_SHORT_WAR_BOW			 = 149,
	BI_150_LONG_WAR_BOW				 = 150,
	BI_151_LIGHT_STAFF				 = 151,
	BI_152_LONG_STAFF				 = 152,
	BI_153_COMPOSITE_STAFF			 = 153,
	BI_154_BLADED_STAFF				 = 154,
	BI_155_WAR_STAFF				 = 155,
	BI_156_RING						 = 156,
	BI_157_BANGLE					 = 157,
	BI_158_BANGLE					 = 158,
	BI_159_AMULET					 = 159,
	BI_160_COLLAR					 = 160,
	BI_161_CROSSBOW					 = 161,
	BI_162_TIGHT_WAR_BOW			 = 162,
	BI_163_LONG_HEAVY_BOW			 = 163,
	BI_164_ELITE_BOW				 = 164,
	BI_165_TIGHT_BOW				 = 165,
	BI_166_THICK_PLATE_MAIL			 = 166,
	BI_167_GOTHIC_AXE				 = 167,
	BI_168_SHAMAN_S_CAPE			 = 168,
	BI_169_WIZARD_S_ROBE			 = 169,
	BI_170_ACOLYTE_S_MAIL			 = 170,
	BI_171_APPRENTICE_S_MAIL		 = 171,
	BI_172_ADVOCATE_S_PLATE			 = 172,
	BI_173_SORCEROR_S_PLATE			 = 173,
	BI_174_GREAT_PLATE_MAIL			 = 174,
	BI_175_PLATE_CORSELET			 = 175,
	BI_176_PIGFACE_BASCINET			 = 176,
	BI_177_ARMET					 = 177,
	BI_178_HERALDIC_SHIELD			 = 178,
	BI_179_BALANCED_PLATE_MAIL		 = 179,
	BI_180_PRECISION_BOW			 = 180,
	BI_181_GOTHIC_SALLET			 = 181,
	BI_182_RUNE_OF_BLAZE			 = 182,
	BI_183_RUNE_OF_SHOCK			 = 183,
	BI_184_RELICT_OF_WARP			 = 184,
	BI_185_BRIGANDINE				 = 185,
	BI_186_NAGINATA					 = 186,
	BI_187_RELICT_OF_IDENTIFY		 = 187,
	BI_188_RELICT_OF_FURY			 = 188,
	BI_189_HEAVY_CROSSBOW			 = 189,
	BI_190_ROD_OF_BLOOD_SHAMAN		 = 190,
	BI_191_SCUTUM					 = 191,
	BI_192_HOLY_WATER				 = 192,
	BI_193_FULL_HOLY_WATER			 = 193,
	BI_194_RING						 = 194,
	BI_195_MASK						 = 195,
	BI_196_AMULET					 = 196,
	BI_197_BANGLE					 = 197,
	BI_198_BANGLE					 = 198,
	BI_199_ALPHA_MASK				 = 199,
	BI_200_WANDERER_S_CLOAK			 = 200,
	BI_201_EMBOSSED_LEATHER_ARMOR	 = 201,
	BI_202_FIELD_MAIL				 = 202,
	BI_203_BATTLE_MAIL				 = 203,
	BI_204_BATTLE_PLATE				 = 204,
	BI_205_SLAYER_S_PLATE			 = 205,
	BI_206_ASSASSIN_S_PLATE			 = 206,
	BI_207_BATTLE_CROSSBOW			 = 207,
	BI_208_WAR_CROSSBOW				 = 208,
	BI_209_ETHEREAL_BOW				 = 209,
	BI_210_GREAT_MAUL				 = 210,
	BI_211_RELICT_OF_IDENTIFY		 = 211,
	BI_212_RELICT_OF_APOCALYPSE		 = 212,
	BI_213_RELICT_OF_STONE_CURSE	 = 213,
	BI_214_RELICT_OF_HEALING		 = 214,
	BI_215_RELICT_OF_MANA			 = 215,
	BI_216_RELICT_OF_REFLECT		 = 216,
	BI_217_RELICT_OF_TELEKINESIS	 = 217,
	BI_218_WAR_BLADE				 = 218,
	BI_219_BATTLE_MACE				 = 219,
	BI_220_RUNE_BLADE				 = 220,
	BI_221_HUGE_FLAIL				 = 221,
	BI_222_WAR_SALLET				 = 222,
	BI_223_DUAL_SWORD				 = 223,
	BI_224_WAND						 = 224,
	BI_225_BOOK_OF_					 = 225,
	BI_226_BOOK_OF_					 = 226,
	BI_227_BOOK_OF_					 = 227,
	BI_228_BOOK_OF_					 = 228,
	BI_229_WOOD_SHIELD				 = 229,
	BI_230_LINKED_PLATE				 = 230,
	BI_231_VISORED_HELMET			 = 231,
	BI_232_LIGHT_BOW				 = 232,
	BI_233_CRUDE_BOW				 = 233,
	BI_234_LONG_BOW					 = 234,
	BI_235_POTION_OF_HEALING		 = 235,
	BI_236_POTION_OF_HEALING		 = 236,
	BI_237_POTION_OF_MANA			 = 237,
	BI_238_POTION_OF_MANA			 = 238,
	BI_239_OIL_OF_REPAIR_III		 = 239,
	BI_240_STILETTO					 = 240,
	BI_241_FLAMBERGE				 = 241,
	BI_242_FLAIL					 = 242,
	BI_243_LIGHT_FLAIL				 = 243,
	BI_244_COMBAT_MAIL				 = 244,
	BI_245_TRAVELER_S_ROBE			 = 245,
	BI_246_CRUDE_LEATHER_ARMOR		 = 246,
	BI_247_SKULL_MASK				 = 247,
	BI_248_BLACKSMITH_OIL			 = 248,
	BI_249_OIL_OF_REPAIR_V			 = 249,
	BI_250_POTION_OF_HEALING		 = 250,
	BI_251_POTION_OF_HEALING		 = 251,
	BI_252_POTION_OF_MANA			 = 252,
	BI_253_POTION_OF_MANA			 = 253,
	BI_254_RELICT_OF_IDENTIFY		 = 254,
	BI_255_RELICT_OF_IDENTIFY		 = 255,
	BI_256_RELICT_OF_IDENTIFY		 = 256,
	BI_257_RELICT_OF_IDENTIFY		 = 257,
	BI_258_RELICT_OF_IDENTIFY		 = 258,
	BI_259_POTION_OF_MANA			 = 259,
	BI_260_POTION_OF_MANA			 = 260,
	BI_261_POTION_OF_MANA			 = 261,
	BI_262_POTION_OF_HEALING		 = 262,
	BI_263_POTION_OF_HEALING		 = 263,
	BI_264_POTION_OF_HEALING		 = 264,
	BI_265_OIL_OF_REPAIR_VII		 = 265,
	BI_266_RELICT_OF_ETHEREALIZE	 = 266,
	BI_267_THIN_MAIL				 = 267,
	BI_268_ARCHER_S_LEATHER_ARMOR	 = 268,
	BI_269_HUGE_SHIELD				 = 269,
	BI_270_SORCEROR_S_CIRCLET		 = 270,
	BI_271_TIARA					 = 271,
	BI_272_WIZARD_S_MASK			 = 272,
	BI_273_SHAMAN_S_MASK			 = 273,
	BI_274_ILLUSIONIST_S_MASK		 = 274,
	BI_275_SAGE_S_MASK				 = 275,
	BI_276_SHORT_STAFF				 = 276,
	BI_277_STAFF					 = 277,
	BI_278_COMBAT_STAFF				 = 278,
	BI_279_JAGGED_SWORD				 = 279,
	BI_280_HEAVY_STAFF				 = 280,
	BI_281_BATTLE_STAFF				 = 281,
	BI_282_GREAT_STAFF				 = 282,
	BI_283_GLADIATOR_S_HELMET		 = 283,
	BI_284_FULL_LENGTH_CUIRASS		 = 284,
	BI_285_ROGUE_S_HELMET			 = 285,
	BI_286_LONG_DAGGER				 = 286,
	BI_287_GREAT_FLAIL				 = 287,
	BI_288_SCEPTER					 = 288,
	BI_289_BLOOD_STONE				 = 289,
	BI_290_RELICT_OF_PHASING		 = 290,
	BI_291_RELICT_OF_HYDRA			 = 291,
	BI_292_RELICT_OF_TELEPORT		 = 292,
	BI_293_RELICT_OF_GOLEM			 = 293,
	BI_294_RELICT_OF_HOLY_NOVA		 = 294,
	BI_295_RELICT_OF_ARCANE_NOVA	 = 295,
	BI_296_DIAMOND					 = 296,
	BI_297_RUBY						 = 297,
	BI_298_SAPPHIRE					 = 298,
	BI_299_TOPAZ					 = 299,
	BI_300_ALEXANDRITE				 = 300,
	BI_301_OPAL						 = 301,
	BI_302_HELL_SAPPHIRE			 = 302,
	BI_303_HELL_RUBY				 = 303,
	BI_304_HELL_DIAMOND				 = 304,
	BI_305_AMULET					 = 305,
	BI_306_RING						 = 306,
	BI_307_RING						 = 307,
	BI_308_OIL_OF_REPAIR_I			 = 308,
	BI_309_OIL_OF_REPAIR_I			 = 309,
	BI_310_OIL_OF_REPAIR_II			 = 310,
	BI_311_OIL_OF_REPAIR_II			 = 311,
	BI_312_OIL_OF_REPAIR_IV			 = 312,
	BI_313_OIL_OF_REPAIR_V			 = 313,
	BI_314_OIL_OF_FORTITUDE			 = 314,
	BI_315_OIL_OF_REPAIR_II			 = 315,
	BI_316_OIL_OF_REPAIR_II			 = 316,
	BI_317_OIL_OF_REPAIR_II			 = 317,
	BI_318_BLACKSMITH_OIL			 = 318,
	BI_319_OIL_OF_REPAIR_III		 = 319,
	BI_320_BLACKSMITH_OIL			 = 320,
	BI_321_OIL_OF_HARDENING			 = 321,
	BI_322_OIL_OF_REPAIR_VI			 = 322,
	BI_323_RING						 = 323,
	BI_324_OIL_OF_REPAIR_I			 = 324,
	BI_325_BLACKSMITH_OIL			 = 325,
	BI_326_OIL_OF_REPAIR_VII		 = 326,
	BI_327_TAVERN_SIGN				 = 327,
	BI_328_GOLDEN_ELIXIR			 = 328,
	BI_329_AMBER					 = 329,
	BI_330_BLACK_MUSHROOM			 = 330,
	BI_331_BRAIN					 = 331,
	BI_332_SPECTRAL_ELIXIR			 = 332,
	BI_333_HOLY_WATER				 = 333,
	BI_334_THEODORE					 = 334,
	BI_335_TORN_NOTE_1				 = 335,
	BI_336_TORN_NOTE_2				 = 336,
	BI_337_TORN_NOTE_3				 = 337,
	BI_338_RECONSTRUCTED_NOTE		 = 338,
	BI_339_EXECUTIONER_S_OIL		 = 339,
	BI_340_OIL_OF_REPAIR_IV			 = 340,
	BI_341_OIL_OF_REPAIR_VI			 = 341,
	BI_342_RELICT_OF_TRAP_DISARM	 = 342,
	BI_343_RELICT_OF_INFERNO		 = 343,
	BI_344_RELICT_OF_FLASH			 = 344,
	BI_345_RELICT_OF_LIGHTNING		 = 345,
	BI_346_RELICT_OF_ELEMENTAL		 = 346,
	BI_347_RELICT_OF_FULL_REPAIR	 = 347,
	BI_348_RELICT_OF_RECHARGING		 = 348,
	BI_349_RING						 = 349,
	BI_350_PEASANT_CAP				 = 350,
	BI_351_AMULET					 = 351,
	BI_352_ARKAINE_S_VALOR			 = 352,
	BI_353_ARKAINE_S_VALOR			 = 353,
	BI_354_ARKAINE_S_VALOR			 = 354,
	BI_355_GRISWOLD_S_EDGE			 = 355,
	BI_356_GRISWOLD_S_EDGE			 = 356,
	BI_357_GRISWOLD_S_EDGE			 = 357,
	BI_358_VEIL_OF_STEEL			 = 358,
	BI_359_VEIL_OF_STEEL			 = 359,
	BI_360_VEIL_OF_STEEL			 = 360,
	BI_361_LIGHT_MACE				 = 361,
	BI_362_LIGHT_HAMMER				 = 362,
	BI_363_SHARP_KNIFE				 = 363,
	BI_364_GRISWOLD_S_CASTER		 = 364,
	BI_365_GRISWOLD_S_CASTER		 = 365,
	BI_366_GRISWOLD_S_CASTER		 = 366,
	BI_367_GRISWOLD_S_TOOL			 = 367,
	BI_368_GRISWOLD_S_TOOL			 = 368,
	BI_369_GRISWOLD_S_TOOL			 = 369,
	BI_370_GRISWOLD_S_CRUSHER		 = 370,
	BI_371_GRISWOLD_S_CRUSHER		 = 371,
	BI_372_GRISWOLD_S_CRUSHER		 = 372,
	BI_373_GRISWOLD_S_SLASHER		 = 373,
	BI_374_GRISWOLD_S_SLASHER		 = 374,
	BI_375_GRISWOLD_S_SLASHER		 = 375,
	BI_376_GRISWOLD_S_ENCHANTER		 = 376,
	BI_377_GRISWOLD_S_ENCHANTER		 = 377,
	BI_378_GRISWOLD_S_ENCHANTER		 = 378,
	BI_379_ARKAINE_S_VALOR			 = 379,
	BI_380_ARKAINE_S_VALOR			 = 380,
	BI_381_ARKAINE_S_VALOR			 = 381,
	BI_382_ARKAINE_S_VALOR			 = 382,
	BI_383_ARKAINE_S_VALOR			 = 383,
	BI_384_ARKAINE_S_VALOR			 = 384,
	BI_385_LIGHT_HAMMER				 = 385,
	BI_386_VEIL_OF_STEEL			 = 386,
	BI_387_VEIL_OF_STEEL			 = 387,
	BI_388_VEIL_OF_STEEL			 = 388,
	BI_389_VEIL_OF_STEEL			 = 389,
	BI_390_VEIL_OF_STEEL			 = 390,
	BI_391_VEIL_OF_STEEL			 = 391,
	BI_392_STAFF					 = 392,
	BI_393_SMALL_BOW				 = 393,
	BI_394_LIGHT_DAGGER				 = 394,
	BI_395_BUCKLER					 = 395,
	BI_396_CLUB						 = 396,
	BI_397_POTION_OF_HEALING		 = 397,
	BI_398_RELICT_OF_RESURRECT		 = 398,
	BI_399_SHADOWFANG							 = 399,
};
reflect_enum( BASE_ITEM, BI_0_GOLD, BI_1_SHORT_KNIFE, BI_2_BUCKLER, BI_3_BONE, BI_4_SMALL_BOW, BI_5_WAND_OF_HOLY_BOLTS, BI_6_HATCHET,
	BI_7_BALANCED_AXE, BI_8_HEAVY_AXE, BI_9_MAGIC_ROCK, BI_10_POWER_SHIELD, BI_11_GUARDIAN_HELM, BI_12_HORNED_BARBUTE, BI_13_FULL_LENGTH_SCALEMAIL,
	BI_14_SKULL_CROWN, BI_15_LIGHT_HELMET, BI_16_ANVIL_OF_FURY, BI_17_HUGE_AXE, BI_18_HEAVY_BONE, BI_19_FUNGAL_TOME, BI_20_SPECTRAL_ELIXIR,
	BI_21_FULL_SHIELD, BI_22_CRYPT_MAP, BI_23_HEART, BI_24_POTION_OF_HEALING, BI_25_POTION_OF_MANA, BI_26_RELICT_OF_MANA_SHIELD,
	BI_27_RELICT_OF_TOWN_PORTAL, BI_28_FULL_CROWN, BI_29_POTION_OF_FULL_HEALING, BI_30_POTION_OF_FULL_MANA, BI_31_FLAT_AXE, BI_32_POLE_AXE,
	BI_33_STAFF_OF_LAZARUS, BI_34_KABUTO_HELM, BI_35_BLACKSMITH_OIL, BI_36_CLUB, BI_37_SLIM_BLADE, BI_38_DAGGER, BI_39_RUNE_BOMB_OPENS_ABYSS,
	BI_40_SKULL_CAP, BI_41_CIRCLET, BI_42_LIGHT_CANE, BI_43_LARGE_MACE, BI_44_WAR_MACE, BI_45_SCALE_PLATE, BI_46_BONE_MACE, BI_47_BLUDGEON,
	BI_48_LEATHER_CAP, BI_49_STEEL_CAP, BI_50_BATTLE_HELMET, BI_51_FULL_HELM, BI_52_CROWN, BI_53_CENTURION_HELMET, BI_54_CAPE,
	BI_55_RAGS, BI_56_CLOAK, BI_57_ROBE, BI_58_QUILTED_ARMOR, BI_59_LEATHER_ARMOR, BI_60_HARD_LEATHER_ARMOR, BI_61_STUDDED_LEATHER_ARMOR,
	BI_62_RING_MAIL, BI_63_CHAIN_MAIL, BI_64_SCALE_MAIL, BI_65_BREAST_PLATE, BI_66_SPLINT_MAIL, BI_67_PLATE_MAIL, BI_68_THICK_LEATHER_ARMOR,
	BI_69_GOTHIC_PLATE_MAIL, BI_70_FULL_PLATE_MAIL, BI_71_TARGE, BI_72_GRIFFIN_SHIELD, BI_73_CHAOS_SHIELD, BI_74_KITE_SHIELD,
	BI_75_TOWER_SHIELD, BI_76_GOTHIC_SHIELD, BI_77_POTION_OF_HEALING, BI_78_POTION_OF_FULL_HEALING, BI_79_POTION_OF_MANA, BI_80_POTION_OF_FULL_MANA,
	BI_81_WEIGHTED_SWORD, BI_82_WEIGHTED_SHIELD, BI_83_OIL_OF_HARDENING, BI_84_SCALED_CUIRASS, BI_85_THIN_PLATE_MAIL, BI_86_COMBAT_AXE,
	BI_87_ELIXIR_OF_STRENGTH, BI_88_ELIXIR_OF_MAGIC, BI_89_ELIXIR_OF_DEXTERITY, BI_90_ELIXIR_OF_VITALITY, BI_91_CURVED_SWORD,
	BI_92_BATTLE_SWORD, BI_93_BATTLE_HAMMER, BI_94_RELICT_OF_SEEING, BI_95_DOUBLE_BLADED_STAFF, BI_96_GREAT_SWORD, BI_97_HUGE_SWORD,
	BI_98_RELICT_OF_TOWN_PORTAL, BI_99_KATANA, BI_100_SPIKED_HAMMER, BI_101_BRUTE_SWORD, BI_102_HEAVY_MACE, BI_103_TRIPLE_FLAIL,
	BI_104_HUGE_MACE, BI_105_LINKED_MAIL, BI_106_BARBARIC_ARMOR, BI_107_THICK_MAIL, BI_108_KERIS, BI_109_GLADIUS, BI_110_TUNIC,
	BI_111_DIRK, BI_112_THORN_SWORD, BI_113_THICK_CLOAK, BI_114_BOOK_OF_, BI_115_BOOK_OF_, BI_116_BOOK_OF_, BI_117_BOOK_OF_,
	BI_118_HEAVY_DAGGER, BI_119_BLADE, BI_120_FALCHION, BI_121_SCIMITAR, BI_122_CLAYMORE, BI_123_KNIFE, BI_124_SABRE, BI_125_LONG_SWORD,
	BI_126_BROAD_SWORD, BI_127_BASTARD_SWORD, BI_128_BARBARIC_SWORD, BI_129_WAKIZASHI, BI_130_SMALL_AXE, BI_131_BROAD_AXE, BI_132_LARGE_AXE,
	BI_133_CLEAVER, BI_134_BATTLE_AXE, BI_135_GREAT_AXE, BI_136_MACE, BI_137_MORNING_STAR, BI_138_WAR_HAMMER, BI_139_SPIKED_CLUB,
	BI_140_HEAVY_CLUB, BI_141_HEAVY_FLAIL, BI_142_MAUL, BI_143_SHORT_BOW, BI_144_OAK_BOW, BI_145_REFLEX_BOW, BI_146_COMPOSITE_BOW,
	BI_147_SHORT_BATTLE_BOW, BI_148_LONG_BATTLE_BOW, BI_149_SHORT_WAR_BOW, BI_150_LONG_WAR_BOW, BI_151_LIGHT_STAFF, BI_152_LONG_STAFF,
	BI_153_COMPOSITE_STAFF, BI_154_BLADED_STAFF, BI_155_WAR_STAFF, BI_156_RING, BI_157_BANGLE, BI_158_BANGLE, BI_159_AMULET,
	BI_160_COLLAR, BI_161_CROSSBOW, BI_162_TIGHT_WAR_BOW, BI_163_LONG_HEAVY_BOW, BI_164_ELITE_BOW, BI_165_TIGHT_BOW, BI_166_THICK_PLATE_MAIL,
	BI_167_GOTHIC_AXE, BI_168_SHAMAN_S_CAPE, BI_169_WIZARD_S_ROBE, BI_170_ACOLYTE_S_MAIL, BI_171_APPRENTICE_S_MAIL, BI_172_ADVOCATE_S_PLATE,
	BI_173_SORCEROR_S_PLATE, BI_174_GREAT_PLATE_MAIL, BI_175_PLATE_CORSELET, BI_176_PIGFACE_BASCINET, BI_177_ARMET, BI_178_HERALDIC_SHIELD,
	BI_179_BALANCED_PLATE_MAIL, BI_180_PRECISION_BOW, BI_181_GOTHIC_SALLET, BI_182_RUNE_OF_BLAZE, BI_183_RUNE_OF_SHOCK, BI_184_RELICT_OF_WARP,
	BI_185_BRIGANDINE, BI_186_NAGINATA, BI_187_RELICT_OF_IDENTIFY, BI_188_RELICT_OF_FURY, BI_189_HEAVY_CROSSBOW, BI_190_ROD_OF_BLOOD_SHAMAN,
	BI_191_SCUTUM, BI_192_HOLY_WATER, BI_193_FULL_HOLY_WATER, BI_194_RING, BI_195_MASK, BI_196_AMULET, BI_197_BANGLE, BI_198_BANGLE,
	BI_199_ALPHA_MASK, BI_200_WANDERER_S_CLOAK, BI_201_EMBOSSED_LEATHER_ARMOR, BI_202_FIELD_MAIL, BI_203_BATTLE_MAIL, BI_204_BATTLE_PLATE,
	BI_205_SLAYER_S_PLATE, BI_206_ASSASSIN_S_PLATE, BI_207_BATTLE_CROSSBOW, BI_208_WAR_CROSSBOW, BI_209_ETHEREAL_BOW, BI_210_GREAT_MAUL,
	BI_211_RELICT_OF_IDENTIFY, BI_212_RELICT_OF_APOCALYPSE, BI_213_RELICT_OF_STONE_CURSE, BI_214_RELICT_OF_HEALING, BI_215_RELICT_OF_MANA,
	BI_216_RELICT_OF_REFLECT, BI_217_RELICT_OF_TELEKINESIS, BI_218_WAR_BLADE, BI_219_BATTLE_MACE, BI_220_RUNE_BLADE, BI_221_HUGE_FLAIL,
	BI_222_WAR_SALLET, BI_223_DUAL_SWORD, BI_224_WAND, BI_225_BOOK_OF_, BI_226_BOOK_OF_, BI_227_BOOK_OF_, BI_228_BOOK_OF_, BI_229_WOOD_SHIELD,
	BI_230_LINKED_PLATE, BI_231_VISORED_HELMET, BI_232_LIGHT_BOW, BI_233_CRUDE_BOW, BI_234_LONG_BOW, BI_235_POTION_OF_HEALING,
	BI_236_POTION_OF_HEALING, BI_237_POTION_OF_MANA, BI_238_POTION_OF_MANA, BI_239_OIL_OF_REPAIR_III, BI_240_STILETTO, BI_241_FLAMBERGE,
	BI_242_FLAIL, BI_243_LIGHT_FLAIL, BI_244_COMBAT_MAIL, BI_245_TRAVELER_S_ROBE, BI_246_CRUDE_LEATHER_ARMOR, BI_247_SKULL_MASK,
	BI_248_BLACKSMITH_OIL, BI_249_OIL_OF_REPAIR_V, BI_250_POTION_OF_HEALING, BI_251_POTION_OF_HEALING, BI_252_POTION_OF_MANA,
	BI_253_POTION_OF_MANA, BI_254_RELICT_OF_IDENTIFY, BI_255_RELICT_OF_IDENTIFY, BI_256_RELICT_OF_IDENTIFY, BI_257_RELICT_OF_IDENTIFY,
	BI_258_RELICT_OF_IDENTIFY, BI_259_POTION_OF_MANA, BI_260_POTION_OF_MANA, BI_261_POTION_OF_MANA, BI_262_POTION_OF_HEALING,
	BI_263_POTION_OF_HEALING, BI_264_POTION_OF_HEALING, BI_265_OIL_OF_REPAIR_VII, BI_266_RELICT_OF_ETHEREALIZE, BI_267_THIN_MAIL,
	BI_268_ARCHER_S_LEATHER_ARMOR, BI_269_HUGE_SHIELD, BI_270_SORCEROR_S_CIRCLET, BI_271_TIARA, BI_272_WIZARD_S_MASK, BI_273_SHAMAN_S_MASK,
	BI_274_ILLUSIONIST_S_MASK, BI_275_SAGE_S_MASK, BI_276_SHORT_STAFF, BI_277_STAFF, BI_278_COMBAT_STAFF, BI_279_JAGGED_SWORD,
	BI_280_HEAVY_STAFF, BI_281_BATTLE_STAFF, BI_282_GREAT_STAFF, BI_283_GLADIATOR_S_HELMET, BI_284_FULL_LENGTH_CUIRASS, BI_285_ROGUE_S_HELMET,
	BI_286_LONG_DAGGER, BI_287_GREAT_FLAIL, BI_288_SCEPTER, BI_289_BLOOD_STONE, BI_290_RELICT_OF_PHASING, BI_291_RELICT_OF_HYDRA,
	BI_292_RELICT_OF_TELEPORT, BI_293_RELICT_OF_GOLEM, BI_294_RELICT_OF_HOLY_NOVA, BI_295_RELICT_OF_ARCANE_NOVA, BI_296_DIAMOND,
	BI_297_RUBY, BI_298_SAPPHIRE, BI_299_TOPAZ, BI_300_ALEXANDRITE, BI_301_OPAL, BI_302_HELL_SAPPHIRE, BI_303_HELL_RUBY, BI_304_HELL_DIAMOND,
	BI_305_AMULET, BI_306_RING, BI_307_RING, BI_308_OIL_OF_REPAIR_I, BI_309_OIL_OF_REPAIR_I, BI_310_OIL_OF_REPAIR_II, BI_311_OIL_OF_REPAIR_II,
	BI_312_OIL_OF_REPAIR_IV, BI_313_OIL_OF_REPAIR_V, BI_314_OIL_OF_FORTITUDE, BI_315_OIL_OF_REPAIR_II, BI_316_OIL_OF_REPAIR_II,
	BI_317_OIL_OF_REPAIR_II, BI_318_BLACKSMITH_OIL, BI_319_OIL_OF_REPAIR_III, BI_320_BLACKSMITH_OIL, BI_321_OIL_OF_HARDENING,
	BI_322_OIL_OF_REPAIR_VI, BI_323_RING, BI_324_OIL_OF_REPAIR_I, BI_325_BLACKSMITH_OIL, BI_326_OIL_OF_REPAIR_VII, BI_327_TAVERN_SIGN,
	BI_328_GOLDEN_ELIXIR, BI_329_AMBER, BI_330_BLACK_MUSHROOM, BI_331_BRAIN, BI_332_SPECTRAL_ELIXIR, BI_333_HOLY_WATER, BI_334_THEODORE,
	BI_335_TORN_NOTE_1, BI_336_TORN_NOTE_2, BI_337_TORN_NOTE_3, BI_338_RECONSTRUCTED_NOTE, BI_339_EXECUTIONER_S_OIL, BI_340_OIL_OF_REPAIR_IV,
	BI_341_OIL_OF_REPAIR_VI, BI_342_RELICT_OF_TRAP_DISARM, BI_343_RELICT_OF_INFERNO, BI_344_RELICT_OF_FLASH, BI_345_RELICT_OF_LIGHTNING,
	BI_346_RELICT_OF_ELEMENTAL, BI_347_RELICT_OF_FULL_REPAIR, BI_348_RELICT_OF_RECHARGING, BI_349_RING, BI_350_PEASANT_CAP, BI_351_AMULET,
	BI_352_ARKAINE_S_VALOR, BI_353_ARKAINE_S_VALOR, BI_354_ARKAINE_S_VALOR, BI_355_GRISWOLD_S_EDGE, BI_356_GRISWOLD_S_EDGE, BI_357_GRISWOLD_S_EDGE,
	BI_358_VEIL_OF_STEEL, BI_359_VEIL_OF_STEEL, BI_360_VEIL_OF_STEEL, BI_361_LIGHT_MACE, BI_362_LIGHT_HAMMER, BI_363_SHARP_KNIFE,
	BI_364_GRISWOLD_S_CASTER, BI_365_GRISWOLD_S_CASTER, BI_366_GRISWOLD_S_CASTER, BI_367_GRISWOLD_S_TOOL, BI_368_GRISWOLD_S_TOOL,
	BI_369_GRISWOLD_S_TOOL, BI_370_GRISWOLD_S_CRUSHER, BI_371_GRISWOLD_S_CRUSHER, BI_372_GRISWOLD_S_CRUSHER, BI_373_GRISWOLD_S_SLASHER,
	BI_374_GRISWOLD_S_SLASHER, BI_375_GRISWOLD_S_SLASHER, BI_376_GRISWOLD_S_ENCHANTER, BI_377_GRISWOLD_S_ENCHANTER, BI_378_GRISWOLD_S_ENCHANTER,
	BI_379_ARKAINE_S_VALOR, BI_380_ARKAINE_S_VALOR, BI_381_ARKAINE_S_VALOR, BI_382_ARKAINE_S_VALOR, BI_383_ARKAINE_S_VALOR, BI_384_ARKAINE_S_VALOR,
	BI_385_LIGHT_HAMMER, BI_386_VEIL_OF_STEEL, BI_387_VEIL_OF_STEEL, BI_388_VEIL_OF_STEEL, BI_389_VEIL_OF_STEEL, BI_390_VEIL_OF_STEEL,
	BI_391_VEIL_OF_STEEL, BI_392_STAFF, BI_393_SMALL_BOW, BI_394_LIGHT_DAGGER, BI_395_BUCKLER, BI_396_CLUB, BI_397_POTION_OF_HEALING,
	BI_398_RELICT_OF_RESURRECT, BI_399_SHADOWFANG );

enum UNIQUE_MONSTER
{
	UM_0_Gharbad_the_Weak	= 0,
	UM_1_Skeleton_King	= 1,
	UM_2_Zhar_the_Mad	= 2,
	UM_3_Snotspill	= 3,
	UM_4_ArchBishop_Lazarus	= 4,
	UM_5_Red_Vex	= 5,
	UM_6_Dark_Jade	= 6,
	UM_7_Lachdanan	= 7,
	UM_8_Warlord_of_Blood	= 8,
	UM_9_The_Butcher	= 9,
	UM_10_Aym_the_Lord_of_Torment	= 10,
	UM_11_The_Defiler	= 11,
	UM_12_Uber_Diablo	= 12,
	UM_13_Katrina	= 13,
	UM_14_Elenor	= 14,
	UM_15_Durzu_the_Slayer	= 15,
	UM_16_Plaguebones	= 16,
	UM_17_Rustweaver	= 17,
	UM_18_Slantar	= 18,
	UM_19_Jaldabaoth	= 19,
	UM_20_Shadowskull	= 20,
	UM_21_Dreadhack	= 21,
	UM_22_Amducian	= 22,
	UM_23_King_doom	= 23,
	UM_24_Maranar	= 24,
	UM_25_Boneripper	= 25,
	UM_26_Azana_the_Lich_Queen	= 26,
	UM_27_Goreskin_the_Striker	= 27,
	UM_28_Anku	= 28,
	UM_29_Shaav	= 29,
	UM_30_Boilrot	= 30,
	UM_31_Dirtblood	= 31,
	UM_32_Lothamaarg	= 32,
	UM_33_Dreadpox	= 33,
	UM_34_Pukerat_the_Unclean	= 34,
	UM_35_Skullfire	= 35,
	UM_36_Madrage_the_Thrasher	= 36,
	UM_37_Biledrakk	= 37,
	UM_38_Crosseye_Keenhate	= 38,
	UM_39_Namorra	= 39,
	UM_40_Shaderip	= 40,
	UM_41_Annunas	= 41,
	UM_42_Searbite	= 42,
	UM_43_Droolmug	= 43,
	UM_44_Deathshade_Fleshmaul	= 44,
	UM_45_Abazandes	= 45,
	UM_46_Redstorm_the_Angry	= 46,
	UM_47_Tanari	= 47,
	UM_48_Molianta_the_Copperwing	= 48,
	UM_49_Oozeshredder	= 49,
	UM_50_Ixsliviat_the_Poisonous	= 50,
	UM_51_Galahad_the_Bonewhite	= 51,
	UM_52_Firefist_the_Grim	= 52,
	UM_53_Viletouch	= 53,
	UM_54_Kobal_the_Duke	= 54,
	UM_55_Lokromakt	= 55,
	UM_56_Belminar_the_Bloodhorn	= 56,
	UM_57_Centaliane	= 57,
	UM_58_Plaguemourner	= 58,
	UM_59_Crazefire	= 59,
	UM_60_Madaxe_Impmaster	= 60,
	UM_61_Nivir	= 61,
	UM_62_Eliant	= 62,
	UM_63_Obius_the_Doomgaze	= 63,
	UM_64_Shockscissor	= 64,
	UM_65_Malantor	= 65,
	UM_66_Soulpus	= 66,
	UM_67_Oktabian	= 67,
	UM_68_Malarra	= 68,
	UM_69_Mugrim_the_Stone	= 69,
	UM_70_Xaraleti	= 70,
	UM_71_Duklin	= 71,
	UM_72_Nephalon_the_Cursed	= 72,
	UM_73_Belbata	= 73,
	UM_74_Acharon	= 74,
	UM_75_Ratavir	= 75,
	UM_76_Sether	= 76,
	UM_77_Veliur_the_Bashing_Fist	= 77,
	UM_78_Lhumenaria	= 78,
	UM_79_Gluminhaar	= 79,
	UM_80_Hissabal	= 80,
	UM_81_Uriel	= 81,
	UM_82_Skulkfingers	= 82,
	UM_83_Doomfang_Bloodgutter	= 83,
	UM_84_Abigor	= 84,
	UM_85_Lustbrood_the_Carnal	= 85,
	UM_86_Varaya	= 86,
	UM_87_Eyecut	= 87,
	UM_88_Bile_marrow	= 88,
	UM_89_Alystar	= 89,
	UM_90_Gulkar_the_Obsidian_Lord	= 90,
	UM_91_Fireash_the_Smouldering	= 91,
	UM_92_Emperor_Morgoth	= 92,
	UM_93_The_Vizier	= 93,
	UM_94_Setebos	= 94,
	UM_95_Haniberas	= 95,
	UM_96_Galister	= 96,
	UM_97_Baal	= 97,
	UM_98_Befiran_the_Toadlord	= 98,
	UM_99_Belial_the_Disemboweler	= 99,
	UM_100_Karga_the_Silver_Blood	= 100,
	UM_101_Durimar_the_Coward	= 101,
	UM_102_Gorestone	= 102,
	UM_103_Bloodskull	= 103,
	UM_104_Hirrona	= 104,
	UM_105_Arakta	= 105,
	UM_106_Ironrock	= 106,
	UM_107_Duriar	= 107,
	UM_108_Xavuron	= 108,
	UM_109_Sentibur	= 109,
	UM_110_Zurandr	= 110,
	UM_111_Glabarzu_the_Blackened	= 111,
	UM_112_Ragnakk	= 112,
	UM_113_Undertaker	= 113,
	UM_114_Rotflesh_Gorefeast	= 114,
	UM_115_Liggazar_the_Storm_Lord	= 115,
	UM_116_Bharlad	= 116,
	UM_117_Foulwing	= 117,
	UM_118_Zuzum	= 118,
	UM_119_Fleshgrind	= 119,
	UM_120_Lugantares_the_Boarlord	= 120,
	UM_121_Rhabadar_the_Morbid	= 121,
	UM_122_Tahu_the_Dangerous	= 122,
	UM_123_Deadeye	= 123,
	UM_124_Torvatus	= 124,
	UM_125_Elemanzer_the_Razorclaws	= 125,
	UM_126_Gloomshredder	= 126,
	UM_127_Warpeye	= 127,
	UM_128_Deathspit	= 128,
	UM_129_Bonecrown_the_Overseer	= 129,
	UM_130_Medammu_the_Hell_Stone	= 130,
	UM_131_Tabantar	= 131,
	UM_132_Phugantar_the_Glowing	= 132,
	UM_133_Xilexta	= 133,
	UM_134_Sathgor	= 134,
	UM_135_Deathblow_the_Interred	= 135,
	UM_136_Sarogyl_the_Decapitator	= 136,
	UM_137_Belfaron_the_Executioner	= 137,
	UM_138_Lionskull_the_Bent	= 138,
	UM_139_Zabulon	= 139,
	UM_140_Red_Terror	= 140,
	UM_141_Black_Lord_of_the_Pit	= 141,
	UM_142_Tantorus	= 142,
	UM_143_Lucibal	= 143,
	UM_144_Agabandu	= 144,
	UM_145_Xerelesk	= 145,
	UM_146_Immonil	= 146,
	UM_147_Shadowdrinker	= 147,
	UM_148_Sparksoul_the_Uncatchable	= 148,
	UM_149_Warpshard_the_Wraith	= 149,
	UM_150_Eeriexx	= 150,
	UM_151_Bloodfury	= 151,
	UM_152_Ashraiser	= 152,
	UM_153_UrAnnon	= 153,
	UM_154_Diablo	= 154,
	UM_155_Aglamar	= 155,
	UM_156_Zhar_the_Mad	= 156,
	UM_157_Warlord_of_Blood	= 157,
	UM_158_Akrikta	= 158,
	UM_159_Heatthrower	= 159,
	UM_160_Bormit_the_Bloodskin	= 160,
	UM_161_Babrux_Shadowcutter	= 161,
	UM_162_Satibal	= 162,
	UM_163_Selena	= 163,
	UM_164_Azlakhad_the_Death_Arrow	= 164,
	UM_165_Sabbatan_the_Night_Hunter	= 165,
	UM_166_Blindeye_Clawfinger	= 166,
	UM_167_Hazeshifter	= 167,
	UM_168_Maleptos	= 168,
	UM_169_Urzul_the_Trampler	= 169,
	UM_170_Nightrend_the_Dark	= 170,
	UM_171_Doomblazer	= 171,
	UM_172_Urlig_the_YellowEyed	= 172,
	UM_173_Bongo	= 173,
	UM_174_Leviathan	= 174,
	UM_175_Esyldur	= 175,
	UM_176_Shivrana_the_Goldskin	= 176,
	UM_177_Shadomarr_the_Cerberus	= 177,
	UM_178_Shiasar_the_Summoner	= 178,
	UM_179_Doomhowler	= 179,
	UM_180_Moldwolf_the_Obsessed	= 180,
	UM_181_Gammorin_the_Hell_Baron	= 181,
	UM_182_Voidstalker	= 182,
	UM_183_Nybras_the_Bloodlust	= 183,
	UM_184_Sabazios	= 184,
	UM_185_Kasadeus_the_Fangskin	= 185,
	UM_186_Rotspawn_hellmeat	= 186,
	UM_187_Foulgut_the_Consumer	= 187,
	UM_188_Pithead_Bonegloom	= 188,
	UM_189_Loglan	= 189,
	UM_190_Loklin_the_Evilshriek	= 190,
	UM_191_Shadowcrow	= 191,
	UM_192_Ganja_the_Goblin	= 192,
	UM_193_Shoglothar	= 193,
	UM_194_Shauril_the_Lich_King	= 194,
	UM_195_Abiknabat_the_Soulreaper	= 195,
	UM_196_Vatar_the_Void_Guardian	= 196,
	UM_197_Blacktongue_Deathbite	= 197,
	UM_198_Blackash_Thornhand	= 198,
	UM_199_Grimstomp	= 199,
	UM_200_Lilith_the_Cabalist	= 200,
	UM_201_Cyrodiil_the_Blackstorm	= 201,
	UM_202_Hatebrood_Soulslasher	= 202,
	UM_203_Graverot_the_Resurrected	= 203,
	UM_204_Brokenhead_the_Returned	= 204,
	UM_205_Stoneheart_Madburner	= 205,
	UM_206_Burnskull_the_Slicer	= 206,
	UM_207_Orgul_the_Lichmaster	= 207,
	UM_208_Bloodclaw_the_Undying	= 208,
	UM_209_Blightfire_the_Frozen	= 209,
	UM_210_Tombstone_the_Evil	= 210,
	UM_211_Shadowclaw_the_Eater	= 211,
	UM_212_Flaredart_the_Burner	= 212,
	UM_213_Shockwing_the_Raging	= 213,
	UM_214_Risoron_the_Steelstalker	= 214,
	UM_215_Zubur_the_Dissector	= 215,
	UM_216_Hatestrike_the_Smasher	= 216,
	UM_217_Shroudmace_the_Crazed	= 217,
	UM_218_Duskscythe	= 218,
	UM_219_Firescythe_the_Reaper	= 219,
	UM_220_Kallista_the_Blackwillow	= 220,
	UM_221_Blazethunder	= 221,
	UM_222_Blightstorm	= 222,
	UM_223_Ragestorm_Steelbow	= 223,
	UM_224_Dagahad_the_Blackarrow	= 224,
	UM_225_Melchior_the_Fat	= 225,
	UM_226_Lava_Maw_the_Howler	= 226,
	UM_227_Bullseye_Dogmaster	= 227,
	UM_228_Gutslash	= 228,
	UM_229_Oozedrool	= 229,
	UM_230_Thornskin_Fangfist	= 230,
	UM_231_Bloodfist_Phasegloom	= 231,
	UM_232_Rotburn_the_Wormridden	= 232,
	UM_233_Coffinspawn_the_Hungry	= 233,
	UM_234_Laghabaar	= 234,
	UM_235_Fleshrip_the_Berserk	= 235,
	UM_236_Grossvenom	= 236,
	UM_237_Breakbone_the_Flayer	= 237,
	UM_238_Carnagor	= 238,
	UM_239_Plaguefist_Blackheart	= 239,
	UM_240_Bilefroth_Deathgrin	= 240,
	UM_241_Sharptusk_the_Quick	= 241,
	UM_242_Breakspine	= 242,
	UM_243_Urdukk	= 243,
	UM_244_Stonechill_the_Black	= 244,
	UM_245_Bilemarrow_the_Rancid	= 245,
	UM_246_Webslash	= 246,
	UM_247_Banevenom_the_Toxic	= 247,
	UM_248_Exurath_the_Webweaver	= 248,
	UM_249_Viperfire	= 249,
	UM_250_Shulgoth	= 250,
	UM_251_Plaguewrath	= 251,
	UM_252_The_Harlequin	= 252,
	UM_253_Aglamar	= 253,
	UM_254_Painforge	= 254,
	UM_255_The_Juggernaut	= 255,
	UM_256_Thundercharge	= 256,
	UM_257_Bloodraven	= 257,
	UM_258_Grimhorn	= 258,
	UM_259_Hellzap	= 259,
	UM_260_Irontooth_the_Viper	= 260,
	UM_261_Bellatrix	= 261,
	UM_262_Bloodcrusher	= 262,
	UM_263_Glasskull_the_Jagged	= 263,
	UM_264_Ghostflame	= 264,
	UM_265_Gegemoth	= 265,
	UM_266_Stoneshadow	= 266,
	UM_267_Doomlock	= 267,
	UM_268_Bloodreaper	= 268,
	UM_269_Electro_Cute	= 269,
	UM_270_Xorene_the_Lazarus_Guard	= 270,
	UM_271_Durzu_the_Slayer	= 271,
	UM_272_Deathcast	= 272,
	UM_273_Baron_Sludge	= 273,
	UM_274_Firewound_the_Burning	= 274,
	UM_275_Balthazar	= 275,
	UM_276_Graywar_the_Slayer	= 276,
	UM_277_Doomcast	= 277,
	UM_278_Tartog	= 278,
	UM_279_Brokenstorm	= 279,
	UM_280_Slayhorror	= 280,
	UM_281_Bonehead_Bangshield	= 281,
	UM_282_Shadowshifter	= 282,
	UM_283_Warsmash_the_Fast	= 283,
	UM_284_Howlingire	= 284,
	UM_285_Tombslasher	= 285,
	UM_286_Fangmane	= 286,
	UM_287_Cutdash	= 287,
	UM_288_Flickershred	= 288,
	UM_289_Vilerot	= 289,
	UM_290_Wrathfire	= 290,
	UM_291_Killblow	= 291,
	UM_292_Lord_Obese	= 292,
	UM_293_Keenmace_the_Berserk	= 293,
	UM_294_Blazewing	= 294,
	UM_295_Sneakmind	= 295,
	UM_296_Murkshadow	= 296,
	UM_297_Cinderjaw	= 297,
	UM_298_Gutshank	= 298,
	UM_299_Steelmace_the_Enraged	= 299,
	UM_300_Goldmace_the_Crusher	= 300,
	UM_301_Bladeskin	= 301,
	UM_302_Flameburn_the_Fallen	= 302,
	UM_303_Darkshroud	= 303,
	UM_304_Warfang	= 304,
	UM_305_Grimfist	= 305,
	UM_306_Gloomseeker	= 306,
	UM_307_Prince_Albrecht	= 307,
	UM_308_Hotarax	= 308,
	UM_309_Ice_Stalker	= 309,
	UM_310_Slimebash	= 310,
	UM_311_Hulk_Lord	= 311,
	UM_312_Grosscut	= 312,
	UM_313_Sharpooze	= 313,
	UM_314_Morbid_Horror	= 314,
	UM_315_Goldhorn	= 315,
	UM_316_Burzul	= 316,
	UM_317_Lichfire	= 317,
	UM_318_Deathshroud_the_Frigid	= 318,
	UM_319_Lustsoul	= 319,
	UM_320_Witchneed_the_Beguiler	= 320,
	UM_321_Magnat	= 321,
	UM_322_Mindgloom	= 322,
	UM_323_Lord_of_the_Order	= 323,
	UM_324_Exeter	= 324,
	UM_325_Keel	= 325,
	UM_326_Slashburn	= 326,
	UM_327_Bauldor	= 327,
	UM_328_Hellshock	= 328,
	UM_329_Slime_lord	= 329,
	UM_330_Kelbak	= 330,
	UM_331_Windspawn	= 331,
	UM_332_Brainshroud	= 332,
	UM_333_Grossblood_the_Foul	= 333,
	UM_334_Turunk	= 334,
	UM_335_Gravelurker	= 335,
	UM_336_Graveskull_the_Mouldering	= 336,
	UM_337_Bloodhack	= 337,
	UM_338_Garakshu	= 338,
	UM_339_Tombshambler_the_Terrifying	= 339,
	UM_340_Scareghoul_the_Carver	= 340,
	UM_341_Fearpus_the_Cadaverous	= 341,
	UM_342_Charnelfire	= 342,
	UM_343_Tombskull	= 343,
	UM_344_Ashbone_Slashkill	= 344,
	UM_345_Boneshroud	= 345,
	UM_346_Skullbash_the_Striker	= 346,
	UM_347_Boneskull_the_Deadly	= 347,
	UM_348_Skullcreeper	= 348,
	UM_349_Murktwist_the_Hidden	= 349,
	UM_350_Bentdusk_the_Grey	= 350,
	UM_351_Slyshade	= 351,
	UM_352_Hellmurk	= 352,
	UM_353_Hellscythe_the_Damned	= 353,
	UM_354_Bloodcrusher	= 354,
	UM_355_Fleshtear_the_Smasher	= 355,
	UM_356_Flameclub_the_Smasher	= 356,
	UM_357_Blazebash	= 357,
	UM_358_Bentclaw_the_Rabid	= 358,
	UM_359_Wrathraven	= 359,
	UM_360_Moonbender	= 360,
	UM_361_Bloodskin_Darkbow	= 361,
	UM_362_Banecaster	= 362,
	UM_363_Gorlan	= 363,
	UM_364_Azramon_the_Stonecold	= 364,
	UM_365_Blackeye_Keenbow	= 365,
	UM_366_Hellgaze	= 366,
	UM_367_Spikefist_the_Bloated	= 367,
	UM_368_Goredrool	= 368,
	UM_369_Ragebash_the_Furious	= 369,
	UM_370_Bloatfist	= 370,
	UM_371_Sludgefist	= 371,
	UM_372_Grimthrasher	= 372,
	UM_373_Headmauler	= 373,
	UM_374_Stonefire	= 374,
	UM_375_Gorefang_the_Hateful	= 375,
	UM_376_Gabboru	= 376,
	UM_377_Blazeshock	= 377,
	UM_378_Doomcloud	= 378,
	UM_379_Arcstorm	= 379,
	UM_380_Duskstone	= 380,
	UM_381_Darkblight	= 381,
	UM_382_Fleshslasher	= 382,
	UM_383_Redgaze	= 383,
	UM_384_Lionsteel_the_Black	= 384,
	UM_385_Fearshredder	= 385,
	UM_386_Longtusk_Fleshstomper	= 386,
	UM_387_Claybash	= 387,
	UM_388_Voidfloater	= 388,
	UM_389_Ghostflame	= 389,
	UM_390_Hatepus_the_Putrid	= 390,
	UM_391_Fleshreaper	= 391,
	UM_392_Sorlag	= 392,
	UM_393_Azrael	= 393,
	UM_394_Bilefist_the_Crusher	= 394,
	UM_395_Blindscreamer	= 395,
	UM_396_Gorebelch_the_Drooling	= 396,
	UM_397_Foulmaw_the_Devourer	= 397,
	UM_398_Pusmouth_the_Contagious	= 398,
	UM_399_Mukazzam	= 399,
	UM_400_Bonegasher	= 400,
	UM_401_Pulsecrawler	= 401,
	UM_402_Greyshade	= 402,
	UM_403_Black_Marquis	= 403,
	UM_404_Gloomslash	= 404,
	UM_405_Saurot	= 405,
	UM_406_Uzugloth	= 406,
	UM_407_Voruknab	= 407,
	UM_408_Ashthunder	= 408,
	UM_409_Voruknab	= 409,
	UM_410_Hellbreath	= 410,
	UM_411_Voruknab	= 411,
	UM_412_Angel_of_Doom	= 412,
	UM_413_Fangmaw	= 413,
	UM_414_Bloodmouth	= 414,
	UM_415_Droolmouth	= 415,
	UM_416_Pusfroth	= 416,
	UM_417_Sydonai	= 417,
	UM_418_Arcturus	= 418,
	UM_419_Deathpuke	= 419,
	UM_420_Scumrot	= 420,
	UM_421_Deadshroud	= 421,
	UM_422_Rotscare	= 422,
	UM_423_Gravehorror	= 423,
	UM_424_Stenchooze	= 424,
	UM_425_Corpseterror	= 425,
	UM_426_Hellbrood_the_Eater	= 426,
	UM_427_Deathpus_the_Uninterred	= 427,
	UM_428_Corpseeater	= 428,
	UM_429_Dreadlust	= 429,
	UM_430_Rotdrinker	= 430,
	UM_431_Ashfeast	= 431,
	UM_432_Grieftongue	= 432,
	UM_433_Gravemaw	= 433,
	UM_434_Troompix	= 434,
	UM_435_Turbak_the_Deuce	= 435,
	UM_436_Arduk	= 436,
	UM_437_Dunkin	= 437,
	UM_438_Killap	= 438,
	UM_439_Durmak	= 439,
	UM_440_Pain_Master	= 440,
	UM_441_Blindphaser	= 441,
	UM_442_Warpterror	= 442,
	UM_443_Foulclaw	= 443,
	UM_444_The_Warp_Lord	= 444,
	UM_445_Phase_Prince	= 445,
	UM_446_Warp_Master	= 446,
	UM_447_Warpslash	= 447,
	UM_448_Ripshred	= 448,
	UM_449_Fogripper	= 449,
	UM_450_Bloodrayne	= 450,
	UM_451_Dreadweep	= 451,
	UM_452_Ifrit	= 452,
	UM_453_Ifrit	= 453,
	UM_454_Moloch	= 454,
	UM_455_Griefstrike	= 455,
	UM_456_Ripslash_the_Cruel	= 456,
	UM_457_Gunk_Madslay	= 457,
	UM_458_Torb	= 458,
	UM_459_Xtarob_Bighand	= 459,
	UM_460_Urtuk_Sickblade	= 460,
	UM_461_Zmuks	= 461,
	UM_462_Gzonx_Goldshield	= 462,
	UM_463_Hellcinder	= 463,
	UM_464_Blazerage	= 464,
	UM_465_Goreblaze_the_Fallen	= 465,
	UM_466_Goredamn_the_Slasher	= 466,
	UM_467_Doomscythe_the_Violent	= 467,
	UM_468_Obizoth	= 468,
	UM_469_Speedstorm	= 469,
	UM_470_Deathstorm_the_Fast	= 470,
	UM_471_Arcspawn_the_Thunderer	= 471,
	UM_472_Shadethunder	= 472,
	UM_473_Baneclaw_the_Venomous	= 473,
	UM_474_Sharprage	= 474,
	UM_475_Bloodrip	= 475,
	UM_476_Stinger_Lord	= 476,
	UM_477_Grimblight	= 477,
	UM_478_Fleshdrool_the_Terror	= 478,
	UM_479_Ironthunder	= 479,
	UM_480_Blightsagit	= 480,
	UM_481_Azazel	= 481,
	UM_482_Vetis	= 482,
	UM_483_Bloodreaver_the_Fierce	= 483,
	UM_484_Freezelock	= 484,
	UM_485_Goredrown	= 485,
	UM_486_Voidblaze	= 486,
	UM_487_Grimflare	= 487,
	UM_488_Firespawn	= 488,
	UM_489_Grossrot	= 489,
	UM_490_Berith_the_Zombie_Master	= 490,
	UM_491_Angerhorn_the_Furious	= 491,
	UM_492_Fleshfeast	= 492,
	UM_493_Fleshblight	= 493,
	UM_494_Adramelech	= 494,
	UM_495_Asmoday	= 495,
	UM_496_Phaseclaw_the_Vile	= 496,
	UM_497_Grossblow_the_Flatulent	= 497,
	UM_498_Thornfist	= 498,
	UM_499_Foulcrush	= 499,
	UM_500_Maulfist_the_Crusher	= 500,
	UM_501_Gruntbash	= 501,
	UM_502_Scumhoof_the_Foul	= 502,
	UM_503_Bonecracker	= 503,
	UM_504_Grimblood_the_Frenzied	= 504,
	UM_505_Blazerock	= 505,
	UM_506_The_Cremator	= 506,
	UM_507_Firestone_Hammerfist	= 507,
	UM_508_Blazestorm	= 508,
	UM_509_Fearzap	= 509,
	UM_510_Scarespawn	= 510,
	UM_511_Terrorbrood	= 511,
	UM_512_Blackslice	= 512,
	UM_513_Duskshroud	= 513,
	UM_514_Shadowslash	= 514,
	UM_515_Blackshade	= 515,
	UM_516_Nightgloom	= 516,
	UM_517_Fangrage	= 517,
	UM_518_Fleshbane	= 518,
	UM_519_Black_Death	= 519,
	UM_520_Sekteb	= 520,
	UM_521_Abdatt	= 521,
	UM_522_Dabbasku	= 522,
	UM_523_Mektepp	= 523,
	UM_524_Obliftas	= 524,
	UM_525_Sefu	= 525,
	UM_526_Undabbath	= 526,
	UM_527_Blackhoof_Ironmace	= 527,
	UM_528_Stonewing_Blightspit	= 528,
	UM_529_Sybil	= 529,
	UM_530_Tmenx	= 530,
	UM_531_Gravemouth	= 531,
	UM_532_Gravebone_the_Skeletal	= 532,
	UM_533_Greyash	= 533,
	UM_534_Spiritmurk_the_Black	= 534,
	UM_535_Abatan	= 535,
	UM_536_Uber_Butcher	= 536,
	UM_537_Ceromorth	= 537,
	UM_538_Goreshade	= 538,
	UM_539_Nightcarve	= 539,
	UM_540_Mistflayer	= 540,
	UM_541_Fogweaver	= 541,
	UM_542_Steeltouch	= 542,
	UM_543_Kloox	= 543,
	UM_544_Darkhoof	= 544,
	UM_545_Dabbuz	= 545,
	UM_546_Mindburn_the_Destroyer	= 546,
	UM_547_Seethespell	= 547,
	UM_548_Sintongue	= 548,
	UM_549_Burnfeast	= 549,
	UM_550_Snowbite	= 550,
	UM_551_Whiteblight	= 551,
	UM_552_Bloodbane	= 552,
	UM_553_Revenant	= 553,
	UM_554_Gloomshank	= 554,
	UM_555_Ghostmace	= 555,
	UM_556_Pinky	= 556,
	UM_557_Dregbez	= 557,
	UM_558_Vobul	= 558,
	UM_559_Assam	= 559,
	UM_560_Andukh	= 560,
	UM_561_Ulhimrad	= 561,
	UM_562_Deathfire	= 562,
	UM_563_Dreadmouth	= 563,
	UM_564_Bloodbone	= 564,
	UM_565_Blackwing_the_Burning	= 565,
	UM_566_El_Chupacabras	= 566,
	UM_567_Cesspenar	= 567,
	UM_568_Gurmex	= 568,
	UM_569_Flamespit	= 569,
	UM_570_Firehowler	= 570,
	UM_571_The_Bomber	= 571,
	UM_572_Nemesis	= 572,
	UM_573_Soulthunder	= 573,
	UM_574_Mindzap	= 574,
	UM_575_Hoofrazor	= 575,
	UM_576_Merfuth	= 576,
	UM_577_Burleph	= 577,
	UM_578_Uber_Xorene	= 578,
	UM_579_Andariel	= 579,
	UM_580_NaKrul	= 580,
	UM_581_Grimspike	= 581,
	UM_582_Izual	= 582,
	UM_583_Lich_King	= 583,
	UM_584_Mordessa	= 584,
	UM_585_Fleshdoom	= 585,
	UM_586_Wielder_of_Shadowfang	= 586,
	UM_587_Hephasto_the_Armorer	= 587,
	UM_588_Droolkill	= 588,
	UM_589_Hungermane	= 589,
};

enum SHRINE: int
{
	SH_0_Mysterious,	// 0
	SH_1_Hidden,		// 1
	SH_2_Gloomy,		// 2
	SH_3_Weird,			// 3
	SH_4_Magical,		// 4
	SH_5_Stone,			// 5
	SH_6_Religious,		// 6
	SH_7_Enchanted,		// 7
	SH_8_Thaumaturgic,	// 8
	SH_9_Fascinating,	// 9
	SH_10_Cryptic,		// 10
	SH_11_Magical,		// 11
	SH_12_Eldritch,		// 12
	SH_13_Eerie,		// 13
	SH_14_Divine,		// 14
	SH_15_Holy,			// 15
	SH_16_Sacred,		// 16
	SH_17_Spiritual,	// 17
	SH_18_Spooky,		// 18
	SH_19_Abandoned,	// 19
	SH_20_Creepy,		// 20
	SH_21_Quiet,		// 21
	SH_22_Secluded,		// 22
	SH_23_Ornate,		// 23
	SH_24_Glimmering,	// 24
	SH_25_Tainted,		// 25
	SH_26_Oily,			// 26
	SH_27_Glowing,		// 27
	SH_28_Mendicant_s,	// 28
	SH_29_Sparkling,	// 29
	SH_30_Town,			// 30
	SH_31_Shimmering,	// 31
	SH_32_Solar,		// 32
	SH_33_Murphy_s,		// 33
};

enum Missile_Param: char
{
 	Missile_Many = -1, // Спецзначение означающее наличие нескольких кастов в одной клетке.
	Missile_125_Max = 125,
	Missile_OldMax = Missile_125_Max,
};

enum Spell_Param: int
{
	Spell_Max = 52,
};

enum Gui_Param: int
{
	GUI_Width = 640,
	GUI_Height = 480,
	GUI_PanelWidth = 320,
	GUI_PanelHeight = GUI_Height - 128 +110, //qndel - 110 from expanding inventory/char panel
	GUI_MainPanelHeight = 144,
};

enum Old_Screen_Param: int
{
	OldScreen_LeftBorder = 64,
	OldScreen_TopBorder = 88,
	OldScreen_WorkingSurface_Width = GUI_Width + 2 * OldScreen_LeftBorder,
};

enum Screen_Param: int
{
	//#ifdef HIRES
	//Screen_LeftBorder = 96,
	//#else
	Screen_LeftBorder = 64,
	//#endif
	Screen_TopBorder = 88,
	Screen_TopEnd = 160,
	Screen_BottomEnd = 512,
	Screen_BottomBorder = 8 * 32,// 256 - что это, зачем ?
};


constexpr int MIN_CACHE	= 0;
constexpr int MAX_CACHE	= 0xFFFFFFFF;

constexpr int SHA1_BLOCK_SIZE = 64;
constexpr int SHA1_DIGEST_SIZE = 20;

constexpr int MAX_1780_ITEM_PICS = th2 ? 4000 : 1780; // 3440 стояло в th2 до начала сверки, 1784 максимально возможная длина ItemFlipTable
constexpr int ANIM_DIRS_16 = 16; // Animation directions count
constexpr int MAX_128_ITEMS_ON_GROUND = 128; // ItemsOnMap размер 128, а не 129, -1 item это обращения к массиву по itemNumber, вместо itemIndex
constexpr uint BASE_100_OBJECTS_COUNT = 100;
constexpr uchar ITEM_DUR_INDESTRUBLE = 0xFF;
constexpr uchar NO_REQUIREMENT = 0;

enum{ 
	BASE_ITEM_COUNT = 1024,
	GOOD_ITEM_COUNT = BASE_ITEM_COUNT * 2,
};

// Counts Parameters
constexpr int Levels_24_Count = 25;
constexpr int PlayerEntryPoint_Count = 4;
constexpr int Monsters_200_Count = 200;
constexpr int Lights_32_Count = 32;
constexpr int Objects_127_Count = 127;
constexpr int Items_127_Count = 127;
constexpr int Missiles_125_Count = 125;
constexpr int Map_40_Size = 40;
constexpr int FineMap_16_Border = 16;
constexpr int FineMap_112_Size = 2 * ( Map_40_Size + FineMap_16_Border );
constexpr int PlayersMax_4 = 4;

enum Dialog_Param: int 
{
	Dialog_591_Width = 591, // максимальная ширина строки  в пикселях 
	Dialog_302_Height = 302, // максимальная высота строк в пикселях 
	Dialog_HalfWidth = 271, // максимальная ширина строки в пикселях на половине экрана 
};

enum Speech_Param: int
{
	Speech_LeftMargin = 24, // отступ слева 
	Speech_TopMargin = 20, // отступ сверху 
	Speech_LetterMaxWidth = 22, // максимальная ширина буквы 
	Speech_Spacing = 2, // расстояние между буквами по горизонтали 
	Speech_LineMaxLen = 128, // максимальная длина строки речи 
	Speech_LineHeight = 38, // высота линии в пикселях 
	Speech_LineScrollTime = 50, // миллисекунд на прокрутку одной строки 
};

enum Gold_Param: int 
{
	Gold_1000_LowLimit = 1000, // значение меньше которого кучки золота считаются маленькими
	Gold_2500_HiLimit = 2500, // значение, которое делит немаленькие кучки золота на средние и большие
	Gold_4_SmallPic = 4,
	Gold_5_MediumPic = 5,
	Gold_6_BigPic = 6,
};

enum PLAYER_DIALOG
{
	PD_0_None = 0,
	PD_1_BlacksmithMain = 1,
	PD_2_BasicalItems = 2,
	PD_3_BlacksmithSale = 3,
	PD_4_RepairItem = 4,
	PD_5_WitchMain = 5,
	PD_6_WitchBuy = 6,
	PD_7_WitchSell = 7,
	PD_8_RechargeItem = 8,
	PD_9_NoGold = 9,
	PD_10_NoRoom = 10,
	PD_11_Confirm = 11,
	PD_12_WirtMain = 12,
	PD_13_WirtBuy = 13,
	PD_14_HealerMain = 14,
	PD_15_ElderMain = 15,
	PD_16_HealerBuy = 16,
	PD_17_IdentifyItem = 17,
	PD_18_MagicalItems = 18,
	PD_19_Talk = 19,
	PD_20_IdentifiedItemInfo = 20,
	PD_21_OgdenMain = 21,
	PD_22_FarnhamMain = 22,
	PD_23_GilianMain = 23,
	PD_24_BlacksmithRestock = 24,
	PD_25_MessageLog = 25,
	PD_Count,
};

enum PLAYER_TRADE: int 
{
	PT_DialogRowsCount = 104,
	PT_MagicItemsCount = 15,
	PT_48_PlayerItemsCount = IS_70_40_Inv_Count + IS_8_Belt_Count,
	PT_25_WitchItemsCount = 25,
	PT_HealerItemsCount = 20,
	PT_BasicItemsCount = 25,

	C_0_White = 0,
	C_1_Blue = 1,
	C_2_Red = 2,
	C_3_Gold = 3,
	C_4_Orange = 4,
	C_5_Yellow = 5,
	C_6_Brownish = 6,
	C_7_Grey = 7,
	C_8_Pink = 8,
	C_9_RedGold = 9,

	PT_SellRatio = 32,
	PT_IdentifyPrice = 100,
	PT_WirtItemPrice = 50,

	PT_Repair_Head = -1,
	PT_Repair_Body = -2,
	PT_Repair_LeftHand = -3,
	PT_Repair_RightHand = -4,
	PT_Repair_SecondLeftHand = -8,
	PT_Repair_SecondRightHand = -9,
	PT_Repair_Waist = -10,
	PT_Repair_Hands = -11,
	PT_Repair_Feet = -12,

	PT_Recharge_OnBodyItem_LeftHand = -1,

	PT_1_Identify_Head = -1,
	PT_2_Identify_Body = -2,
	PT_3_Identify_LeftHand = -3,
	PT_4_Identify_RightHand = -4,
	PT_5_Identify_RightRing = -5,
	PT_6_Identify_LeftRing = -6,
	PT_7_Identify_Neck = -7,
	PT_8_Identify_SecondLeftHand = -8,
	PT_9_Identify_SecondRightHand = -9,
PT_10_Identify_Waist = -10,
PT_11_Identify_Hands = -11,
PT_12_Identify_Feet = -12,

PT_Witch_ForcedItemsCount = 3,
PT_2_Healer_Singleplayer_ForcedItemsCount = 2,
PT_3_Healer_Multiplayer_ForcedItemsCount = 3,

PT_DialogRows_NoIndent = 0,
PT_DialogRows_SmallIndent = 20,
PT_DialogRows_BigIndent = 40,

PT_DialogRows_BigDialog_ContentStart = 5,
PT_DialogRows_BigDialog_ContentEnd = 21,
PT_DialogRows_BigDialog_DialogEnd = 23,

PT_DialogRows_BigDialog_Logo = 1,
PT_DialogRows_BigDialog_TopSeparator = 3,
PT_DialogRows_BigDialog_BottomSeparator = 21,
PT_DialogRows_BigDialog_Info = 14,
PT_DialogRows_BigDialog_Back = 22,
PT_DialogRows_BigDialog_Back_VerticalIndent = 6,
TradeRows = 4,

PT_DialogRows_5_SmallDialog_Separator = 5,
PT_DialogRows_20_SmallDialog_RowsCount = 20,

PT_DialogRows_1_BlacksmithMain_Logo1 = 1,
PT_DialogRows_1_BlacksmithMain_Logo2 = 3,
PT_DialogRows_1_BlacksmithMain_ActionLabel = 7,
PT_DialogRows_1_BlacksmithMain_Talk = 10,
PT_DialogRows_1_BlacksmithMain_BasicalItems = 12,
PT_DialogRows_1_BlacksmithMain_MagicalItems = 14,
PT_DialogRows_1_BlacksmithMain_RestockItems = 15,
PT_DialogRows_1_BlacksmithMain_SellItems = 16,
PT_DialogRows_1_BlacksmithMain_RepairItems = 18,
PT_DialogRows_1_BlacksmithMain_Leave = 20,

PT_DialogRows_5_WitchMain_Logo = 2,
PT_DialogRows_5_WitchMain_ActionLabel = 9,
PT_DialogRows_5_WitchMain_Talk = 12,
PT_DialogRows_5_WitchMain_BuyItems = 14,
PT_DialogRows_5_WitchMain_SellItems = 16,
PT_DialogRows_5_WitchMain_RechargeStaves = 18,
PT_DialogRows_5_WitchMain_Leave = 20,

PT_DialogRows_11_Confirm_Item = 8,
PT_DialogRows_11_Confirm_ConfirmQuestion = 15,
PT_DialogRows_11_Confirm_Yes = 18,
PT_DialogRows_11_Confirm_No = 20,

PT_DialogRows_12_WirtMain_Logo = 2,
PT_DialogRows_12_WirtMain_NoItem_Talk = 12,
PT_DialogRows_12_WirtMain_NoItem_Leave = 18,
PT_DialogRows_12_WirtMain_Talk = 8,
PT_DialogRows_12_WirtMain_ActionLabel1 = 12,
PT_DialogRows_12_WirtMain_ActionLabel2 = 14,
PT_DialogRows_12_WirtMain_ActionLabel3 = 16,
PT_DialogRows_12_WirtMain_BuyItem = 18,
PT_DialogRows_12_WirtMain_Leave = 20,

PT_DialogRows_13_WirtBuy_Item = 10,

PT_DialogRows_14_HealerMain_Logo1 = 1,
PT_DialogRows_14_HealerMain_Logo2 = 3,
PT_DialogRows_14_HealerMain_ActionLabel = 9,
PT_DialogRows_14_HealerMain_Talk = 12,
PT_DialogRows_14_HealerMain_BuyItems = 14,
PT_DialogRows_14_HealerMain_Leave = 16,

PT_DialogRows_15_ElderMain_Logo = 2,
PT_DialogRows_15_ElderMain_ActionLabel = 9,
PT_DialogRows_15_ElderMain_Talk = 12,
PT_DialogRows_15_ElderMain_IdentifyItems = 14,
PT_DialogRows_15_ElderMain_Leave = 18,

PT_DialogRows_20_IdentifiedItemInfo_Label = 7,
PT_DialogRows_20_IdentifiedItemInfo_Item = 11,
PT_DialogRows_20_IdentifiedItemInfo_Done = 18,

PT_DialogRows_19_Talk_Label = 2,
PT_DialogRows_19_Talk_Back = 22,

PT_DialogRows_21_OgdenMain_Logo1 = 1,
PT_DialogRows_21_OgdenMain_Logo2 = 3,
PT_DialogRows_21_OgdenMain_ActionLabel = 9,
PT_DialogRows_21_OgdenMain_Talk = 12,
PT_DialogRows_21_OgdenMain_Leave = 18,

PT_DialogRows_GilianMain_2_Logo = 2,
PT_DialogRows_GilianMain_9_ActionLabel = 9,
PT_DialogRows_GilianMain_12_Talk = 12,
PT_DialogRows_GilianMain_18_Leave = 18,

PT_DialogRows_22_FarnhamMain_Logo = 2,
PT_DialogRows_22_FarnhamMain_ActionLabel = 9,
PT_DialogRows_22_FarnhamMain_Talk = 12,
PT_DialogRows_22_FarnhamMain_Leave = 18,


PT_SomeDialogRowForMessageLog = 10,
};

enum AUTO_MAP
{
	AM_0_Flat = 0,
	AM_1_Pillar = 1,
	AM_2_WestWall = 2,
	AM_3_NorthWall = 3,
	AM_4_NorthWestCorner = 4,
	AM_5_WestEdge = 5,
	AM_6_NorthEdge = 6,
	AM_7_SouthEastEdge = 7,
	AM_8_SouthWestCorner = 8,
	AM_9_SouthEastCorner = 9,
	AM_10_SouthWall = 10,
	AM_11_EastWall = 11,
	AM_12_SouthEastRoof = 12,
	AM_F_Mask = 0xF,

	AM_B_9_WestDoor = BIT(9),
	AM_B_10_NorthDoor = BIT(10),
	AM_B_11_WestArch = BIT(11),
	AM_B_12_NorthArch = BIT(12),
	AM_B_13_WestGrate = BIT(13),
	AM_B_14_NorthGrate = BIT(14),
	AM_B_15_Roof = BIT(15),
	AM_B_16_Stairs = BIT(16),
};

enum ONSCREEN_MESSAGE
{
	OM_0_NO_MESSAGE,		// ""
	OM_1_No_automap,		// "No automap available in town"
	OM_2_area_not_cleared,	// "Not until the area is cleared..."
	OM_3_DSound_Failed,		// "Direct Sound Creation Failed"
	OM_4_battel_Notover,	// "Not until the battle is over..."
	OM_5_No_space_save,		// "Not enough space to save"
	OM_6_No_pause_town,		// "No Pause in town"
	OM_7_Copy_hard,			// "Copying to a hard disk is recommended"
	OM_8_MP_sync_problem,	// "Multiplayer sync problem"
	OM_9_No_pause_MP,		// "No pause in multiplayer"
	OM_10_Loading,			// "Loading..."
	OM_11_Saving,			// "Saving..."
	OM_12_One_can_learn,	// "One can learn only by making mistakes"
	OM_13_New_strength,		// "New strength is forged through destruction"
	OM_14_Those_who_defend,	// "Those who defend seldom attack"
	OM_15_The_sword_of,		// "The sword of justice is swift and sharp"
	OM_16_While_the_spirit,	// "While the spirit is vigilant the body thrives"
	OM_17_The_powers_of,	// "The powers of mana refocused renews"
	OM_18_Time_cannot,		// "Time cannot diminish the power of steel"
	OM_19_Magic_is_not,		// "Magic is not always what it seems to be"
	OM_20_What_once_was,	// "What once was opened now is closed"
	OM_21_Intensity_comes,	// "Intensity comes at the cost of wisdom"
	OM_22_Arcane_power,		// "Arcane power brings destruction"
	OM_23_That_not_held,	// "That which cannot be held cannot be harmed"
	OM_24_Bright_and_Dark,	// "Bright and Dark become as the sky"
	OM_25_Wisdom_may_come,	// "Wisdom may come at the cost of self"
	OM_26_Drink_and_be_ref,	// "Drink and be refreshed"
	OM_27_Magical_damage,	// "Magical damage cannot harm you"
	OM_28_Energy_comes,		// "Energy comes at the cost of wisdom"
	OM_29_Riches_abound,	// "Riches abound when least expected"
	OM_30_Where_avarice,	// "Where avarice fails, patience gains reward"
	OM_31_Blessed_by,		// "Blessed by a benevolent companion!"
	OM_32_The_hands_of_men,	// "The hands of men may be guided by fate"
	OM_33_Strength_may_be,	// "Strength may be bolstered by faith"
	OM_34_Power_may_come,	// "Power may come from knowing yourself"
	OM_35_The_way_is_made ,	// "The way is made clear when viewed from above"
	OM_36_Salvation_comes,	// "Salvation comes at the cost of wisdom"
	OM_37_Mysteries_are,	// "Mysteries are revealed in the light of reason"
	OM_38_Let_the_chips,	// "Let the chips fall where they may"
	OM_39_No_good_deed,		// "No good deed ever goes unpunished"
	OM_40_You_must_8,		// "You must be at least level 8 to go there"
	OM_41_You_must_13,		// "You must be at least level 13 to go there"
	OM_42_You_must_17,		// "You must be at least level 17 to go there"
	OM_43_Arcane_knowledge,	// "Arcane knowledge gained!"
	OM_44_That_not_kill,	// "That which does not kill you..."
	OM_45_Wisdom_comes,		// "Wisdom comes at the cost of experience"
	OM_46_Give_and_you,		// "Give and you shall receive."
	OM_47_Some_experience,	// "Some experience is gained by touch."
	OM_48_Theres_no_place,	// "There's no place like home."
	OM_49_Spiritual_energy,	// "Spiritual energy is restored"
	OM_50_You_agile,		// "You feel more agile."
	OM_51_You_stronger,		// "You feel stronger."
	OM_52_You_wiser,		// "You feel wiser."
	OM_53_You_refreshed,	// "You feel refreshed."
	OM_54_That_can_break,	// "That which can break will."
	OM_55_You_must_19,		// "You must be at least level 19 to go there"
	OM_56_You_must_20,		// "You must be at least level 20 to go there"
	OM_57_You_must_26,		// "You must be at least level 26 to go there"
	OM_58_You_must_28,		// "You must be at least level 28 to go there"
	OM_59_You_must_30,		// "You must be at least level 30 to go there"
	OM_60_You_must_32,		// "You must be at least level 32 to go there"
	OM_61_You_must_34,		// "You must be at least level 34 to go there"
	OM_62_You_must_41,		// "You must be at least level 41 to go there"
	OM_63_You_must_42,		// "You must be at least level 42 to go there"
	OM_64_You_must_43,		// "You must be at least level 43 to go there"
	OM_65_You_must_44,		// "You must be at least level 44 to go there"
	OM_66_You_must_45,		// "You must be at least level 45 to go there"
	OM_67_Talk_Tremain,		// "Not before you talk to Tremain"
	OM_68_Nightmare_Walk_Up, // "On Nightmare it's impossible to go up in levels!"
	OM_69_Portal_Shrine_Nightmare, // "Drink and gain more power."
	OM_70_Ironman_Walk_Up, // "You can't go up in Ironman mode!
	OM_71_Clear_Objects_Kill_Monsters, // "Ironman rules oblige to clear the level first."
	OM_72_Level_Cleared_Can_Save, // "Level cleared. You can save&exit."
};

enum BASE_UNIQUE: 
	#ifdef TH1
	uchar
	#else
	int
	#endif
{
	BU_0 = 0,
	BU_1_Tight_Bow = 1,
	BU_2_Long_Battle_Bow = 2,
	BU_3_Long_War_Bow = 3,
	BU_4_War_Crossbow = 4,
	BU_5_Long_Heavy_Bow = 5,
	BU_6_Precision_Bow = 6,
	BU_7_Dirk = 7,
	BU_8_Scimitar = 8,
	BU_9_Long_Sword = 9,
	BU_10_Sabre = 10,
	BU_11_Broad_Sword = 11,
	BU_12_Thorn_Sword = 12,
	BU_13_Falchion = 13,
	BU_14_Claymore = 14,
	BU_15_Barbaric_Sword = 15,
	BU_16_Cutlass = 16,
	BU_17_Full_Helm = 17,
	BU_18_Long_Staff = 18,
	BU_19_Light_Staff = 19,
	BU_20_Cleaver = 20,
	BU_21_Large_Axe = 21,
	BU_22_Huge_Axe = 22,
	BU_23_Mace = 23,
	BU_24_Morning_Star = 24,
	BU_25_Buckler = 25,
	BU_26_Heavy_Mace = 26,
	BU_27_Triple_Flail = 27,
	BU_28_Maul = 28,
	BU_29_Great_Sword = 29,
	BU_30_Katana = 30,
	BU_31_Brute_Sword = 31,
	BU_32_Double_Bladed_Staff = 32,
	BU_33_Huge_Sword = 33,
	BU_34_Leather_Cap = 34,
	BU_35_Full_Crown_or_Battle_Helmet = 35,
	BU_36_Centurion_Helmet = 36,
	BU_37_Crown = 37,
	BU_38_Ring_Mail = 38,
	BU_39_Gothic_Plate_Mail = 39,
	BU_40_Studded_Leather_Armor = 40,
	BU_41_Cloak = 41,
	BU_42_Robe = 42,
	BU_43_Thick_Mail = 43,
	BU_44_Leather_Armor = 44,
	BU_45_Breast_Plate = 45,
	BU_46_Sorceror_Plate = 46,
	BU_47_Plate_Mail = 47,
	BU_48_Full_Plate_Mail = 48,
	BU_49_Targe = 49,
	BU_50_Griffin_Shield = 50,
	BU_51_Heraldic_Shield = 51,
	BU_52_Weighted_Shield = 52,
	BU_53_Full_Shield = 53,
	BU_54_Ring = 54,
	BU_55_Tower_Shield = 55,
	BU_56_Amulet = 56,
	BU_57_Hatchet = 57,
	BU_58_War_Staff = 58,
	BU_59_Power_Shield = 59,
	BU_60_Guardian_Helm = 60,
	BU_61_Full_Length_Scalemail = 61,
	BU_62_Treasure_Map = 62,
	BU_63_Light_Helmet_or_Spectral_Elixir = 63,
	BU_64_Horned_Barbute_or_Kabuto_Helm = 64,
	BU_65_Skull_Crown = 65,
	BU_66_Flat_Axe = 66,
	BU_67_Bladed_Staff = 67,
	BU_68_Staff_of_Lazarus = 68,
	BU_69_Broad_Axe = 69,
	BU_70_Great_Plate_Mail = 70,
	BU_71_Plate_Corselet = 71,
	BU_72_Linked_Mail = 72,
	BU_73_Armet = 73,
	BU_74_Balanced_Plate_Mail = 74,
	BU_75_Heavy_Crossbow = 75,
	BU_76_Rod_of_Blood_Shaman = 76,
	BU_77_Ring = 77,
	BU_78_Mask = 78,
	BU_79_Amulet = 79,
	BU_80_Rags = 80,
	BU_81_Hard_Leather_Armor = 81,
	BU_82_Bangle = 82,
	BU_83_Small_Bow = 83,
	BU_84_Heavy_Dagger = 84,
	BU_85_Spiked_Club = 85,
	BU_86_Circlet = 86,
	BU_87_Small_Axe = 87,
	BU_88_Bangle = 88,
	BU_89_Heavy_Club = 89,
	BU_90_Alpha_Mask = 90,
	BU_91_Skull_Cap = 91,
	BU_92_Club = 92,
	BU_93_Splint_Mail = 93,
	BU_94_Golden_Elixir = 94,
	BU_95_War_Sallet = 95,
	BU_96_Ring = 96,
	BU_97_Ring = 97,
	BU_98_Acolyte_Mail = 98,
	BU_99_Amulet = 99,
	BU_100_Ring = 100,
	BU_101_Peasant_Cap = 101,
	BU_102_Pigface_Bascinet = 102,
	BU_103_Amulet = 103,
	BU_104_Arkaine_s_Valor = 104,
	BU_105_Arkaine_s_Valor = 105,
	BU_106_Arkaine_s_Valor = 106,
	BU_107_Griswold_s_Edge = 107,
	BU_108_Griswold_s_Edge = 108,
	BU_109_Griswold_s_Edge = 109,
	BU_110_Veil_of_Steel = 110,
	BU_111_Veil_of_Steel = 111,
	BU_112_Veil_of_Steel = 112,
	BU_113_Scutum = 113,
	BU_114_Gothic_Sallet = 114,
	BU_115_Wand = 115,
	BU_116_Great_Staff = 116,
	BU_117_Ring = 117,
	BU_118_Illusionist_Mask = 118,
	BU_119_Tiara = 119,
	BU_120_Rogue_s_Helmet = 120,
	BU_121_Scepter = 121,
	BU_122_Heavy_Flail = 122,
	BU_123_Keris = 123,
	BU_124_Dagger = 124,
	BU_125_Reflex_Bow = 125,
	BU_126_Heavy_Staff = 126,
	BU_127_Kite_Shield = 127,
	BU_128_Thin_Mail = 128,
	BU_129_Slayer_s_Plate = 129,
	BU_130_War_Blade = 130,
	BU_131_Great_Axe = 131,
	BU_132_Advocate_Plate = 132,
	BU_133_Thick_Plate_Mail = 133,
	BU_134_Battle_Mail = 134,
	BU_135_Sorceror_Circlet = 135,
	BU_136_War_Hammer = 136,
	BU_137_Griswold_s_Caster = 137,
	BU_138_Griswold_s_Caster = 138,
	BU_139_Griswold_s_Caster = 139,
	BU_140_Griswold_s_Tool = 140,
	BU_141_Griswold_s_Tool = 141,
	BU_142_Griswold_s_Tool = 142,
	BU_143_Griswold_s_Crusher = 143,
	BU_144_Griswold_s_Crusher = 144,
	BU_145_Griswold_s_Crusher = 145,
	BU_146_Griswold_s_Slasher = 146,
	BU_147_Griswold_s_Slasher = 147,
	BU_148_Griswold_s_Slasher = 148,
	BU_149_Griswold_s_Enchanter = 149,
	BU_150_Griswold_s_Enchanter = 150,
	BU_151_Griswold_s_Enchanter = 151,
	BU_152_Wizard_Mask = 152,
	BU_153_Assassin_s_Plate = 153,
	BU_154_Arkaine_s_Valor = 154,
	BU_155_Arkaine_s_Valor = 155,
	BU_156_Arkaine_s_Valor = 156,
	BU_157_Arkaine_s_Valor = 157,
	BU_158_Arkaine_s_Valor = 158,
	BU_159_Arkaine_s_Valor = 159,
	BU_160_Gladiator_Helmet = 160,
	BU_161_Full_Length_Cuirass = 161,
	BU_162_Warlock_Robe = 162,
	BU_163_Short_Bow = 163,
	BU_164_Crossbow = 164,
	BU_165_Gladius = 165,
	BU_166_Gothic_Shield = 166,
	BU_167_Veil_of_Steel = 167,
	BU_168_Veil_of_Steel = 168,
	BU_169_Veil_of_Steel = 169,
	BU_170_Veil_of_Steel = 170,
	BU_171_Veil_of_Steel = 171,
	BU_172_Veil_of_Steel = 172,
	BU_173_Siege_Hammer = 173,
	BU_174_Large_Mace = 174,
	BU_175_Pole_Axe = 175,
	BU_176_Bastard_Sword = 176,
	BU_177_Great_Flail = 177,
	BU_178_Short_Staff = 178,
	BU_179_Bangle = 179,
	BU_180_Bangle = 180,
	BU_181_Collar = 181,
	BU_182_Cape = 182,
	BU_183_Heavy_Bone = 183,
	BU_184_Flail = 184,
	BU_185_Light_Bow = 185,
	BU_186_Short_Knife = 186,
	BU_187_Disciple_Robe = 187,
	BU_188_Brigandine = 188,
	BU_189_Chain_Mail = 189,
	BU_190_Naginata = 190,
	BU_191_Crude_Leather_Armor = 191,
	BU_254_DEACTIVATED = 254,
	BU_255_UNIQ_END_MARKER = 255,
};
reflect_enum( BASE_UNIQUE, BU_0, BU_1_Tight_Bow, BU_2_Long_Battle_Bow, BU_3_Long_War_Bow, BU_4_War_Crossbow, BU_5_Long_Heavy_Bow, BU_6_Precision_Bow,
	BU_7_Dirk, BU_8_Scimitar, BU_9_Long_Sword, BU_10_Sabre, BU_11_Broad_Sword, BU_12_Thorn_Sword, BU_13_Falchion, BU_14_Claymore,
	BU_15_Barbaric_Sword, BU_16_Cutlass, BU_17_Full_Helm, BU_18_Long_Staff, BU_19_Light_Staff, BU_20_Cleaver, BU_21_Large_Axe,
	BU_22_Huge_Axe, BU_23_Mace, BU_24_Morning_Star, BU_25_Buckler, BU_26_Heavy_Mace, BU_27_Triple_Flail, BU_28_Maul, BU_29_Great_Sword,
	BU_30_Katana, BU_31_Brute_Sword, BU_32_Double_Bladed_Staff, BU_33_Huge_Sword, BU_34_Leather_Cap, BU_35_Full_Crown_or_Battle_Helmet,
	BU_36_Centurion_Helmet, BU_37_Crown, BU_38_Ring_Mail, BU_39_Gothic_Plate_Mail, BU_40_Studded_Leather_Armor, BU_41_Cloak,
	BU_42_Robe, BU_43_Thick_Mail, BU_44_Leather_Armor, BU_45_Breast_Plate, BU_46_Sorceror_Plate, BU_47_Plate_Mail, BU_48_Full_Plate_Mail,
	BU_49_Targe, BU_50_Griffin_Shield, BU_51_Heraldic_Shield, BU_52_Weighted_Shield, BU_53_Full_Shield, BU_54_Ring, BU_55_Tower_Shield,
	BU_56_Amulet, BU_57_Hatchet, BU_58_War_Staff, BU_59_Power_Shield, BU_60_Guardian_Helm, BU_61_Full_Length_Scalemail, BU_62_Treasure_Map,
	BU_63_Light_Helmet_or_Spectral_Elixir, BU_64_Horned_Barbute_or_Kabuto_Helm, BU_65_Skull_Crown, BU_66_Flat_Axe, BU_67_Bladed_Staff,
	BU_68_Staff_of_Lazarus, BU_69_Broad_Axe, BU_70_Great_Plate_Mail, BU_71_Plate_Corselet, BU_72_Linked_Mail, BU_73_Armet, BU_74_Balanced_Plate_Mail,
	BU_75_Heavy_Crossbow, BU_76_Rod_of_Blood_Shaman, BU_77_Ring, BU_78_Mask, BU_79_Amulet, BU_80_Rags, BU_81_Hard_Leather_Armor,
	BU_82_Bangle, BU_83_Small_Bow, BU_84_Heavy_Dagger, BU_85_Spiked_Club, BU_86_Circlet, BU_87_Small_Axe, BU_88_Bangle, BU_89_Heavy_Club,
	BU_90_Alpha_Mask, BU_91_Skull_Cap, BU_92_Club, BU_93_Splint_Mail, BU_94_Golden_Elixir, BU_95_War_Sallet, BU_96_Ring, BU_97_Ring,
	BU_98_Acolyte_Mail, BU_99_Amulet, BU_100_Ring, BU_101_Peasant_Cap, BU_102_Pigface_Bascinet, BU_103_Amulet, BU_104_Arkaine_s_Valor,
	BU_105_Arkaine_s_Valor, BU_106_Arkaine_s_Valor, BU_107_Griswold_s_Edge, BU_108_Griswold_s_Edge, BU_109_Griswold_s_Edge, BU_110_Veil_of_Steel,
	BU_111_Veil_of_Steel, BU_112_Veil_of_Steel, BU_113_Scutum, BU_114_Gothic_Sallet, BU_115_Wand, BU_116_Great_Staff, BU_117_Ring,
	BU_118_Illusionist_Mask, BU_119_Tiara, BU_120_Rogue_s_Helmet, BU_121_Scepter, BU_122_Heavy_Flail, BU_123_Keris, BU_124_Dagger,
	BU_125_Reflex_Bow, BU_126_Heavy_Staff, BU_127_Kite_Shield, BU_128_Thin_Mail, BU_129_Slayer_s_Plate, BU_130_War_Blade, BU_131_Great_Axe,
	BU_132_Advocate_Plate, BU_133_Thick_Plate_Mail, BU_134_Battle_Mail, BU_135_Sorceror_Circlet, BU_136_War_Hammer, BU_137_Griswold_s_Caster,
	BU_138_Griswold_s_Caster, BU_139_Griswold_s_Caster, BU_140_Griswold_s_Tool, BU_141_Griswold_s_Tool, BU_142_Griswold_s_Tool,
	BU_143_Griswold_s_Crusher, BU_144_Griswold_s_Crusher, BU_145_Griswold_s_Crusher, BU_146_Griswold_s_Slasher, BU_147_Griswold_s_Slasher,
	BU_148_Griswold_s_Slasher, BU_149_Griswold_s_Enchanter, BU_150_Griswold_s_Enchanter, BU_151_Griswold_s_Enchanter, BU_152_Wizard_Mask,
	BU_153_Assassin_s_Plate, BU_154_Arkaine_s_Valor, BU_155_Arkaine_s_Valor, BU_156_Arkaine_s_Valor, BU_157_Arkaine_s_Valor,
	BU_158_Arkaine_s_Valor, BU_159_Arkaine_s_Valor, BU_160_Gladiator_Helmet, BU_161_Full_Length_Cuirass, BU_162_Warlock_Robe,
	BU_163_Short_Bow, BU_164_Crossbow, BU_165_Gladius, BU_166_Gothic_Shield, BU_167_Veil_of_Steel, BU_168_Veil_of_Steel, BU_169_Veil_of_Steel,
	BU_170_Veil_of_Steel, BU_171_Veil_of_Steel, BU_172_Veil_of_Steel, BU_173_Siege_Hammer, BU_174_Large_Mace, BU_175_Pole_Axe,
	BU_176_Bastard_Sword, BU_177_Great_Flail, BU_178_Short_Staff, BU_179_Bangle, BU_180_Bangle, BU_181_Collar, BU_182_Cape, BU_183_Heavy_Bone,
	BU_184_Flail, BU_185_Light_Bow, BU_186_Short_Knife, BU_187_Disciple_Robe, BU_188_Brigandine, BU_189_Chain_Mail, BU_190_Naginata,
	BU_254_DEACTIVATED, BU_255_UNIQ_END_MARKER );

enum ATTACK_TYPE: uchar
{
	AT_0 = 0,
	AT_1 = 1,
	AT_2 = 2,
	AT_3 = 3,
	AT_4 = 4,
	AT_5 = 5,
	AT_6 = 6,
	AT_7 = 7,
	AT_8 = 8,
	AT_9 = 9,
	AT_10 = 10,
	AT_11 = 11,
	AT_12 = 12,
	AT_13 = 13,
	AT_14 = 14,
	AT_15 = 15,
	AT_16 = 16,
	AT_17 = 17,
	AT_18 = 18,
	AT_19 = 19,
	AT_20 = 20,
	AT_21 = 21,
	AT_22 = 22,
	AT_23 = 23,
	AT_24 = 24,
	AT_25 = 25,
	AT_26 = 26,
	AT_27 = 27,
	AT_28 = 28,
	AT_29 = 29,
	AT_30 = 30,
	AT_31 = 31,
	AT_32 = 32,
	AT_33 = 33,
	AT_34 = 34,
	AT_35 = 35,
	AT_36 = 36,
	AT_37 = 37,
	AT_38 = 38,
	AT_39 = 39
};

constexpr int CELL_SIZE = 28;
constexpr int KEY_SIZE = 16;
#ifdef HIRES
constexpr int Y_SIZE = 4096; 
#else
constexpr int Y_SIZE = 1024;
#endif

// storm enums

// Game states
#define GAMESTATE_PRIVATE 0x01
#define GAMESTATE_FULL    0x02
#define GAMESTATE_ACTIVE  0x04
#define GAMESTATE_STARTED 0x08
#define GAMESTATE_REPLAY  0x80

// Game info fields
#define GAMEINFO_NAME           1
#define GAMEINFO_PASSWORD       2
#define GAMEINFO_STATS          3
#define GAMEINFO_MODEFLAG       4
#define GAMEINFO_GAMETEMPLATE   5
#define GAMEINFO_PLAYERS        6

// Traffic flags
#define STRAFFIC_NORMAL 0
#define STRAFFIC_VERIFY 1
#define STRAFFIC_RESEND 2
#define STRAFFIC_REPLY  4

// Values for arrayplayerstatus
#define SNET_PS_OK             0
#define SNET_PS_WAITING        2
#define SNET_PS_NOTRESPONDING  3
#define SNET_PS_UNKNOWN        default

// Macro values to target specific players
#define SNPLAYER_ALL    -1
#define SNPLAYER_OTHERS -2

#define SNET_GAME_RESULT_WIN        1
#define SNET_GAME_RESULT_LOSS       2
#define SNET_GAME_RESULT_DRAW       3
#define SNET_GAME_RESULT_DISCONNECT 4

// values for dwFlags
enum MPQFlags
{
	MPQ_NO_LISTFILE = 0x0010,
	MPQ_NO_ATTRIBUTES = 0x0020,
	MPQ_FORCE_V1 = 0x0040,
	MPQ_CHECK_SECTOR_CRC = 0x0080
};

// values for dwSearchScope
enum SFileFlags
{
	SFILE_FROM_MPQ = 0x00000000,
	SFILE_FROM_ABSOLUTE = 0x00000001,
	SFILE_FROM_RELATIVE = 0x00000002,
	SFILE_FROM_DISK = 0x00000004
};

enum SUPER_GAME_MODE
{
	SGM_NORMAL = 0,
	SGM_NIGHTMARE = 1,
	SGM_IRONMAN = 2,
	SGM_HARDCORE = 3,
	SGM_OVERTIME = 4,
	SGM_COUNT
};

#define SBMP_DEFAULT  0
#define SBMP_BMP      1
#define SBMP_PCX      2
#define SBMP_TGA      3

// Can be provided instead of logline/__LINE__ parameter to indicate different errors.
#define SLOG_EXPRESSION    0
#define SLOG_FUNCTION     -1
#define SLOG_OBJECT       -2
#define SLOG_HANDLE       -3
#define SLOG_FILE         -4
#define SLOG_EXCEPTION    -5

// Default behaviour checks both HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER
// relative to the "Software\\Blizzard Entertainment\\" key in both hives.
#define SREG_NONE                   0x00000000
#define SREG_EXCLUDE_LOCAL_MACHINE  0x00000001  // excludes checking the HKEY_LOCAL_MACHINE hive
#define SREG_BATTLE_NET             0x00000002  // sets the relative key to "Software\\Battle.net\\" instead
#define SREG_EXCLUDE_CURRENT_USER   0x00000004  // excludes checking the HKEY_CURRENT_USER hive
#define SREG_ABSOLUTE               0x00000010  // specifies that the key is not a relative key

// Values for dwErrCode
#define STORM_ERROR_ASSERTION                    0x85100000
#define STORM_ERROR_BAD_ARGUMENT                 0x85100065
#define STORM_ERROR_GAME_ALREADY_STARTED         0x85100066
#define STORM_ERROR_GAME_FULL                    0x85100067
#define STORM_ERROR_GAME_NOT_FOUND               0x85100068
#define STORM_ERROR_GAME_TERMINATED              0x85100069
#define STORM_ERROR_INVALID_PLAYER               0x8510006a
#define STORM_ERROR_NO_MESSAGES_WAITING          0x8510006b
#define STORM_ERROR_NOT_ARCHIVE                  0x8510006c
#define STORM_ERROR_NOT_ENOUGH_ARGUMENTS         0x8510006d
#define STORM_ERROR_NOT_IMPLEMENTED              0x8510006e
#define STORM_ERROR_NOT_IN_ARCHIVE               0x8510006f
#define STORM_ERROR_NOT_IN_GAME                  0x85100070
#define STORM_ERROR_NOT_INITIALIZED              0x85100071
#define STORM_ERROR_NOT_PLAYING                  0x85100072
#define STORM_ERROR_NOT_REGISTERED               0x85100073
#define STORM_ERROR_REQUIRES_CODEC1              0x85100074
#define STORM_ERROR_REQUIRES_CODEC2              0x85100075
#define STORM_ERROR_REQUIRES_CODEC3              0x85100076
#define STORM_ERROR_REQUIRES_UPGRADE             0x85100077
#define STORM_ERROR_STILL_ACTIVE                 0x85100078
#define STORM_ERROR_VERSION_MISMATCH             0x85100079
#define STORM_ERROR_MEM_NOT_ALLOCATED            0x8510007a
#define STORM_ERROR_MEM_CORRUPTED                0x8510007b
#define STORM_ERROR_MEM_INVALID                  0x8510007c
#define STORM_ERROR_MEM_MANAGER_NOT_INITIALIZED  0x8510007d
#define STORM_ERROR_MEM_NOT_FREED                0x8510007e
#define STORM_ERROR_RESOURCES_NOT_RELEASED       0x8510007f
#define STORM_ERROR_OUT_OF_BOUNDS                0x85100080
#define STORM_ERROR_NULL_POINTER                 0x85100081
#define STORM_ERROR_CDKEY_MISMATCH               0x85100082
#define STORM_ERROR_FILE_CORRUPTED               0x85100083
#define STORM_ERROR_FATAL                        0x85100084
#define STORM_ERROR_GAMETYPE_UNAVAILABLE         0x85100085

#define ID_MPQ			'\x1AQPM'	// MPQ→ archive header ID
#define ID_MPQ_SHUNT	'\x1BQPM'	// MPQ← shunt entry
